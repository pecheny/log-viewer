// Generated by Haxe 3.4.0 (git build development @ c9352fa)
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10?"0" + m:"" + m) + "-" + (d < 10?"0" + d:"" + d) + " " + (h < 10?"0" + h:"" + h) + ":" + (mi < 10?"0" + mi:"" + mi) + ":" + (s < 10?"0" + s:"" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.exists = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) if(f(x.next())) {
		return true;
	}
	return false;
};
var List = function() {
	this.length = 0;
};
List.__name__ = true;
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = true;
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
_$List_ListIterator.__name__ = true;
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var LoggerAppModel = function() {
	this.filtered = [];
	this.statuses = new components_StatusesRotator();
};
LoggerAppModel.__name__ = true;
LoggerAppModel.prototype = {
	updateData: function() {
		var sessions = this.parser.getLogs();
		var tmp = this.controls;
		var _g = [];
		var key = sessions.keys();
		while(key.hasNext()) _g.push(key.next());
		tmp.setSessions(_g);
		this.setSession(sessions.keys().next());
	}
	,getData: function() {
		return this.data;
	}
	,setSession: function(name) {
		this.warnLevel = 0;
		var sessions = this.parser.getLogs();
		var session = __map_reserved[name] != null?sessions.getReserved(name):sessions.h[name];
		if(session == null) {
			return;
		}
		try {
			session.parse();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.setStatus(e);
		}
		this.data = session.getRecords();
		console.log("Count: " + this.data.length);
		var extr = new format_PlameeLogDataExtractor();
		var _g = 0;
		var _g1 = this.data;
		while(_g < _g1.length) {
			var rec = _g1[_g];
			++_g;
			this.updateWarnLevel(rec.level);
			extr.processMessage(rec.message);
		}
		this.setStatus("Build version: " + extr.build + " Defs: " + extr.defs);
		this.updateColors();
		this.controls.setTags(this.collectTags());
		this.controls.setWarnLevel(this.warnLevel);
		this.content.loadData(this.getFilteredData());
	}
	,updateWarnLevel: function(l) {
		if(l > this.warnLevel) {
			this.warnLevel = l;
		}
	}
	,getFilteredData: function(forceUpdate) {
		if(forceUpdate == null) {
			forceUpdate = true;
		}
		if(!forceUpdate) {
			return this.filtered;
		}
		this.filtered = [];
		var filters = [this.controls.getTagFilter(),this.controls.getSubstringFilter(),this.controls.getLogLevelFilter()];
		var andFilter = function(rec) {
			var _g = 0;
			while(_g < filters.length) {
				var f = filters[_g];
				++_g;
				if(!f(rec)) {
					return false;
				}
			}
			return true;
		};
		var _g1 = 0;
		var _g11 = this.data;
		while(_g1 < _g11.length) {
			var rec1 = _g11[_g1];
			++_g1;
			if(andFilter(rec1)) {
				this.filtered.push(rec1);
			}
		}
		return this.filtered;
	}
	,updateFilters: function() {
		var data = this.getFilteredData();
		this.content.loadData(data);
		if(this.selectedRec != null) {
			var id = data.indexOf(this.selectedRec);
			if(id > -1) {
				this.content.scrollToRec(id);
			}
		}
	}
	,updateColors: function() {
		var tags = this.collectTags();
		var _g1 = 0;
		var _g = tags.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.colorProvider.hasMapping(tags[i])) {
				continue;
			}
			this.colorProvider.setColorMapping(tags[i],view_ColorRecords.theme[i]);
		}
	}
	,collectTags: function() {
		var tags = [];
		var _g = 0;
		var _g1 = this.data;
		while(_g < _g1.length) {
			var rec = _g1[_g];
			++_g;
			if(tags.indexOf(rec.tag) < 0) {
				tags.push(rec.tag);
			}
		}
		return tags;
	}
	,select: function(id) {
		var rec = this.getFilteredData(false)[id];
		this.selectedRec = rec;
		this.setMessage(rec.message);
	}
	,setMessage: function(msg) {
		this.message.setMessage(msg);
	}
	,getFullSessionLog: function() {
		var log = "";
		var _g = 0;
		var _g1 = this.data;
		while(_g < _g1.length) {
			var rec = _g1[_g];
			++_g;
			log += "Log ---" + rec.time + "--- " + rec.tag + " " + rec.message;
		}
		return log;
	}
	,setStatus: function(s) {
		this.statuses.addStatus(s);
		this.controls.setStatus(this.statuses.getLines());
	}
	,__class__: LoggerAppModel
};
var MainBuild7 = function() { };
MainBuild7.__name__ = true;
MainBuild7.main = function() {
	$(function() {
		Type.createInstance(PriDemoApp,[]);
	});
};
Math.__name__ = true;
var NarcosLogParser = function() {
	this.reset();
};
NarcosLogParser.__name__ = true;
NarcosLogParser.prototype = {
	addFile: function(name,file) {
		this.getSession(this.getSessionId(name)).addFile(this.getNumInSession(name),file);
	}
	,reset: function() {
		this.sessions = new haxe_ds_StringMap();
	}
	,getLogs: function() {
		return this.sessions;
	}
	,isFilenameValid: function(name) {
		var parts = name.split("#");
		if(parts.length == 2 && parts[0].length > 0) {
			return parts[1].length > 0;
		} else {
			return false;
		}
	}
	,getSession: function(sessionId) {
		var _this = this.sessions;
		if(!(__map_reserved[sessionId] != null?_this.existsReserved(sessionId):_this.h.hasOwnProperty(sessionId))) {
			var this1 = this.sessions;
			var value = new data_SessionLog(sessionId);
			var _this1 = this1;
			if(__map_reserved[sessionId] != null) {
				_this1.setReserved(sessionId,value);
			} else {
				_this1.h[sessionId] = value;
			}
		}
		var _this2 = this.sessions;
		if(__map_reserved[sessionId] != null) {
			return _this2.getReserved(sessionId);
		} else {
			return _this2.h[sessionId];
		}
	}
	,getSessionId: function(filename) {
		return filename.split("#")[0];
	}
	,getNumInSession: function(filename) {
		return Std.parseInt(filename.split("#")[1]);
	}
	,__class__: NarcosLogParser
};
var priori_event_PriEventDispatcher = function() {
	this._isKilled = false;
	this._eventTypeList = [];
	this._eventList = [];
};
priori_event_PriEventDispatcher.__name__ = true;
priori_event_PriEventDispatcher.prototype = {
	hasEvent: function(event) {
		if(this._eventTypeList.indexOf(event) > -1) {
			return true;
		}
		return false;
	}
	,addEventListener: function(event,listener) {
		this._eventList.push({ eventType : event, eventListener : listener});
		if(this._eventTypeList.indexOf(event) == -1) {
			this._eventTypeList.push(event);
		}
	}
	,removeEventListener: function(event,listener) {
		var itensToRemove = [];
		var alreadyHasSameEvent = false;
		var _g1 = 0;
		var _g = this._eventList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._eventList[i].eventType == event && this._eventList[i].eventListener == listener) {
				itensToRemove.push(this._eventList[i]);
			} else if(!alreadyHasSameEvent) {
				if(this._eventList[i].eventType == event) {
					alreadyHasSameEvent = true;
				}
			}
		}
		var _g11 = 0;
		var _g2 = itensToRemove.length;
		while(_g11 < _g2) HxOverrides.remove(this._eventList,itensToRemove[_g11++]);
		if(!alreadyHasSameEvent) {
			HxOverrides.remove(this._eventTypeList,event);
		}
	}
	,removeAllEventListenersFromType: function(event) {
		var itensToRemove = [];
		var _g1 = 0;
		var _g = this._eventList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._eventList[i].eventType == event) {
				itensToRemove.push(this._eventList[i]);
			}
		}
		var _g11 = 0;
		var _g2 = itensToRemove.length;
		while(_g11 < _g2) HxOverrides.remove(this._eventList,itensToRemove[_g11++]);
		HxOverrides.remove(this._eventTypeList,event);
	}
	,dispatchEvent: function(event) {
		if(this.isKilled()) {
			return;
		}
		var temporaryEventList = this._eventList.slice();
		var clone = null;
		if(event.currentTarget == null) {
			event.currentTarget = this;
		}
		var _g1 = 0;
		var _g = temporaryEventList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(temporaryEventList[i].eventType == event.type) {
				clone = event.clone();
				event.target = this;
				temporaryEventList[i].eventListener(clone);
				if(clone.propagate) {
					var cloneForPropagate = clone.clone();
					cloneForPropagate.bubble = false;
					this.propagateEvent(cloneForPropagate);
				}
				if(clone.bubble) {
					var cloneForBubble = clone.clone();
					cloneForBubble.propagate = false;
					this.bubbleEvent(cloneForBubble);
				}
			}
		}
		if(clone == null) {
			clone = event.clone();
			clone.bubble = false;
			if(clone.propagate) {
				this.propagateEvent(clone);
			}
			clone = null;
		}
		if(clone == null) {
			clone = event.clone();
			clone.propagate = false;
			if(clone.bubble) {
				this.bubbleEvent(clone);
			}
		}
	}
	,bubbleEvent: function(event) {
		if(!this.isKilled() && js_Boot.__instanceof(this,priori_view_PriDisplay)) {
			var itemParent = (js_Boot.__cast(this , priori_view_PriDisplay)).get_parent();
			if(itemParent != null) {
				itemParent.dispatchEvent(event);
			}
		}
	}
	,propagateEvent: function(event) {
		if(!this.isKilled() && js_Boot.__instanceof(this,priori_view_container_PriContainer)) {
			var container = js_Boot.__cast(this , priori_view_container_PriContainer);
			var item;
			var i = 0;
			var n = container.get_numChildren();
			while(i < n) {
				item = container.getChild(i);
				if(item != null) {
					item.dispatchEvent(event);
				}
				++i;
			}
		}
	}
	,isKilled: function() {
		return this._isKilled;
	}
	,kill: function() {
		this._eventList = [];
		this._eventTypeList = [];
		this._isKilled = true;
	}
	,__class__: priori_event_PriEventDispatcher
};
var priori_view_PriDisplay = function() {
	this.___height = 100;
	this.___width = 100;
	this._scaleY = 1;
	this._scaleX = 1;
	this._rotation = 0;
	this._anchorY = 0.5;
	this._anchorX = 0.5;
	this._alpha = 1;
	this._disabled = false;
	priori_event_PriEventDispatcher.call(this);
	this._specialEventStack = [];
	this._specialEventList = [];
	this._priId = this.getRandomId();
	this.createElement();
	this.__eventHelper = new helper_browser_BrowserEventEngine();
	this.__eventHelper.jqel = this._element;
	this.__eventHelper.jsel = this._jselement;
	this.__eventHelper.display = this;
	this.addEventListener(priori_event_PriEvent.ADDED_TO_APP,($_=this.__eventHelper,$bind($_,$_.onAddedToApp)));
	this.addEventListener(priori_event_PriEvent.ADDED,$bind(this,this.__onAdded));
};
priori_view_PriDisplay.__name__ = true;
priori_view_PriDisplay.__super__ = priori_event_PriEventDispatcher;
priori_view_PriDisplay.prototype = $extend(priori_event_PriEventDispatcher.prototype,{
	__onAdded: function(e) {
		this.updateDepth();
		this.updateBorderDisplay();
	}
	,set_corners: function(value) {
		this.corners = value;
		if(value == null) {
			this.getElement().css("border-radius","");
		} else {
			var tempArray = value.slice();
			var n = tempArray.length;
			if(n == 0) {
				this.getElement().css("border-radius","");
			} else {
				if(n > 4) {
					tempArray = tempArray.splice(0,4);
				}
				this.getElement().css("border-radius",tempArray.join("px ") + "px");
			}
		}
		return value;
	}
	,set_tooltip: function(value) {
		this.tooltip = value;
		this.getElement().attr("title",value == ""?null:value);
		return value;
	}
	,set_border: function(value) {
		this.border = value;
		if(value == null) {
			this.removeBorder();
		} else {
			this.applyBorder();
		}
		return value;
	}
	,set_shadow: function(value) {
		this.shadow = value;
		var shadowString = "";
		if(value != null && value.length > 0) {
			shadowString = value.join(",");
		}
		this.setCSS("-webkit-box-shadow",shadowString);
		this.setCSS("-moz-box-shadow",shadowString);
		this.setCSS("-o-box-shadow",shadowString);
		this.setCSS("box-shadow",shadowString);
		return value;
	}
	,set_filter: function(value) {
		this.filter = value;
		var filterString = "";
		if(value != null) {
			filterString = value.toString();
		}
		this.setCSS("-webkit-filter",filterString);
		this.setCSS("-ms-filter",filterString);
		this.setCSS("-o-filter",filterString);
		this.setCSS("filter",filterString);
		return value;
	}
	,applyBorder: function() {
		if(this._elementBorder == null) {
			this._elementBorder = $("<div style=\"\r\n                box-sizing:border-box !important;\r\n                position:absolute;\r\n                width:inherit;\r\n                height:inherit;\r\n                pointer-events:none;\"></div>");
			this.getElement().append(this._elementBorder);
			this.addEventListener(priori_event_PriEvent.SCROLL,$bind(this,this.onScrollUpdateBorder));
		}
		this._elementBorder.css("border",this.border.toString());
		this.updateBorderDisplay();
	}
	,onScrollUpdateBorder: function(e) {
		this.updateBorderDisplay();
	}
	,updateBorderDisplay: function() {
		if(this._elementBorder != null) {
			this._elementBorder.css("top",this.getElement().scrollTop() + "px");
			this._elementBorder.css("left",this.getElement().scrollLeft() + "px");
			this._elementBorder.css("border-radius",this.getElement().css("border-radius"));
			this._elementBorder.css("z-index",this.getElement().css("z-index"));
		}
	}
	,removeBorder: function() {
		if(this._elementBorder != null) {
			this.removeEventListener(priori_event_PriEvent.SCROLL,$bind(this,this.onScrollUpdateBorder));
			this._elementBorder.remove();
			this._elementBorder = null;
		}
	}
	,get_clipping: function() {
		if(this.getCSS("overflow") == "hidden") {
			return true;
		}
		return false;
	}
	,set_clipping: function(value) {
		if(value) {
			this.setCSS("overflow","hidden");
		} else {
			this.setCSS("overflow","");
		}
		return value;
	}
	,getRandomId: function(len) {
		if(len == null) {
			len = 7;
		}
		var charactersToUse = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
		var result = "";
		result = "";
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			_g1++;
			result += charactersToUse.charAt(Math.floor(charactersToUse.length * Math.random()));
		}
		result += "_" + new Date().getTime();
		return result;
	}
	,getOutDOMDimensions: function() {
		var w = 0;
		var h = 0;
		var clone = this._element.clone(false);
		$("body").append(clone);
		w = clone.width();
		h = clone.height();
		clone.remove();
		clone = null;
		return { w : w, h : h};
	}
	,get_widthScaled: function() {
		return this.get_width() * this._scaleX;
	}
	,set_widthScaled: function(value) {
		this.set_scaleX(value / this.get_width());
		return value;
	}
	,get_heightScaled: function() {
		return this.get_height() * this._scaleY;
	}
	,set_heightScaled: function(value) {
		this.set_scaleY(value / this.get_height());
		return value;
	}
	,set_width: function(value) {
		this.___width = value;
		if(value == null) {
			this.setCSS("width","");
		} else {
			this.setCSS("width",(value | 0) + "px");
		}
		return value;
	}
	,get_width: function() {
		var result = this.___width;
		if(result == null) {
			result = this._element.width();
			if(result == 0 && !this.hasApp()) {
				result = this.getOutDOMDimensions().w;
			}
		}
		return result;
	}
	,set_height: function(value) {
		this.___height = value;
		if(value == null) {
			this.setCSS("height","");
		} else {
			this.setCSS("height",(value | 0) + "px");
		}
		return value;
	}
	,get_height: function() {
		var result = this.___height;
		if(result == null) {
			result = this._element.height();
			if(result == 0 && !this.hasApp()) {
				result = this.getOutDOMDimensions().h;
			}
		}
		return result;
	}
	,get_maxX: function() {
		return this.get_x() + this.get_width();
	}
	,set_maxX: function(value) {
		this.set_x(value - this.get_width());
		return value;
	}
	,get_maxY: function() {
		return this.get_y() + this.get_height();
	}
	,set_maxY: function(value) {
		this.set_y(value - this.get_height());
		return value;
	}
	,set_centerX: function(value) {
		this.set_x(value - this.get_width() / 2);
		return value;
	}
	,get_centerX: function() {
		return this.get_x() + this.get_width() / 2;
	}
	,set_centerY: function(value) {
		this.set_y(value - this.get_height() / 2);
		return value;
	}
	,get_centerY: function() {
		return this.get_y() + this.get_height() / 2;
	}
	,set_x: function(value) {
		var tmp = value.toString(10);
		this.getJSElement().style.left = tmp + "px";
		return value;
	}
	,get_x: function() {
		return Std.parseInt(this.getJSElement().style.left.split("px")[0]);
	}
	,set_y: function(value) {
		var tmp = value.toString(10);
		this.getJSElement().style.top = tmp + "px";
		return value;
	}
	,get_y: function() {
		return Std.parseInt(this.getJSElement().style.top.split("px")[0]);
	}
	,get_scaleX: function() {
		return this._scaleX;
	}
	,set_scaleX: function(value) {
		this._scaleX = value == null?1:value;
		this.__applyMatrixTransformation();
		return value;
	}
	,get_scaleY: function() {
		return this._scaleY;
	}
	,set_scaleY: function(value) {
		this._scaleY = value == null?1:value;
		this.__applyMatrixTransformation();
		return value;
	}
	,get_anchorX: function() {
		return this._anchorX;
	}
	,set_anchorX: function(value) {
		this._anchorX = value == null?0:value;
		this.__applyMatrixTransformation();
		return value;
	}
	,get_anchorY: function() {
		return this._anchorY;
	}
	,set_anchorY: function(value) {
		this._anchorY = value == null?0:value;
		this.__applyMatrixTransformation();
		return value;
	}
	,get_rotation: function() {
		return this._rotation;
	}
	,set_rotation: function(value) {
		this._rotation = value == null?0:value;
		this.__applyMatrixTransformation();
		return value;
	}
	,__applyMatrixTransformation: function() {
		var rot = this._rotation;
		var sx = this._scaleX;
		var sy = this._scaleY;
		var valOrigin = "";
		var valMatrix = "";
		if(sx != 1 || sy != 1 || rot != 0) {
			var angle = rot * (Math.PI / 180);
			var aSin = Math.sin(angle);
			var aCos = Math.cos(angle);
			var m1 = [[aCos,-aSin,0],[aSin,aCos,0],[0,0,1]];
			var m2_0 = [sx,0,0];
			var m2_1 = [0,sy,0];
			var m2_2 = [0,0,1];
			var calc = function(row,col) {
				return m1[row][0] * m2_0[col] + m1[row][1] * m2_1[col] + m1[row][2] * m2_2[col];
			};
			valOrigin = "" + this._anchorX * 100 + "% " + this._anchorY * 100 + "%";
			valMatrix = "matrix(" + calc(0,0) + ", " + calc(1,0) + ", " + calc(0,1) + ", " + calc(1,1) + ", " + calc(0,2) + ", " + calc(1,2) + ")";
		}
		this.setCSS("-ms-transform-origin",valOrigin);
		this.setCSS("-webkit-transform-origin",valOrigin);
		this.setCSS("transform-origin",valOrigin);
		this.setCSS("-ms-transform",valMatrix);
		this.setCSS("-webkit-transform",valMatrix);
		this.setCSS("transform",valMatrix);
	}
	,get_alpha: function() {
		return this._alpha;
	}
	,set_alpha: function(value) {
		this._alpha = value;
		if(this._alpha == 1) {
			this.setCSS("opacity","");
		} else {
			this.setCSS("opacity",value == null?"null":"" + value);
		}
		return value;
	}
	,hasApp: function() {
		var app = priori_app_PriApp.g();
		if(this == app) {
			return true;
		} else if(this._parent == null) {
			return false;
		} else if(this._parent == app) {
			return true;
		} else {
			return this._parent.hasApp();
		}
	}
	,get_parent: function() {
		return this._parent;
	}
	,getPrid: function() {
		return this._priId;
	}
	,updateDepth: function() {
		var dep = this.getElement().parents().length;
		this.getElement().css("z-index",1000 - dep);
		if(this._elementBorder != null) {
			this._elementBorder.css("z-index",1000 - dep);
		}
	}
	,getJSElement: function() {
		return this._jselement;
	}
	,getElement: function() {
		return this._element;
	}
	,setCSS: function(property,value) {
		this._element.css(property,value);
	}
	,getCSS: function(property) {
		return this.getElement().css(property);
	}
	,set_bgColor: function(value) {
		this.bgColor = value;
		if(value == null) {
			this.setCSS("background-color","");
		} else {
			this.setCSS("background-color","#" + StringTools.hex(value,6));
		}
		return value;
	}
	,addEventListener: function(event,listener) {
		if(event == priori_event_PriTapEvent.TAP_START && this._specialEventList.indexOf(event) == -1) {
			this.addSpecialEvent(priori_event_PriTapEvent.TAP_START,$bind(this,this._onJTouch_tapstart));
		} else if(event == priori_event_PriTapEvent.TAP_END && this._specialEventList.indexOf(event) == -1) {
			this.addSpecialEvent(priori_event_PriTapEvent.TAP_END,$bind(this,this._onJTouch_tapend));
		} else if(event == priori_event_PriTapEvent.TAP_MOVE && this._specialEventList.indexOf(event) == -1) {
			this.addSpecialEvent(priori_event_PriTapEvent.TAP_MOVE,$bind(this,this._onJTouch_tapmove));
		}
		if(event == priori_event_PriSwipeEvent.SWIPE && this._specialEventList.indexOf(event) == -1) {
			this.addSpecialEvent(priori_event_PriSwipeEvent.SWIPE,$bind(this,this._onJTouch_swipe));
		} else if(event == priori_event_PriSwipeEvent.SWIPE_UP && this._specialEventList.indexOf(event) == -1) {
			this.addSpecialEvent(priori_event_PriSwipeEvent.SWIPE_UP,$bind(this,this._onJTouch_swipeup));
		} else if(event == priori_event_PriSwipeEvent.SWIPE_RIGHT && this._specialEventList.indexOf(event) == -1) {
			this.addSpecialEvent(priori_event_PriSwipeEvent.SWIPE_RIGHT,$bind(this,this._onJTouch_swiperight));
		} else if(event == priori_event_PriSwipeEvent.SWIPE_DOWN && this._specialEventList.indexOf(event) == -1) {
			this.addSpecialEvent(priori_event_PriSwipeEvent.SWIPE_DOWN,$bind(this,this._onJTouch_swipedown));
		} else if(event == priori_event_PriSwipeEvent.SWIPE_LEFT && this._specialEventList.indexOf(event) == -1) {
			this.addSpecialEvent(priori_event_PriSwipeEvent.SWIPE_LEFT,$bind(this,this._onJTouch_swipeleft));
		} else if(event == priori_event_PriSwipeEvent.SWIPE_END && this._specialEventList.indexOf(event) == -1) {
			this.addSpecialEvent(priori_event_PriSwipeEvent.SWIPE_END,$bind(this,this._onJTouch_swipeend));
		}
		this.__eventHelper.registerEvent(event);
		if(event == "click") {
			this.set_pointer(true);
		}
		priori_event_PriEventDispatcher.prototype.addEventListener.call(this,event,listener);
	}
	,removeEventListener: function(event,listener) {
		priori_event_PriEventDispatcher.prototype.removeEventListener.call(this,event,listener);
		if(event == "click" && this.hasEvent("click") == false) {
			this.set_pointer(false);
		}
	}
	,addSpecialEvent: function(event,callback) {
		this._specialEventList.push(event);
		this._specialEventStack.push({ event : event, callback : callback});
		$("body").on(event,"#" + this.getPrid(),callback);
	}
	,killSpecialEvents: function() {
		var i = 0;
		var n = this._specialEventStack.length;
		while(i < n) {
			$("body").off(this._specialEventStack[i].event,"#" + this._priId,this._specialEventStack[i].callback);
			++i;
		}
		this._specialEventList = [];
		this._specialEventStack = [];
	}
	,_onJTouch_tapstart: function(e,touch) {
		e.stopPropagation();
		var event = new priori_event_PriTapEvent(priori_event_PriTapEvent.TAP_START,false);
		if(!this.get_disabled()) {
			this.dispatchEvent(event);
		}
	}
	,_onJTouch_tapend: function(e,touch) {
		e.stopPropagation();
		var event = new priori_event_PriTapEvent(priori_event_PriTapEvent.TAP_END,false);
		if(!this.get_disabled()) {
			this.dispatchEvent(event);
		}
	}
	,_onJTouch_tapmove: function(e,touch) {
		e.stopPropagation();
		var event = new priori_event_PriTapEvent(priori_event_PriTapEvent.TAP_MOVE,false);
		if(!this.get_disabled()) {
			this.dispatchEvent(event);
		}
	}
	,_onJTouch_swipe: function(e,touch) {
		e.stopPropagation();
		var event = new priori_event_PriTapEvent(priori_event_PriSwipeEvent.SWIPE,false);
		if(!this.get_disabled()) {
			this.dispatchEvent(event);
		}
	}
	,_onJTouch_swipeup: function(e,touch) {
		e.stopPropagation();
		var event = new priori_event_PriTapEvent(priori_event_PriSwipeEvent.SWIPE_UP,false);
		if(!this.get_disabled()) {
			this.dispatchEvent(event);
		}
	}
	,_onJTouch_swiperight: function(e,touch) {
		e.stopPropagation();
		var event = new priori_event_PriTapEvent(priori_event_PriSwipeEvent.SWIPE_RIGHT,false);
		if(!this.get_disabled()) {
			this.dispatchEvent(event);
		}
	}
	,_onJTouch_swipedown: function(e,touch) {
		e.stopPropagation();
		var event = new priori_event_PriTapEvent(priori_event_PriSwipeEvent.SWIPE_DOWN,false);
		if(!this.get_disabled()) {
			this.dispatchEvent(event);
		}
	}
	,_onJTouch_swipeleft: function(e,touch) {
		e.stopPropagation();
		var event = new priori_event_PriTapEvent(priori_event_PriSwipeEvent.SWIPE_LEFT,false);
		if(!this.get_disabled()) {
			this.dispatchEvent(event);
		}
	}
	,_onJTouch_swipeend: function(e,touch) {
		e.stopPropagation();
		var event = new priori_event_PriTapEvent(priori_event_PriSwipeEvent.SWIPE_END,false);
		if(!this.get_disabled()) {
			this.dispatchEvent(event);
		}
	}
	,createElement: function() {
		var jsElement = window.document.createElement("div");
		jsElement.setAttribute("id",this._priId);
		jsElement.setAttribute("prioriid",this._priId);
		jsElement.setAttribute("style","left:0px;top:0px;width:" + this.___width + "px;height:" + this.___height + "px;position:absolute;margin:0px;padding:0px;overflow:hidden;");
		this._jselement = jsElement;
		this._element = $(jsElement);
	}
	,removeFromParent: function() {
		if(this._parent != null) {
			this._parent.removeChild(this);
		}
	}
	,kill: function() {
		this.killSpecialEvents();
		this.__eventHelper.kill();
		this.getElement().off();
		this.getElement().find("*").off();
		this.removeFromParent();
		priori_event_PriEventDispatcher.prototype.kill.call(this);
	}
	,get_visible: function() {
		if(this.getCSS("visibility") == "hidden") {
			return false;
		}
		return true;
	}
	,set_visible: function(value) {
		if(value == true) {
			this.setCSS("visibility","");
		} else {
			this.setCSS("visibility","hidden");
		}
		return value;
	}
	,get_pointer: function() {
		if(this.getCSS("cursor") == "pointer") {
			return false;
		}
		return true;
	}
	,set_pointer: function(value) {
		if(value == true) {
			this.setCSS("cursor","pointer");
		} else {
			this.setCSS("cursor","");
		}
		return value;
	}
	,get_mouseEnabled: function() {
		return this.getElement().css("pointer-events") != "none";
	}
	,set_mouseEnabled: function(value) {
		if(!value) {
			this.getElement().css("pointer-events","none");
		} else {
			this.getElement().css("pointer-events","");
		}
		return value;
	}
	,hasDisabledParent: function() {
		if(this.get_parent() != null) {
			if(this.get_parent().get_disabled()) {
				return true;
			} else if(this.get_parent().hasDisabledParent()) {
				return true;
			}
		}
		return false;
	}
	,get_disabled: function() {
		if(this._disabled) {
			return true;
		}
		if(this._element["is"]("[disabled]")) {
			return true;
		}
		return false;
	}
	,set_disabled: function(value) {
		this._disabled = value;
		if(value) {
			this._element.attr("priori-disabled","disabled");
			this._element.attr("disabled","disabled");
			this._element.find("*").attr("disabled","disabled");
		} else {
			this._element.removeAttr("priori-disabled");
			if(!this.hasDisabledParent()) {
				this._element.removeAttr("disabled");
				this._element.find("*").not("*[priori-disabled='disabled'], *[priori-disabled='disabled'] *").removeAttr("disabled");
			}
		}
		return value;
	}
	,getGlobalBox: function() {
		var result = new priori_geom_PriGeomBox();
		if(this.hasApp()) {
			if(($_=this._jselement,$bind($_,$_.getBoundingClientRect)) != null) {
				var box = this._jselement.getBoundingClientRect();
				var body = window.document.body;
				var docElem = window.document.documentElement;
				var $window = window;
				result.x = Math.round(box.left + ($window.pageXOffset != null?$window.pageXOffset:docElem.scrollLeft != null?docElem.scrollLeft:body.scrollLeft) - (docElem.clientLeft != null?docElem.clientLeft:body.clientLeft != null?body.clientLeft:0) | 0);
				result.y = Math.round(box.top + ($window.pageYOffset != null?$window.pageYOffset:docElem.scrollTop != null?docElem.scrollTop:body.scrollTop) - (docElem.clientTop != null?docElem.clientTop:body.clientTop != null?body.clientTop:0) | 0);
			} else {
				var el = this._jselement;
				var top = 0;
				var left = 0;
				while(el != null) {
					top += el.offsetTop;
					left += el.offsetLeft;
					el = el.offsetParent;
				}
				result.x = top;
				result.y = top;
			}
		}
		result.width = this.get_width();
		result.height = this.get_height();
		return result;
	}
	,__class__: priori_view_PriDisplay
	,__properties__: {set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_anchorY:"set_anchorY",get_anchorY:"get_anchorY",set_anchorX:"set_anchorX",get_anchorX:"get_anchorX",set_filter:"set_filter",set_shadow:"set_shadow",set_border:"set_border",set_bgColor:"set_bgColor",set_tooltip:"set_tooltip",set_corners:"set_corners",set_alpha:"set_alpha",get_alpha:"get_alpha",set_rotation:"set_rotation",get_rotation:"get_rotation",set_clipping:"set_clipping",get_clipping:"get_clipping",set_pointer:"set_pointer",get_pointer:"get_pointer",set_mouseEnabled:"set_mouseEnabled",get_mouseEnabled:"get_mouseEnabled",set_disabled:"set_disabled",get_disabled:"get_disabled",set_visible:"set_visible",get_visible:"get_visible",get_parent:"get_parent",set_maxY:"set_maxY",get_maxY:"get_maxY",set_maxX:"set_maxX",get_maxX:"get_maxX",set_centerY:"set_centerY",get_centerY:"get_centerY",set_centerX:"set_centerX",get_centerX:"get_centerX",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_heightScaled:"set_heightScaled",get_heightScaled:"get_heightScaled",set_height:"set_height",get_height:"get_height",set_widthScaled:"set_widthScaled",get_widthScaled:"get_widthScaled",set_width:"set_width",get_width:"get_width"}
});
var priori_view_container_PriContainer = function() {
	this._migratingView = false;
	this._childList = [];
	priori_view_PriDisplay.call(this);
};
priori_view_container_PriContainer.__name__ = true;
priori_view_container_PriContainer.__super__ = priori_view_PriDisplay;
priori_view_container_PriContainer.prototype = $extend(priori_view_PriDisplay.prototype,{
	get_numChildren: function() {
		return this._childList.length;
	}
	,getChild: function(index) {
		var result = null;
		if(index < this._childList.length) {
			result = this._childList[index];
		}
		return result;
	}
	,addChildList: function(childList) {
		var i = 0;
		var n = childList.length;
		while(i < n) {
			if(js_Boot.__instanceof(childList[i],priori_view_PriDisplay)) {
				this.addChild(childList[i]);
			}
			++i;
		}
	}
	,removeChildList: function(childList) {
		var i = 0;
		var n = childList.length;
		while(i < n) {
			if(js_Boot.__instanceof(childList[i],priori_view_PriDisplay)) {
				this.removeChild(childList[i]);
			}
			++i;
		}
	}
	,addChild: function(child) {
		child.removeFromParent();
		this._childList.push(child);
		this._jselement.appendChild(child.getJSElement());
		child._parent = this;
		if(this.hasApp()) {
			if(this.get_disabled()) {
				child.getElement().attr("disabled","disabled");
				child.getElement().find("*").attr("disabled","disabled");
			} else if(!this.hasDisabledParent()) {
				child.getElement().removeAttr("disabled");
				child.getElement().find("*").not("*[priori-disabled='disabled'], *[priori-disabled='disabled'] *").removeAttr("disabled");
			}
		}
		if(child.hasApp()) {
			child.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.ADDED_TO_APP,true));
		}
		child.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.ADDED,true));
	}
	,removeChild: function(child) {
		if(this == child.get_parent()) {
			var viewHasAppBefore = child.hasApp();
			HxOverrides.remove(this._childList,child);
			this._jselement.removeChild(child.getJSElement());
			child._parent = null;
			if(viewHasAppBefore) {
				child.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.REMOVED_FROM_APP,true));
			}
			child.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.REMOVED,true));
		}
	}
	,kill: function() {
		var i;
		var n;
		var childListCopy = this._childList.slice();
		i = 0;
		n = childListCopy.length;
		while(i < n) {
			childListCopy[i].kill();
			++i;
		}
		this._childList = [];
		priori_view_PriDisplay.prototype.kill.call(this);
	}
	,getContentBox: function() {
		var result = new priori_geom_PriGeomBox();
		var i = 0;
		var n = this.get_numChildren();
		while(i < n) {
			result.x = Math.min(result.x,this.getChild(i).get_x());
			result.y = Math.min(result.y,this.getChild(i).get_y());
			result.width = Math.max(result.width,this.getChild(i).get_maxX());
			result.height = Math.max(result.height,this.getChild(i).get_maxY());
			++i;
		}
		return result;
	}
	,set_width: function(value) {
		if(value != this.get_width()) {
			priori_view_PriDisplay.prototype.set_width.call(this,value);
			this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.RESIZE,false));
		}
		this.updateBorderDisplay();
		return value;
	}
	,set_height: function(value) {
		if(value != this.get_height()) {
			priori_view_PriDisplay.prototype.set_height.call(this,value);
			this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.RESIZE,false));
		}
		this.updateBorderDisplay();
		return value;
	}
	,__class__: priori_view_container_PriContainer
	,__properties__: $extend(priori_view_PriDisplay.prototype.__properties__,{get_numChildren:"get_numChildren"})
});
var priori_view_container_PriGroup = function() {
	priori_view_container_PriContainer.call(this);
	this._setupCalled = false;
	this._invalid = false;
	this.addEventListener(priori_event_PriEvent.ADDED_TO_APP,$bind(this,this._onAddedToApp));
	this.addEventListener(priori_event_PriEvent.RESIZE,$bind(this,this._onPriResizeGroup));
};
priori_view_container_PriGroup.__name__ = true;
priori_view_container_PriGroup.__super__ = priori_view_container_PriContainer;
priori_view_container_PriGroup.prototype = $extend(priori_view_container_PriContainer.prototype,{
	_onPriResizeGroup: function(e) {
		this.invalidate();
	}
	,kill: function() {
		if(this._invalidateTimer != null) {
			this._invalidateTimer.stop();
			this._invalidateTimer = null;
		}
		priori_view_container_PriContainer.prototype.kill.call(this);
	}
	,addChild: function(view) {
		priori_view_container_PriContainer.prototype.addChild.call(this,view);
		this.invalidate();
	}
	,removeChild: function(view) {
		priori_view_container_PriContainer.prototype.removeChild.call(this,view);
		this.invalidate();
	}
	,_onAddedToApp: function(e) {
		this.removeEventListener(priori_event_PriEvent.ADDED_TO_APP,$bind(this,this._onAddedToApp));
		this.addEventListener(priori_event_PriEvent.REMOVED_FROM_APP,$bind(this,this._onRemovedFromApp));
		if(this._setupCalled == false) {
			this._setupCalled = true;
			this.setup();
		}
		this.validate();
	}
	,_onRemovedFromApp: function(e) {
		this.removeEventListener(priori_event_PriEvent.REMOVED_FROM_APP,$bind(this,this._onRemovedFromApp));
		this.addEventListener(priori_event_PriEvent.ADDED_TO_APP,$bind(this,this._onAddedToApp));
	}
	,_updateScheduled: function() {
		if(this._invalid && !this._isKilled) {
			this.validate();
		}
	}
	,setup: function() {
	}
	,paint: function() {
	}
	,isInvalid: function() {
		return this._invalid;
	}
	,canPaint: function() {
		return this._setupCalled;
	}
	,validate: function() {
		if(this._invalidateTimer != null) {
			this._invalidateTimer.stop();
			this._invalidateTimer = null;
		}
		if(!this._isKilled && this._invalid && this.canPaint()) {
			var i = 0;
			var n = this.get_numChildren();
			var object;
			this.paint();
			i = 0;
			while(i < n) {
				if(js_Boot.__instanceof(this.getChild(i),priori_view_container_PriGroup)) {
					object = this.getChild(i);
					object.validate();
				}
				++i;
			}
			this._invalid = false;
		}
	}
	,invalidate: function() {
		if(this._invalid == false) {
			this._invalid = true;
			if(this._invalidateTimer != null) {
				this._invalidateTimer.stop();
				this._invalidateTimer = null;
			}
			this._invalidateTimer = haxe_Timer.delay($bind(this,this._updateScheduled),priori_app_PriApp.g().getMSUptate());
		}
	}
	,getContentBox: function() {
		this.validate();
		return priori_view_container_PriContainer.prototype.getContentBox.call(this);
	}
	,__class__: priori_view_container_PriGroup
});
var priori_app_PriApp = function() {
	if(priori_app_PriApp._g != null) {
		throw new js__$Boot_HaxeError("Do not create PriApp instance");
	} else {
		priori_app_PriApp._g = this;
	}
	this._fps = 60;
	priori_view_container_PriGroup.call(this);
	this.setupApp();
};
priori_app_PriApp.__name__ = true;
priori_app_PriApp.g = function() {
	if(priori_app_PriApp._g == null) {
		throw new js__$Boot_HaxeError("Application not yet created");
	}
	return priori_app_PriApp._g;
};
priori_app_PriApp.__super__ = priori_view_container_PriGroup;
priori_app_PriApp.prototype = $extend(priori_view_container_PriGroup.prototype,{
	set_width: function(value) {
		return value;
	}
	,get_width: function() {
		return this.getAppSize().width;
	}
	,set_height: function(value) {
		return value;
	}
	,get_height: function() {
		return this.getAppSize().height;
	}
	,set_x: function(value) {
		return 0;
	}
	,get_x: function() {
		return 0;
	}
	,set_y: function(value) {
		return 0;
	}
	,get_y: function() {
		return 0;
	}
	,getMSUptate: function() {
		return 1000 / this._fps | 0;
	}
	,setupApp: function() {
		var _gthis = this;
		this.getAppSize();
		this.getElement().css("width","100%");
		this.getElement().css("height","100%");
		this.getElement().css("position","fixed");
		this.getWindow().resize(function(e) {
			_gthis.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.RESIZE,false));
		});
		this.getDocument().keydown(function(e1) {
			if(e1.which == 8 && !$(e1.target)["is"]("input:not([readonly]):not([type=radio]):not([type=checkbox]), textarea, [contentEditable], [contentEditable=true]")) {
				e1.preventDefault();
			}
		});
		var body = this.getBody();
		body.css("border","0px");
		body.css("margin","0px");
		body.append(this.getElement());
		this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.ADDED_TO_APP,true));
		this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.RESIZE,false));
		this.invalidate();
		this.validate();
	}
	,getAppSize: function() {
		var b = new priori_geom_PriGeomBox();
		var e = this.getWindow();
		b.width = e.width();
		b.height = e.height();
		b.x = 0;
		b.y = 0;
		return b;
	}
	,getDocument: function() {
		return $(window.document);
	}
	,getWindow: function() {
		if(this._window == null) {
			this._window = $(window);
		}
		return this._window;
	}
	,getBody: function() {
		if(this._body == null) {
			this._body = $("body");
		}
		return this._body;
	}
	,__class__: priori_app_PriApp
});
var PriDemoApp = function() {
	priori_app_PriApp.call(this);
	priori_style_font_PriFontStyle.DEFAULT_FAMILY = "'PT Sans', sans-serif";
	priori_style_font_PriFontStyle.DEFAULT_COLOR = 1652831;
	priori_scene_manager_SceneManager.g().preload(view_ContentScene,null,null,$bind(this,this.onErrorCallBack));
};
PriDemoApp.__name__ = true;
PriDemoApp.__super__ = priori_app_PriApp;
PriDemoApp.prototype = $extend(priori_app_PriApp.prototype,{
	onErrorCallBack: function() {
		console.log("error");
	}
	,__class__: PriDemoApp
});
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = true;
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	while(true) {
		s = "0123456789ABCDEF".charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
Type.__name__ = true;
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var priori_view_layout_PriLayout = function() {
	priori_view_container_PriGroup.call(this);
	this.set_gap(10);
	this.set_alignType(priori_view_layout_PriLayoutAlignType.MIN);
	this.set_distributionType(priori_view_layout_PriLayoutDistributionType.NONE);
	this.set_autoSizeElements(false);
	this.set_autoSizeContainer(true);
};
priori_view_layout_PriLayout.__name__ = true;
priori_view_layout_PriLayout.__super__ = priori_view_container_PriGroup;
priori_view_layout_PriLayout.prototype = $extend(priori_view_container_PriGroup.prototype,{
	set_gap: function(value) {
		if(value != this.gap) {
			this.invalidate();
		}
		return this.gap = value;
	}
	,set_distributionType: function(value) {
		if(value != this.distributionType) {
			this.invalidate();
			this.validate();
		}
		return this.distributionType = value;
	}
	,set_alignType: function(value) {
		if(value != this.alignType) {
			this.invalidate();
			this.validate();
		}
		return this.alignType = value;
	}
	,set_autoSizeElements: function(value) {
		if(value != this.autoSizeElements) {
			this.invalidate();
			this.validate();
		}
		return this.autoSizeElements = value;
	}
	,set_autoSizeContainer: function(value) {
		if(value != this.autoSizeContainer) {
			this.invalidate();
			this.validate();
		}
		return this.autoSizeContainer = value;
	}
	,__class__: priori_view_layout_PriLayout
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_autoSizeContainer:"set_autoSizeContainer",set_autoSizeElements:"set_autoSizeElements",set_distributionType:"set_distributionType",set_alignType:"set_alignType",set_gap:"set_gap"})
});
var priori_view_layout_PriHorizontalLayout = function() {
	priori_view_layout_PriLayout.call(this);
};
priori_view_layout_PriHorizontalLayout.__name__ = true;
priori_view_layout_PriHorizontalLayout.__super__ = priori_view_layout_PriLayout;
priori_view_layout_PriHorizontalLayout.prototype = $extend(priori_view_layout_PriLayout.prototype,{
	paint: function() {
		var i = 0;
		var n = this.get_numChildren();
		var gap = this.gap;
		var lastX = gap;
		var totalSpace = this.get_width();
		var spacePerItem = (totalSpace - this.gap * (n - 1)) / n;
		while(i < n) {
			this.getChild(i).set_x(lastX);
			if(this.autoSizeElements) {
				this.getChild(i).set_height(this.get_height() - gap * 2);
				if(js_Boot.__instanceof(this.getChild(i),priori_view_container_PriGroup)) {
					(js_Boot.__cast(this.getChild(i) , priori_view_container_PriGroup)).validate();
				}
			}
			if(this.distributionType == priori_view_layout_PriLayoutDistributionType.FIT) {
				this.getChild(i).set_width(i == n - 1?totalSpace:spacePerItem);
			}
			if(this.alignType == priori_view_layout_PriLayoutAlignType.MIN) {
				this.getChild(i).set_y(gap);
			} else if(this.alignType == priori_view_layout_PriLayoutAlignType.CENTER) {
				this.getChild(i).set_centerY(this.get_height() / 2);
			} else if(this.alignType == priori_view_layout_PriLayoutAlignType.MAX) {
				this.getChild(i).set_maxY(this.get_height() - gap);
			}
			lastX = this.getChild(i).get_maxX() + gap;
			++i;
		}
		if(this.autoSizeContainer) {
			this.set_width(lastX);
		}
	}
	,__class__: priori_view_layout_PriHorizontalLayout
});
var components_ControlsPanel = function(model) {
	priori_view_layout_PriHorizontalLayout.call(this);
	this.model = model;
	this.sessionChooser = new priori_bootstrap_PriBSFormSelect();
	this.sessionChooser.set_width(230);
	this.sessionChooser.addEventListener(priori_event_PriEvent.CHANGE,$bind(this,this.onSessionChange));
	this.addChild(this.sessionChooser);
	this.substringFilter = new priori_bootstrap_PriBSFormInputText();
	this.substringFilter.addEventListener(priori_event_PriEvent.CHANGE,$bind(this,this.onChanged));
	this.addChild(this.substringFilter);
	var l = new priori_bootstrap_PriBSLabel();
	l.set_text("Только тревожное: ");
	this.warnLabel = l;
	this.addChild(this.warnLabel);
	this.warningToggle = new priori_view_form_PriFormCheckBox();
	this.warningToggle.addEventListener(priori_event_PriEvent.CHANGE,$bind(this,this.onChanged));
	this.addChild(this.warningToggle);
};
components_ControlsPanel.__name__ = true;
components_ControlsPanel.__super__ = priori_view_layout_PriHorizontalLayout;
components_ControlsPanel.prototype = $extend(priori_view_layout_PriHorizontalLayout.prototype,{
	onChanged: function(e) {
		this.model.updateFilters();
	}
	,onSessionChange: function(e) {
		this.model.setSession(this.sessionChooser.get_selected());
	}
	,getLevel: function() {
		if(this.warningToggle.get_value()) {
			return 2;
		} else {
			return 0;
		}
	}
	,getLable: function(text) {
		var l = new priori_bootstrap_PriBSLabel();
		l.set_text(text);
		return l;
	}
	,setWarnLEvel: function(level) {
		this.warningToggle.set_disabled(level == 0);
		this.warningToggle.set_value(level != 0);
		var tmp;
		switch(level) {
		case 0:
			tmp = priori_bootstrap_type_PriBSContextualType.DEFAULT;
			break;
		case 2:
			tmp = priori_bootstrap_type_PriBSContextualType.INFO;
			break;
		case 4:
			tmp = priori_bootstrap_type_PriBSContextualType.WARNING;
			break;
		case 8:
			tmp = priori_bootstrap_type_PriBSContextualType.DANGER;
			break;
		default:
			tmp = priori_bootstrap_type_PriBSContextualType.PRIMARY;
		}
		this.warnLabel.set_context(tmp);
	}
	,__class__: components_ControlsPanel
});
var components_Dropzone = function() {
	var _gthis = this;
	priori_view_container_PriGroup.call(this);
	this.label = new priori_view_text_PriText();
	this.label.set_fontStyle(new priori_style_font_PriFontStyle(9474192,null,priori_style_font_PriFontStyleWeight.BOLD));
	this.label.set_text("Drop files here");
	this.label.set_mouseEnabled(false);
	this.addChild(this.label);
	this.set_bgColor(5263440);
	this.getJSElement().addEventListener("dragover",function(event) {
		event.preventDefault();
	});
	this.getJSElement().addEventListener("dragenter",function(event1) {
		_gthis.set_bgColor(7368816);
	});
	this.getJSElement().addEventListener("dragleave",function(event2) {
		_gthis.set_bgColor(5263440);
	});
	this.getJSElement().addEventListener("drop",$bind(this,this.onDropped));
};
components_Dropzone.__name__ = true;
components_Dropzone.__super__ = priori_view_container_PriGroup;
components_Dropzone.prototype = $extend(priori_view_container_PriGroup.prototype,{
	onDropped: function(event) {
		event.preventDefault();
		this.set_bgColor(5263440);
		if(event.dataTransfer.files.length > 0) {
			this.dispatchEvent(new components_FilesDroppedPriEvent(event.dataTransfer.files));
		}
	}
	,paint: function() {
		this.label.set_x(60);
		this.label.set_centerY(this.get_height() / 2);
	}
	,__class__: components_Dropzone
});
var priori_event_PriEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	if(bubble == null) {
		bubble = false;
	}
	this.type = type;
	this.propagate = propagate;
	this.bubble = bubble;
	this.data = data;
};
priori_event_PriEvent.__name__ = true;
priori_event_PriEvent.prototype = {
	stopBubble: function() {
		this.bubble = false;
	}
	,stopPropagation: function() {
		this.propagate = false;
	}
	,clone: function() {
		var clone = new priori_event_PriEvent(this.type,this.propagate,this.bubble);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		return clone;
	}
	,__class__: priori_event_PriEvent
};
var components_FilesDroppedPriEvent = function(files) {
	priori_event_PriEvent.call(this,"FILE_DROPPED");
	this.files = files;
};
components_FilesDroppedPriEvent.__name__ = true;
components_FilesDroppedPriEvent.__super__ = priori_event_PriEvent;
components_FilesDroppedPriEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		return new components_FilesDroppedPriEvent(this.files);
	}
	,__class__: components_FilesDroppedPriEvent
});
var components_FlowContainer = function() {
	this.numPerLine = 5;
	this.spacing = 5;
	priori_view_container_PriGroup.call(this);
};
components_FlowContainer.__name__ = true;
components_FlowContainer.__super__ = priori_view_container_PriGroup;
components_FlowContainer.prototype = $extend(priori_view_container_PriGroup.prototype,{
	paint: function() {
		var i = 0;
		var x = this.spacing;
		var y = this.spacing;
		while(i < this.get_numChildren()) {
			var child = this.getChild(i);
			child.set_x(x);
			child.set_y(y);
			if(child.get_x() + child.get_width() + this.spacing > this.get_width()) {
				x = this.spacing;
				y += child.get_height() + this.spacing;
				child.set_x(x);
				child.set_y(y);
			}
			x += child.get_width() + this.spacing;
			++i;
		}
		if(this.get_numChildren() > 0) {
			var lastChild = this.getChild(this.get_numChildren() - 1);
			this.set_height(lastChild.get_y() + lastChild.get_height());
		}
	}
	,__class__: components_FlowContainer
});
var components_MenuButton = function(label,onTap) {
	priori_view_container_PriGroup.call(this);
	this._label = label;
	this.onTapHandler = onTap;
};
components_MenuButton.__name__ = true;
components_MenuButton.__super__ = priori_view_container_PriGroup;
components_MenuButton.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setup: function() {
		this.bg = new priori_view_PriDisplay();
		this.bg.set_bgColor(1453651);
		this.bg.set_width(0);
		this.addChild(this.bg);
		this.label = new priori_view_text_PriText();
		this.label.set_text(this._label);
		this.label.set_fontStyle(new priori_style_font_PriFontStyle(8425642,null,priori_style_font_PriFontStyleWeight.BOLD));
		this.addChild(this.label);
		this.addEventListener("mouseenter",$bind(this,this.onOver));
		this.addEventListener("mouseleave",$bind(this,this.onOut));
		this.addEventListener("click",$bind(this,this.onTap));
	}
	,onOver: function(e) {
		this.bg.set_width(this.get_width());
	}
	,onOut: function(e) {
		this.bg.set_width(0);
	}
	,onTap: function(e) {
		if(this.onTapHandler != null) {
			this.onTapHandler();
		}
	}
	,paint: function() {
		this.label.set_x(12);
		this.label.set_centerY(this.get_height() / 2);
		this.bg.set_x(0);
		this.bg.set_y(0);
		this.bg.set_height(this.get_height());
	}
	,__class__: components_MenuButton
});
var components_StatusesRotator = function() {
	this.idx = 0;
	this.statuses = new Array(10);
	var _g1 = 0;
	var _g = this.statuses.length;
	while(_g1 < _g) this.statuses[_g1++] = "";
};
components_StatusesRotator.__name__ = true;
components_StatusesRotator.prototype = {
	addStatus: function(s) {
		this.idx++;
		if(this.idx >= this.statuses.length) {
			this.idx = 0;
		}
		this.statuses[this.idx] = s + "\n";
	}
	,getLines: function() {
		var o = "";
		var _g1 = this.idx;
		var _g = this.statuses.length;
		while(_g1 < _g) o += this.statuses[_g1++];
		var _g11 = 0;
		var _g2 = this.idx;
		while(_g11 < _g2) o += this.statuses[_g11++];
		return o;
	}
	,__class__: components_StatusesRotator
};
var priori_view_component_PriExtendable = function() {
	priori_view_PriDisplay.call(this);
	this.createBaseElement();
	this.set_width(null);
	this.set_height(null);
	this.addEventListener(priori_event_PriEvent.ADDED_TO_APP,$bind(this,this.__appAdd));
};
priori_view_component_PriExtendable.__name__ = true;
priori_view_component_PriExtendable.__super__ = priori_view_PriDisplay;
priori_view_component_PriExtendable.prototype = $extend(priori_view_PriDisplay.prototype,{
	onAddedToApp: function() {
	}
	,onRemovedFromApp: function() {
	}
	,__appAdd: function(e) {
		this.removeEventListener(priori_event_PriEvent.ADDED_TO_APP,$bind(this,this.__appAdd));
		this.addEventListener(priori_event_PriEvent.REMOVED_FROM_APP,$bind(this,this.__appRemove));
		this.onAddedToApp();
	}
	,__appRemove: function(e) {
		this.onRemovedFromApp();
		this.addEventListener(priori_event_PriEvent.ADDED_TO_APP,$bind(this,this.__appAdd));
		this.removeEventListener(priori_event_PriEvent.REMOVED_FROM_APP,$bind(this,this.__appRemove));
	}
	,set_width: function(value) {
		if(this._baseElement != null) {
			if(value == null) {
				this._baseElement.css("width","");
			} else {
				this._baseElement.css("width","100%");
			}
		}
		priori_view_PriDisplay.prototype.set_width.call(this,value);
		return value;
	}
	,set_height: function(value) {
		if(this._baseElement != null) {
			if(value == null) {
				this._baseElement.css("height","");
			} else {
				this._baseElement.css("height","100%");
			}
		}
		priori_view_PriDisplay.prototype.set_height.call(this,value);
		return value;
	}
	,createBaseElement: function() {
		this._baseElement = $(this.getComponentCode());
		this.getElement().append(this._baseElement);
	}
	,getComponentCode: function() {
		return "<div></div>";
	}
	,kill: function() {
		this.getElement().off();
		priori_view_PriDisplay.prototype.kill.call(this);
	}
	,__class__: priori_view_component_PriExtendable
});
var priori_view_form_PriFormElementBase = function() {
	priori_view_component_PriExtendable.call(this);
};
priori_view_form_PriFormElementBase.__name__ = true;
priori_view_form_PriFormElementBase.__super__ = priori_view_component_PriExtendable;
priori_view_form_PriFormElementBase.prototype = $extend(priori_view_component_PriExtendable.prototype,{
	onAddedToApp: function() {
		priori_view_component_PriExtendable.prototype.onAddedToApp.call(this);
		if(this.hasEvent(priori_event_PriEvent.PRESS_ENTER)) {
			this._baseElement.off("keydown",null,$bind(this,this._onPressEnter));
			this._baseElement.on("keydown",null,$bind(this,this._onPressEnter));
		}
	}
	,onRemovedFromApp: function() {
		priori_view_component_PriExtendable.prototype.onRemovedFromApp.call(this);
		this._baseElement.off("keydown",null,$bind(this,this._onPressEnter));
	}
	,_onPressEnter: function(event) {
		if(event.which == 13) {
			this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.PRESS_ENTER));
		}
	}
	,addEventListener: function(event,listener) {
		priori_view_component_PriExtendable.prototype.addEventListener.call(this,event,listener);
		if(event == priori_event_PriEvent.PRESS_ENTER) {
			this._baseElement.off("keydown",null,$bind(this,this._onPressEnter));
			this._baseElement.on("keydown",null,$bind(this,this._onPressEnter));
		}
	}
	,suspendDisabled: function() {
		this.getElement().removeAttr("disabled");
		this.getElement().find("*").removeAttr("disabled");
	}
	,reactivateDisable: function() {
		this.getElement().attr("disabled","disabled");
		this.getElement().find("*").attr("disabled","disabled");
	}
	,applyIdToFormElement: function() {
		this._fieldId = "field_" + this.getRandomId(4);
		this._baseElement.attr("id",this.get_fieldId());
	}
	,createBaseElement: function() {
		priori_view_component_PriExtendable.prototype.createBaseElement.call(this);
		this.applyIdToFormElement();
	}
	,setFocus: function() {
		var el = window.document.getElementById(this.get_fieldId());
		if(el != null) {
			el.focus();
		}
	}
	,removeFocus: function() {
		var el = window.document.getElementById(this.get_fieldId());
		if(el != null) {
			el.blur();
		}
	}
	,hasFocus: function() {
		var el = window.document.getElementById(this.get_fieldId());
		if(el != null) {
			try {
				if(window.document.activeElement == el) {
					return true;
				}
			} catch( e ) {
			}
		}
		return false;
	}
	,get_fieldId: function() {
		return this._fieldId;
	}
	,__class__: priori_view_form_PriFormElementBase
	,__properties__: $extend(priori_view_component_PriExtendable.prototype.__properties__,{get_fieldId:"get_fieldId"})
});
var priori_view_form_PriFormButton = function() {
	priori_view_form_PriFormElementBase.call(this);
	this.set_text("Button");
};
priori_view_form_PriFormButton.__name__ = true;
priori_view_form_PriFormButton.__super__ = priori_view_form_PriFormElementBase;
priori_view_form_PriFormButton.prototype = $extend(priori_view_form_PriFormElementBase.prototype,{
	getComponentCode: function() {
		return "<button type=\"button\"></button>";
	}
	,set_text: function(value) {
		this.text = value;
		this._baseElement.text(value);
		return value;
	}
	,__class__: priori_view_form_PriFormButton
	,__properties__: $extend(priori_view_form_PriFormElementBase.prototype.__properties__,{set_text:"set_text"})
});
var priori_bootstrap_PriBSFormButton = function() {
	priori_view_form_PriFormButton.call(this);
	this.set_size(priori_bootstrap_type_PriBSSize.NORMAL);
	this.set_context(priori_bootstrap_type_PriBSContextualType.DEFAULT);
	this.set_badge("");
};
priori_bootstrap_PriBSFormButton.__name__ = true;
priori_bootstrap_PriBSFormButton.__super__ = priori_view_form_PriFormButton;
priori_bootstrap_PriBSFormButton.prototype = $extend(priori_view_form_PriFormButton.prototype,{
	getComponentCode: function() {
		return "\r\n           <button type=\"button\" class=\"btn\">\r\n                <span class=\"bs_button_label\"></span>\r\n                <span class=\"badge\">10</span>\r\n            </button>\r\n        ";
	}
	,set_text: function(value) {
		this.text = value;
		this._baseElement.find(".bs_button_label").text(value);
		return value;
	}
	,set_badge: function(value) {
		this.badge = value;
		this._baseElement.find(".badge").text(value);
		return value;
	}
	,set_context: function(value) {
		this._baseElement.removeClass("btn-danger btn-default btn-info btn-link btn-primary btn-success btn-warning");
		if(value == priori_bootstrap_type_PriBSContextualType.DANGER) {
			this._baseElement.addClass("btn-danger");
		} else if(value == priori_bootstrap_type_PriBSContextualType.DEFAULT) {
			this._baseElement.addClass("btn-default");
		} else if(value == priori_bootstrap_type_PriBSContextualType.INFO) {
			this._baseElement.addClass("btn-info");
		} else if(value == priori_bootstrap_type_PriBSContextualType.LINK) {
			this._baseElement.addClass("btn-link");
		} else if(value == priori_bootstrap_type_PriBSContextualType.PRIMARY) {
			this._baseElement.addClass("btn-primary");
		} else if(value == priori_bootstrap_type_PriBSContextualType.SUCCESS) {
			this._baseElement.addClass("btn-success");
		} else if(value == priori_bootstrap_type_PriBSContextualType.WARNING) {
			this._baseElement.addClass("btn-warning");
		}
		return this.context = value;
	}
	,set_size: function(value) {
		this._baseElement.removeClass("btn-lg btn-sm btn-xs");
		if(value == priori_bootstrap_type_PriBSSize.LARGE) {
			this._baseElement.addClass("btn-lg");
		} else if(value == priori_bootstrap_type_PriBSSize.SMALL) {
			this._baseElement.addClass("btn-sm");
		} else if(value == priori_bootstrap_type_PriBSSize.EXTRA_SMALL) {
			this._baseElement.addClass("btn-xs");
		}
		return this.size = value;
	}
	,__class__: priori_bootstrap_PriBSFormButton
	,__properties__: $extend(priori_view_form_PriFormButton.prototype.__properties__,{set_badge:"set_badge",set_size:"set_size",set_context:"set_context"})
});
var components_TagButton = function(tag,color) {
	priori_bootstrap_PriBSFormButton.call(this);
	this.tag = tag;
	var lbl = tag;
	lbl = StringTools.replace(tag,"[","");
	lbl = StringTools.replace(lbl,"]","");
	this.set_text(lbl);
	this.getElement().find(".bs_button_label").css("color","#" + StringTools.hex(color.main,6));
	this.getElement().find(".btn").css("background-color","#" + StringTools.hex(color.bg,6));
	this.getElement().find(".btn").css("border","0");
	this.set_context(priori_bootstrap_type_PriBSContextualType.DEFAULT);
	this.set_active(true);
	this.addEventListener("mousedown",$bind(this,this.onClick));
};
components_TagButton.__name__ = true;
components_TagButton.__super__ = priori_bootstrap_PriBSFormButton;
components_TagButton.prototype = $extend(priori_bootstrap_PriBSFormButton.prototype,{
	onClick: function(e) {
		this.set_active(!this.active);
	}
	,set_active: function(val) {
		this.active = val;
		this.set_alpha(val?1:0.5);
		return val;
	}
	,__class__: components_TagButton
	,__properties__: $extend(priori_bootstrap_PriBSFormButton.prototype.__properties__,{set_active:"set_active"})
});
var components_UrlLoaderComponent = function() {
	priori_view_container_PriGroup.call(this);
	this.set_bgColor(5263440);
	this.urlInput = new priori_view_form_PriFormInputText();
	this.addChild(this.urlInput);
	this.submit = new priori_bootstrap_PriBSFormButton();
	this.submit.set_text("Load");
	this.addChild(this.submit);
	this.submit.addEventListener("mouseup",$bind(this,this.onSubmit));
};
components_UrlLoaderComponent.__name__ = true;
components_UrlLoaderComponent.__super__ = priori_view_container_PriGroup;
components_UrlLoaderComponent.prototype = $extend(priori_view_container_PriGroup.prototype,{
	paint: function() {
		this.urlInput.set_x(0);
		this.urlInput.set_width(this.get_width() - 65);
		this.submit.set_x(this.urlInput.get_width() + 5);
		this.submit.set_width(60);
		this.urlInput.set_height(this.submit.get_height());
	}
	,onSubmit: function(e) {
		var req = new haxe_HttpJs(this.urlInput.get_value());
		req.onData = $bind(this,this.onLoadComplete);
		req.onError = $bind(this,this.onRequestError);
		req.request();
	}
	,onRequestError: function(e) {
		js_Browser.alert(e);
	}
	,onLoadComplete: function(e) {
		this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.COMPLETE,false,false,e));
	}
	,__class__: components_UrlLoaderComponent
});
var data__$LogLevel_LogLevel_$Impl_$ = {};
data__$LogLevel_LogLevel_$Impl_$.__name__ = true;
data__$LogLevel_LogLevel_$Impl_$.fromString = function(val) {
	switch(val.toLowerCase()) {
	case "error":
		return 4;
	case "exception":
		return 8;
	case "warning":
		return 2;
	default:
		return 0;
	}
};
var data_SessionLog = function(name) {
	this.name = name;
	this.files = new Array(100);
	this.format = new format_PlameeLogFormat();
};
data_SessionLog.__name__ = true;
data_SessionLog.prototype = {
	addFile: function(index,lines) {
		if(index > this.files.length - 1) {
			throw new js__$Boot_HaxeError("Are you sure your session was splitted in more than " + index + " parts");
		}
		this.files[index - 1] = lines;
	}
	,parse: function() {
		this.format.reset();
		var lastI = 0;
		var missingParts = "";
		var _g1 = 0;
		var _g = this.files.length;
		while(_g1 < _g) {
			var i = _g1++;
			var file = this.files[i];
			if(file != null) {
				var _g3 = lastI;
				while(_g3 < i) missingParts += " " + (_g3++ + 1);
				lastI = i + 1;
				this.readFile(file,i + 1);
			}
		}
		if(missingParts != "") {
			throw new js__$Boot_HaxeError("Missing parts of session " + this.name + ": " + missingParts);
		}
	}
	,getRecords: function() {
		return this.format.getRecords();
	}
	,readFile: function(lines,sessionPart) {
		lines = StringTools.replace(lines,"\r","\n");
		var lines1 = lines.split("\n");
		var _g = 0;
		while(_g < lines1.length) {
			var line = lines1[_g];
			++_g;
			this.format.processLine(line,sessionPart);
		}
	}
	,__class__: data_SessionLog
};
var format_OldPlameeLogNameExtractor = function() { };
format_OldPlameeLogNameExtractor.__name__ = true;
format_OldPlameeLogNameExtractor.extraxtFileName = function(content) {
	var lines = content.split("\n");
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		if(format_OldPlameeLogNameExtractor.first.match(line)) {
			return format_OldPlameeLogNameExtractor.first.matched(3) + "-" + format_OldPlameeLogNameExtractor.first.matched(2) + "-" + format_OldPlameeLogNameExtractor.first.matched(1) + "_" + format_OldPlameeLogNameExtractor.first.matched(4) + "-" + format_OldPlameeLogNameExtractor.first.matched(5) + "-" + format_OldPlameeLogNameExtractor.first.matched(6) + "#01";
		}
		if(format_OldPlameeLogNameExtractor.secondary.match(line)) {
			return format_OldPlameeLogNameExtractor.secondary.matched(4) + "-" + format_OldPlameeLogNameExtractor.secondary.matched(3) + "-" + format_OldPlameeLogNameExtractor.secondary.matched(2) + "_" + format_OldPlameeLogNameExtractor.secondary.matched(5) + "-" + format_OldPlameeLogNameExtractor.secondary.matched(6) + "-" + format_OldPlameeLogNameExtractor.secondary.matched(7) + "#0" + format_OldPlameeLogNameExtractor.secondary.matched(1);
		}
	}
	return null;
};
var format_PlameeLogDataExtractor = function() {
	this.buildPattern = new EReg("\\s*Build\\s+version\\s*:\\s*([\\d\\.]+)\\s+","");
	this.defPattern = new EReg("\\s*Defs\\s+version\\s*:\\s*(\\d+)\\s+","");
	this.extractors = [];
	this.extractors.push($bind(this,this.defExtractor));
	this.extractors.push($bind(this,this.buildExtractor));
};
format_PlameeLogDataExtractor.__name__ = true;
format_PlameeLogDataExtractor.prototype = {
	processMessage: function(msg) {
		var _g = 0;
		var _g1 = this.extractors;
		while(_g < _g1.length) {
			var extractor = _g1[_g];
			++_g;
			extractor(msg);
		}
	}
	,defExtractor: function(msg) {
		if(this.defPattern.match(msg)) {
			this.defs = this.defPattern.matched(1);
		}
	}
	,buildExtractor: function(msg) {
		if(this.buildPattern.match(msg)) {
			this.build = this.buildPattern.matched(1);
		}
	}
	,__class__: format_PlameeLogDataExtractor
};
var format_PlameeLogFormat = function() {
	this.records = [];
};
format_PlameeLogFormat.__name__ = true;
format_PlameeLogFormat.prototype = {
	processLine: function(line,sessionPart) {
		this.sessionPart = sessionPart;
		if(this.isNewToken(line)) {
			this.processCurrent();
		}
		this.current += line + "\r";
	}
	,getRecords: function() {
		this.processCurrent();
		return this.records;
	}
	,reset: function() {
		this.records = [];
		this.current = "";
	}
	,processCurrent: function() {
		if(this.current.length > 0) {
			this.records.push(this.makeRecord(this.current));
		}
		this.current = "";
	}
	,isNewToken: function(line) {
		return format_PlameeLogFormat.messagePattern.match(line);
	}
	,makeRecord: function(allLines) {
		allLines = allLines.replace(format_PlameeLogFormat.newLinePattern.r,"<br>");
		if(format_PlameeLogFormat.messagePattern.match(allLines)) {
			var level;
			switch(format_PlameeLogFormat.messagePattern.matched(2).toLowerCase()) {
			case "error":
				level = 4;
				break;
			case "exception":
				level = 8;
				break;
			case "warning":
				level = 2;
				break;
			default:
				level = 0;
			}
			console.log(format_PlameeLogFormat.messagePattern.matched(2) + " " + level);
			return { tag : format_PlameeLogFormat.messagePattern.matched(4) != null?format_PlameeLogFormat.messagePattern.matched(4):"[Untagged]", message : StringTools.replace(format_PlameeLogFormat.messagePattern.matched(5),"<br>","\n"), time : this.sessionPart + "#" + format_PlameeLogFormat.messagePattern.matched(3), level : level};
		}
		return { tag : "[UNKNOWN]", message : StringTools.replace(allLines,"<br>","\n"), time : "-:-:-", level : 0};
	}
	,processMessage: function(s) {
		s = StringTools.replace(s,"<br>","\n");
		s = s.replace(format_PlameeLogFormat.commaWithoutSpace.r,", ");
		return s;
	}
	,__class__: format_PlameeLogFormat
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_http_HttpBase = function(url) {
	this.url = url;
	this.headers = [];
	this.params = [];
};
haxe_http_HttpBase.__name__ = true;
haxe_http_HttpBase.prototype = {
	onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,__class__: haxe_http_HttpBase
};
var haxe_HttpJs = function(url) {
	this.async = true;
	this.withCredentials = false;
	haxe_http_HttpBase.call(this,url);
};
haxe_HttpJs.__name__ = true;
haxe_HttpJs.__super__ = haxe_http_HttpBase;
haxe_HttpJs.prototype = $extend(haxe_http_HttpBase.prototype,{
	request: function(post) {
		var _gthis = this;
		this.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && typeof(window) != "undefined") {
				var protocol = window.location.protocol.toLowerCase();
				if(new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","").match(protocol)) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				_gthis.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				_gthis.req = null;
				$bind(_gthis,_gthis.onData)(_gthis.responseData = r.responseText);
			} else if(s == null) {
				_gthis.req = null;
				_gthis.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					_gthis.req = null;
					_gthis.onError("Unknown host");
					break;
				case 12029:
					_gthis.req = null;
					_gthis.onError("Failed to connect to host");
					break;
				default:
					_gthis.req = null;
					_gthis.responseData = r.responseText;
					$bind(_gthis,_gthis.onError)("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g = 0;
			var _g1 = this.params;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				var s1 = p.name;
				var uri1 = encodeURIComponent(s1) + "=";
				var s2 = p.value;
				uri += uri1 + encodeURIComponent(s2);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var tmp = this.url.split("?").length <= 1?"?":"&";
				r.open("GET",this.url + tmp + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			this.req = null;
			$bind(this,this.onError)(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.name == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g2 = 0;
		var _g11 = this.headers;
		while(_g2 < _g11.length) {
			var h1 = _g11[_g2];
			++_g2;
			r.setRequestHeader(h1.name,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,__class__: haxe_HttpJs
});
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
haxe__$Int64__$_$_$Int64.__name__ = true;
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
haxe_crypto_Adler32.__name__ = true;
haxe_crypto_Adler32.read = function(i) {
	var a = new haxe_crypto_Adler32();
	var a2a = i.readByte();
	var a2b = i.readByte();
	a.a1 = i.readByte() << 8 | i.readByte();
	a.a2 = a2a << 8 | a2b;
	return a;
};
haxe_crypto_Adler32.prototype = {
	update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			a1 = (a1 + b.b[_g1++]) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,equals: function(a) {
		if(a.a1 == this.a1) {
			return a.a2 == this.a2;
		} else {
			return false;
		}
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	__class__: haxe_ds_IntMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
haxe_ds__$StringMap_StringMapIterator.__name__ = true;
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_format_JsonPrinter = function(replacer,space) {
	this.replacer = replacer;
	this.indent = space;
	this.pretty = space != null;
	this.nind = 0;
	this.buf = new StringBuf();
};
haxe_format_JsonPrinter.__name__ = true;
haxe_format_JsonPrinter.print = function(o,replacer,space) {
	var printer = new haxe_format_JsonPrinter(replacer,space);
	printer.write("",o);
	return printer.buf.b;
};
haxe_format_JsonPrinter.prototype = {
	write: function(k,v) {
		if(this.replacer != null) {
			v = this.replacer(k,v);
		}
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "null";
			break;
		case 1:
			this.buf.b += Std.string(v);
			break;
		case 2:
			var v1 = isFinite(v)?v:"null";
			this.buf.b += Std.string(v1);
			break;
		case 3:
			this.buf.b += Std.string(v);
			break;
		case 4:
			this.fieldsString(v,Reflect.fields(v));
			break;
		case 5:
			this.buf.b += "\"<fun>\"";
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.quote(v);
			} else if(c == Array) {
				var v2 = v;
				this.buf.b += "[";
				var len = v2.length;
				var last = len - 1;
				var _g1 = 0;
				while(_g1 < len) {
					var i = _g1++;
					if(i > 0) {
						this.buf.b += ",";
					} else {
						this.nind++;
					}
					if(this.pretty) {
						this.buf.b += "\n";
					}
					if(this.pretty) {
						this.buf.b += Std.string(StringTools.lpad("",this.indent,this.nind * this.indent.length));
					}
					this.write(i,v2[i]);
					if(i == last) {
						this.nind--;
						if(this.pretty) {
							this.buf.b += "\n";
						}
						if(this.pretty) {
							this.buf.b += Std.string(StringTools.lpad("",this.indent,this.nind * this.indent.length));
						}
					}
				}
				this.buf.b += "]";
			} else if(c == haxe_ds_StringMap) {
				var v3 = v;
				var o = { };
				var k1 = v3.keys();
				while(k1.hasNext()) {
					var k2 = k1.next();
					o[k2] = __map_reserved[k2] != null?v3.getReserved(k2):v3.h[k2];
				}
				this.fieldsString(o,Reflect.fields(o));
			} else if(c == Date) {
				this.quote(HxOverrides.dateStr(v));
			} else {
				this.fieldsString(v,Reflect.fields(v));
			}
			break;
		case 7:
			this.buf.b += Std.string(v[1]);
			break;
		case 8:
			this.buf.b += "\"???\"";
			break;
		}
	}
	,fieldsString: function(v,fields) {
		this.buf.b += "{";
		var len = fields.length;
		var last = len - 1;
		var first = true;
		var _g1 = 0;
		while(_g1 < len) {
			var i = _g1++;
			var f = fields[i];
			var value = Reflect.field(v,f);
			if(Reflect.isFunction(value)) {
				continue;
			}
			if(first) {
				this.nind++;
				first = false;
			} else {
				this.buf.b += ",";
			}
			if(this.pretty) {
				this.buf.b += "\n";
			}
			if(this.pretty) {
				this.buf.b += Std.string(StringTools.lpad("",this.indent,this.nind * this.indent.length));
			}
			this.quote(f);
			this.buf.b += ":";
			if(this.pretty) {
				this.buf.b += " ";
			}
			this.write(f,value);
			if(i == last) {
				this.nind--;
				if(this.pretty) {
					this.buf.b += "\n";
				}
				if(this.pretty) {
					this.buf.b += Std.string(StringTools.lpad("",this.indent,this.nind * this.indent.length));
				}
			}
		}
		this.buf.b += "}";
	}
	,quote: function(s) {
		this.buf.b += "\"";
		var i = 0;
		while(true) {
			var c = s.charCodeAt(i++);
			if(c != c) {
				break;
			}
			switch(c) {
			case 8:
				this.buf.b += "\\b";
				break;
			case 9:
				this.buf.b += "\\t";
				break;
			case 10:
				this.buf.b += "\\n";
				break;
			case 12:
				this.buf.b += "\\f";
				break;
			case 13:
				this.buf.b += "\\r";
				break;
			case 34:
				this.buf.b += "\\\"";
				break;
			case 92:
				this.buf.b += "\\\\";
				break;
			default:
				this.buf.b += String.fromCharCode(c);
			}
		}
		this.buf.b += "\"";
	}
	,__class__: haxe_format_JsonPrinter
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				s += fcc((c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127);
			} else {
				var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	addByte: function($byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,$byte);
	}
	,add: function(src) {
		if(this.pos + src.length > this.size) {
			this.grow(src.length);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset,src.length);
		this.u8.set(sub,this.pos);
		this.pos += src.length;
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0?16:this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if (eof instanceof js__$Boot_HaxeError) eof = eof.val;
			if( js_Boot.__instanceof(eof,haxe_io_Eof) ) {
			} else throw(eof);
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian?ch2 | ch1 << 8:ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
haxe_io_BytesInput.__name__ = true;
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Eof = function() {
};
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
haxe_io_FPHelper.__name__ = true;
haxe_io_FPHelper.i32ToFloat = function(i) {
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return (1 - (i >>> 31 << 1)) * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0?-f:f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0?-2147483648:0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return (1 - (high >>> 31 << 1)) * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else if(!isFinite(v)) {
		if(v > 0) {
			i64.low = 0;
			i64.high = 2146435072;
		} else {
			i64.low = 0;
			i64.high = -1048576;
		}
	} else {
		var av = v < 0?-v:v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		i64.low = sig | 0;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | (sig / 4294967296.0 | 0);
	}
	return i64;
};
var haxe_zip_ExtraField = { __ename__ : true, __constructs__ : ["FUnknown","FInfoZipUnicodePath","FUtf8"] };
haxe_zip_ExtraField.FUnknown = function(tag,bytes) { var $x = ["FUnknown",0,tag,bytes]; $x.__enum__ = haxe_zip_ExtraField; $x.toString = $estr; return $x; };
haxe_zip_ExtraField.FInfoZipUnicodePath = function(name,crc) { var $x = ["FInfoZipUnicodePath",1,name,crc]; $x.__enum__ = haxe_zip_ExtraField; $x.toString = $estr; return $x; };
haxe_zip_ExtraField.FUtf8 = ["FUtf8",2];
haxe_zip_ExtraField.FUtf8.toString = $estr;
haxe_zip_ExtraField.FUtf8.__enum__ = haxe_zip_ExtraField;
var haxe_zip_Huffman = { __ename__ : true, __constructs__ : ["Found","NeedBit","NeedBits"] };
haxe_zip_Huffman.Found = function(i) { var $x = ["Found",0,i]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
haxe_zip_Huffman.NeedBit = function(left,right) { var $x = ["NeedBit",1,left,right]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
haxe_zip_Huffman.NeedBits = function(n,table) { var $x = ["NeedBits",2,n,table]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
var haxe_zip_HuffTools = function() {
};
haxe_zip_HuffTools.__name__ = true;
haxe_zip_HuffTools.prototype = {
	treeDepth: function(t) {
		switch(t[1]) {
		case 0:
			return 0;
		case 1:
			var da = this.treeDepth(t[2]);
			var db = this.treeDepth(t[3]);
			return 1 + (da < db?da:db);
		case 2:
			throw new js__$Boot_HaxeError("assert");
			break;
		}
	}
	,treeCompress: function(t) {
		var d = this.treeDepth(t);
		if(d == 0) {
			return t;
		}
		if(d == 1) {
			if(t[1] == 1) {
				return haxe_zip_Huffman.NeedBit(this.treeCompress(t[2]),this.treeCompress(t[3]));
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		}
		var size = 1 << d;
		var table = [];
		var _g1 = 0;
		while(_g1 < size) {
			++_g1;
			table.push(haxe_zip_Huffman.Found(-1));
		}
		this.treeWalk(table,0,0,d,t);
		return haxe_zip_Huffman.NeedBits(d,table);
	}
	,treeWalk: function(table,p,cd,d,t) {
		if(t[1] == 1) {
			if(d > 0) {
				this.treeWalk(table,p,cd + 1,d - 1,t[2]);
				this.treeWalk(table,p | 1 << cd,cd + 1,d - 1,t[3]);
			} else {
				table[p] = this.treeCompress(t);
			}
		} else {
			table[p] = this.treeCompress(t);
		}
	}
	,treeMake: function(bits,maxbits,v,len) {
		if(len > maxbits) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var idx = v << 5 | len;
		if(bits.h.hasOwnProperty(idx)) {
			return haxe_zip_Huffman.Found(bits.h[idx]);
		}
		v <<= 1;
		++len;
		return haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,v,len),this.treeMake(bits,maxbits,v | 1,len));
	}
	,make: function(lengths,pos,nlengths,maxbits) {
		var counts = [];
		var tmp = [];
		if(maxbits > 32) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var _g1 = 0;
		while(_g1 < maxbits) {
			++_g1;
			counts.push(0);
			tmp.push(0);
		}
		var _g11 = 0;
		while(_g11 < nlengths) {
			var p = lengths[_g11++ + pos];
			if(p >= maxbits) {
				throw new js__$Boot_HaxeError("Invalid huffman");
			}
			counts[p]++;
		}
		var code = 0;
		var _g12 = 1;
		var _g = maxbits - 1;
		while(_g12 < _g) {
			var i = _g12++;
			code = code + counts[i] << 1;
			tmp[i] = code;
		}
		var bits = new haxe_ds_IntMap();
		var _g13 = 0;
		while(_g13 < nlengths) {
			var i1 = _g13++;
			var l = lengths[i1 + pos];
			if(l != 0) {
				var n = tmp[l - 1];
				tmp[l - 1] = n + 1;
				bits.h[n << 5 | l] = i1;
			}
		}
		return this.treeCompress(haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,0,1),this.treeMake(bits,maxbits,1,1)));
	}
	,__class__: haxe_zip_HuffTools
};
var haxe_zip__$InflateImpl_Window = function(hasCrc) {
	this.buffer = new haxe_io_Bytes(new ArrayBuffer(65536));
	this.pos = 0;
	if(hasCrc) {
		this.crc = new haxe_crypto_Adler32();
	}
};
haxe_zip__$InflateImpl_Window.__name__ = true;
haxe_zip__$InflateImpl_Window.prototype = {
	slide: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,32768);
		}
		var b = new haxe_io_Bytes(new ArrayBuffer(65536));
		this.pos -= 32768;
		b.blit(0,this.buffer,32768,this.pos);
		this.buffer = b;
	}
	,addBytes: function(b,p,len) {
		if(this.pos + len > 65536) {
			this.slide();
		}
		this.buffer.blit(this.pos,b,p,len);
		this.pos += len;
	}
	,addByte: function(c) {
		if(this.pos == 65536) {
			this.slide();
		}
		this.buffer.b[this.pos] = c & 255;
		this.pos++;
	}
	,getLastChar: function() {
		return this.buffer.b[this.pos - 1];
	}
	,available: function() {
		return this.pos;
	}
	,checksum: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,this.pos);
		}
		return this.crc;
	}
	,__class__: haxe_zip__$InflateImpl_Window
};
var haxe_zip__$InflateImpl_State = { __ename__ : true, __constructs__ : ["Head","Block","CData","Flat","Crc","Dist","DistOne","Done"] };
haxe_zip__$InflateImpl_State.Head = ["Head",0];
haxe_zip__$InflateImpl_State.Head.toString = $estr;
haxe_zip__$InflateImpl_State.Head.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Block = ["Block",1];
haxe_zip__$InflateImpl_State.Block.toString = $estr;
haxe_zip__$InflateImpl_State.Block.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.CData = ["CData",2];
haxe_zip__$InflateImpl_State.CData.toString = $estr;
haxe_zip__$InflateImpl_State.CData.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Flat = ["Flat",3];
haxe_zip__$InflateImpl_State.Flat.toString = $estr;
haxe_zip__$InflateImpl_State.Flat.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Crc = ["Crc",4];
haxe_zip__$InflateImpl_State.Crc.toString = $estr;
haxe_zip__$InflateImpl_State.Crc.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Dist = ["Dist",5];
haxe_zip__$InflateImpl_State.Dist.toString = $estr;
haxe_zip__$InflateImpl_State.Dist.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.DistOne = ["DistOne",6];
haxe_zip__$InflateImpl_State.DistOne.toString = $estr;
haxe_zip__$InflateImpl_State.DistOne.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Done = ["Done",7];
haxe_zip__$InflateImpl_State.Done.toString = $estr;
haxe_zip__$InflateImpl_State.Done.__enum__ = haxe_zip__$InflateImpl_State;
var haxe_zip_InflateImpl = function(i,header,crc) {
	if(crc == null) {
		crc = true;
	}
	if(header == null) {
		header = true;
	}
	this["final"] = false;
	this.htools = new haxe_zip_HuffTools();
	this.huffman = this.buildFixedHuffman();
	this.huffdist = null;
	this.len = 0;
	this.dist = 0;
	this.state = header?haxe_zip__$InflateImpl_State.Head:haxe_zip__$InflateImpl_State.Block;
	this.input = i;
	this.bits = 0;
	this.nbits = 0;
	this.needed = 0;
	this.output = null;
	this.outpos = 0;
	this.lengths = [];
	var _g = 0;
	while(_g < 19) {
		++_g;
		this.lengths.push(-1);
	}
	this.window = new haxe_zip__$InflateImpl_Window(crc);
};
haxe_zip_InflateImpl.__name__ = true;
haxe_zip_InflateImpl.prototype = {
	buildFixedHuffman: function() {
		if(haxe_zip_InflateImpl.FIXED_HUFFMAN != null) {
			return haxe_zip_InflateImpl.FIXED_HUFFMAN;
		}
		var a = [];
		var _g = 0;
		while(_g < 288) {
			var n = _g++;
			a.push(n <= 143?8:n <= 255?9:n <= 279?7:8);
		}
		haxe_zip_InflateImpl.FIXED_HUFFMAN = this.htools.make(a,0,288,10);
		return haxe_zip_InflateImpl.FIXED_HUFFMAN;
	}
	,readBytes: function(b,pos,len) {
		this.needed = len;
		this.outpos = pos;
		this.output = b;
		if(len > 0) {
			while(this.inflateLoop()) {
			}
		}
		return len - this.needed;
	}
	,getBits: function(n) {
		while(this.nbits < n) {
			this.bits |= this.input.readByte() << this.nbits;
			this.nbits += 8;
		}
		var b = this.bits & (1 << n) - 1;
		this.nbits -= n;
		this.bits >>= n;
		return b;
	}
	,getBit: function() {
		if(this.nbits == 0) {
			this.nbits = 8;
			this.bits = this.input.readByte();
		}
		var b = (this.bits & 1) == 1;
		this.nbits--;
		this.bits >>= 1;
		return b;
	}
	,getRevBits: function(n) {
		if(n == 0) {
			return 0;
		} else if(this.getBit()) {
			return 1 << n - 1 | this.getRevBits(n - 1);
		} else {
			return this.getRevBits(n - 1);
		}
	}
	,resetBits: function() {
		this.bits = 0;
		this.nbits = 0;
	}
	,addBytes: function(b,p,len) {
		this.window.addBytes(b,p,len);
		this.output.blit(this.outpos,b,p,len);
		this.needed -= len;
		this.outpos += len;
	}
	,addByte: function(b) {
		this.window.addByte(b);
		this.output.b[this.outpos] = b & 255;
		this.needed--;
		this.outpos++;
	}
	,addDistOne: function(n) {
		var c = this.window.getLastChar();
		var _g1 = 0;
		while(_g1 < n) {
			++_g1;
			this.addByte(c);
		}
	}
	,addDist: function(d,len) {
		this.addBytes(this.window.buffer,this.window.pos - d,len);
	}
	,applyHuffman: function(h) {
		switch(h[1]) {
		case 0:
			return h[2];
		case 1:
			return this.applyHuffman(this.getBit()?h[3]:h[2]);
		case 2:
			return this.applyHuffman(h[3][this.getBits(h[2])]);
		}
	}
	,inflateLengths: function(a,max) {
		var i = 0;
		var prev = 0;
		while(i < max) {
			var n = this.applyHuffman(this.huffman);
			switch(n) {
			case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:
				prev = n;
				a[i] = n;
				++i;
				break;
			case 16:
				var end = i + 3 + this.getBits(2);
				if(end > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				while(i < end) {
					a[i] = prev;
					++i;
				}
				break;
			case 17:
				i += 3 + this.getBits(3);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			case 18:
				i += 11 + this.getBits(7);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
		}
	}
	,inflateLoop: function() {
		switch(this.state[1]) {
		case 0:
			var cmf = this.input.readByte();
			if((cmf & 15) != 8) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			var flg = this.input.readByte();
			if(((cmf << 8) + flg) % 31 != 0) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			if((flg & 32) != 0) {
				throw new js__$Boot_HaxeError("Unsupported dictionary");
			}
			this.state = haxe_zip__$InflateImpl_State.Block;
			return true;
		case 1:
			this["final"] = this.getBit();
			switch(this.getBits(2)) {
			case 0:
				this.len = this.input.readUInt16();
				if(this.input.readUInt16() != 65535 - this.len) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = haxe_zip__$InflateImpl_State.Flat;
				var r = this.inflateLoop();
				this.resetBits();
				return r;
			case 1:
				this.huffman = this.buildFixedHuffman();
				this.huffdist = null;
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			case 2:
				var hlit = this.getBits(5) + 257;
				var hdist = this.getBits(5) + 1;
				var hclen = this.getBits(4) + 4;
				var _g1 = 0;
				while(_g1 < hclen) this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[_g1++]] = this.getBits(3);
				var _g = hclen;
				while(_g < 19) this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[_g++]] = 0;
				this.huffman = this.htools.make(this.lengths,0,19,8);
				var lengths = [];
				var _g11 = 0;
				var _g2 = hlit + hdist;
				while(_g11 < _g2) {
					++_g11;
					lengths.push(0);
				}
				this.inflateLengths(lengths,hlit + hdist);
				this.huffdist = this.htools.make(lengths,hlit,hdist,16);
				this.huffman = this.htools.make(lengths,0,hlit,16);
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
			break;
		case 2:
			var n = this.applyHuffman(this.huffman);
			if(n < 256) {
				this.addByte(n);
				return this.needed > 0;
			} else if(n == 256) {
				this.state = this["final"]?haxe_zip__$InflateImpl_State.Crc:haxe_zip__$InflateImpl_State.Block;
				return true;
			} else {
				n -= 257;
				var extra_bits = haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL[n];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.len = haxe_zip_InflateImpl.LEN_BASE_VAL_TBL[n] + this.getBits(extra_bits);
				var dist_code = this.huffdist == null?this.getRevBits(5):this.applyHuffman(this.huffdist);
				extra_bits = haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL[dist_code];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.dist = haxe_zip_InflateImpl.DIST_BASE_VAL_TBL[dist_code] + this.getBits(extra_bits);
				if(this.dist > this.window.available()) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = this.dist == 1?haxe_zip__$InflateImpl_State.DistOne:haxe_zip__$InflateImpl_State.Dist;
				return true;
			}
			break;
		case 3:
			var rlen = this.len < this.needed?this.len:this.needed;
			var bytes = this.input.read(rlen);
			this.len -= rlen;
			this.addBytes(bytes,0,rlen);
			if(this.len == 0) {
				this.state = this["final"]?haxe_zip__$InflateImpl_State.Crc:haxe_zip__$InflateImpl_State.Block;
			}
			return this.needed > 0;
		case 4:
			var calc = this.window.checksum();
			if(calc == null) {
				this.state = haxe_zip__$InflateImpl_State.Done;
				return true;
			}
			if(!calc.equals(haxe_crypto_Adler32.read(this.input))) {
				throw new js__$Boot_HaxeError("Invalid CRC");
			}
			this.state = haxe_zip__$InflateImpl_State.Done;
			return true;
		case 5:
			while(this.len > 0 && this.needed > 0) {
				var rdist = this.len < this.dist?this.len:this.dist;
				var rlen1 = this.needed < rdist?this.needed:rdist;
				this.addDist(this.dist,rlen1);
				this.len -= rlen1;
			}
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 6:
			var rlen2 = this.len < this.needed?this.len:this.needed;
			this.addDistOne(rlen2);
			this.len -= rlen2;
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 7:
			return false;
		}
	}
	,__class__: haxe_zip_InflateImpl
};
var haxe_zip_Reader = function(i) {
	this.i = i;
};
haxe_zip_Reader.__name__ = true;
haxe_zip_Reader.readZip = function(i) {
	return new haxe_zip_Reader(i).read();
};
haxe_zip_Reader.prototype = {
	readZipDate: function() {
		var t = this.i.readUInt16();
		var d = this.i.readUInt16();
		return new Date((d >> 9) + 1980,(d >> 5 & 15) - 1,d & 31,t >> 11 & 31,t >> 5 & 63,(t & 31) << 1);
	}
	,readExtraFields: function(length) {
		var fields = new List();
		while(length > 0) {
			if(length < 4) {
				throw new js__$Boot_HaxeError("Invalid extra fields data");
			}
			var tag = this.i.readUInt16();
			var len = this.i.readUInt16();
			if(length < len) {
				throw new js__$Boot_HaxeError("Invalid extra fields data");
			}
			if(tag == 28789) {
				var version = this.i.readByte();
				if(version != 1) {
					var data = new haxe_io_BytesBuffer();
					data.addByte(version);
					data.add(this.i.read(len - 1));
					fields.add(haxe_zip_ExtraField.FUnknown(tag,data.getBytes()));
				} else {
					var crc = this.i.readInt32();
					fields.add(haxe_zip_ExtraField.FInfoZipUnicodePath(this.i.read(len - 5).toString(),crc));
				}
			} else {
				fields.add(haxe_zip_ExtraField.FUnknown(tag,this.i.read(len)));
			}
			length -= 4 + len;
		}
		return fields;
	}
	,readEntryHeader: function() {
		var i = this.i;
		var h = i.readInt32();
		if(h == 33639248 || h == 101010256) {
			return null;
		}
		if(h != 67324752) {
			throw new js__$Boot_HaxeError("Invalid Zip Data");
		}
		i.readUInt16();
		var flags = i.readUInt16();
		if((flags & 63473) != 0) {
			throw new js__$Boot_HaxeError("Unsupported flags " + flags);
		}
		var compression = i.readUInt16();
		var compressed = compression != 0;
		if(compressed && compression != 8) {
			throw new js__$Boot_HaxeError("Unsupported compression " + compression);
		}
		var mtime = this.readZipDate();
		var crc32 = i.readInt32();
		var csize = i.readInt32();
		var usize = i.readInt32();
		var fnamelen = i.readInt16();
		var elen = i.readInt16();
		var fname = i.readString(fnamelen);
		var fields = this.readExtraFields(elen);
		if((flags & 2048) != 0) {
			fields.push(haxe_zip_ExtraField.FUtf8);
		}
		if((flags & 8) != 0) {
			crc32 = null;
		}
		return { fileName : fname, fileSize : usize, fileTime : mtime, compressed : compressed, dataSize : csize, data : null, crc32 : crc32, extraFields : fields};
	}
	,read: function() {
		var l = new List();
		var tmp = null;
		while(true) {
			var e = this.readEntryHeader();
			if(e == null) {
				break;
			}
			if(e.crc32 == null) {
				if(e.compressed) {
					if(tmp == null) {
						tmp = new haxe_io_Bytes(new ArrayBuffer(65536));
					}
					var out = new haxe_io_BytesBuffer();
					var z = new haxe_zip_InflateImpl(this.i,false,false);
					while(true) {
						var n = z.readBytes(tmp,0,65536);
						out.addBytes(tmp,0,n);
						if(n < 65536) {
							break;
						}
					}
					e.data = out.getBytes();
				} else {
					e.data = this.i.read(e.dataSize);
				}
				e.crc32 = this.i.readInt32();
				if(e.crc32 == 134695760) {
					e.crc32 = this.i.readInt32();
				}
				e.dataSize = this.i.readInt32();
				e.fileSize = this.i.readInt32();
				e.dataSize = e.fileSize;
				e.compressed = false;
			} else {
				e.data = this.i.read(e.dataSize);
			}
			l.add(e);
		}
		return l;
	}
	,__class__: haxe_zip_Reader
};
var helper_browser_BrowserEventEngine = function() {
	this.registeredEvent = [];
};
helper_browser_BrowserEventEngine.__name__ = true;
helper_browser_BrowserEventEngine.prototype = {
	onAddedToApp: function(e) {
		this.addAllActions();
		this.display.addEventListener(priori_event_PriEvent.REMOVED_FROM_APP,$bind(this,this.onRemovedFromApp));
		this.display.removeEventListener(priori_event_PriEvent.ADDED_TO_APP,$bind(this,this.onAddedToApp));
	}
	,onRemovedFromApp: function(e) {
		this.removeAllActions();
		this.display.removeEventListener(priori_event_PriEvent.REMOVED_FROM_APP,$bind(this,this.onRemovedFromApp));
		this.display.addEventListener(priori_event_PriEvent.ADDED_TO_APP,$bind(this,this.onAddedToApp));
	}
	,registerEvent: function(event) {
		if(helper_browser_BrowserEventEngine.SPECIAL_EVENT_LIST.indexOf(event) <= -1) {
			return;
		}
		if(this.registeredEvent.indexOf(event) == -1) {
			this.registeredEvent.push(event);
			if(window.document.documentElement.contains(this.jsel)) {
				this.attachToElement(event);
			}
		}
	}
	,removeAllActions: function() {
		var _g1 = 0;
		var _g = this.registeredEvent.length;
		while(_g1 < _g) this.dettachFromElement(this.registeredEvent[_g1++]);
	}
	,addAllActions: function() {
		var _g1 = 0;
		var _g = this.registeredEvent.length;
		while(_g1 < _g) this.attachToElement(this.registeredEvent[_g1++]);
	}
	,isOnDom: function() {
		return window.document.documentElement.contains(this.jsel);
	}
	,isSpecial: function(event) {
		return helper_browser_BrowserEventEngine.SPECIAL_EVENT_LIST.indexOf(event) > -1;
	}
	,attachToElement: function(event) {
		switch(event) {
		case "click":
			this.jqel.on("click",null,$bind(this,this.on_mouse_click));
			break;
		case "focusin":
			this.jqel.on("focusin",null,$bind(this,this.on_focus_in));
			break;
		case "focusout":
			this.jqel.on("focusout",null,$bind(this,this.on_focus_out));
			break;
		case "keydown":
			this.jqel.on("keydown",null,$bind(this,this.on_keyboard_down));
			break;
		case "keyup":
			this.jqel.on("keyup",null,$bind(this,this.on_keyboard_up));
			break;
		case "mousedown":
			this.jqel.on("mousedown",null,$bind(this,this.on_mouse_down));
			break;
		case "mouseenter":
			this.jqel.on("mouseenter",null,$bind(this,this.on_mouse_enter));
			break;
		case "mouseleave":
			this.jqel.on("mouseleave",null,$bind(this,this.on_mouse_leave));
			break;
		case "mouseup":
			this.jqel.on("mouseup",null,$bind(this,this.on_mouse_up));
			break;
		}
	}
	,dettachFromElement: function(event) {
		switch(event) {
		case "click":
			this.jqel.off("click",null,$bind(this,this.on_mouse_click));
			break;
		case "focusin":
			this.jqel.off("focusin",null,$bind(this,this.on_focus_in));
			break;
		case "focusout":
			this.jqel.off("focusout",null,$bind(this,this.on_focus_out));
			break;
		case "keydown":
			this.jqel.off("keydown",null,$bind(this,this.on_keyboard_down));
			break;
		case "keyup":
			this.jqel.off("keyup",null,$bind(this,this.on_keyboard_up));
			break;
		case "mousedown":
			this.jqel.off("mousedown",null,$bind(this,this.on_mouse_down));
			break;
		case "mouseenter":
			this.jqel.off("mouseenter",null,$bind(this,this.on_mouse_enter));
			break;
		case "mouseleave":
			this.jqel.off("mouseleave",null,$bind(this,this.on_mouse_leave));
			break;
		case "mouseup":
			this.jqel.off("mouseup",null,$bind(this,this.on_mouse_up));
			break;
		}
	}
	,on_focus_in: function(e) {
		if(!this.display.get_visible() || this.display.get_disabled()) {
			return;
		}
		this.display.dispatchEvent(new priori_event_PriFocusEvent("focusin"));
	}
	,on_focus_out: function(e) {
		if(!this.display.get_visible() || this.display.get_disabled()) {
			return;
		}
		this.display.dispatchEvent(new priori_event_PriFocusEvent("focusout"));
	}
	,on_keyboard_up: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriKeyboardEvent("keyup");
		pe.keycode = e.which;
		pe.altKey = e.altKey;
		pe.ctrlKey = e.ctrlKey || e.metaKey;
		pe.shiftKey = e.shiftKey;
		this.display.dispatchEvent(pe);
	}
	,on_keyboard_down: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriKeyboardEvent("keydown");
		pe.keycode = e.which;
		pe.altKey = e.altKey;
		pe.ctrlKey = e.ctrlKey || e.metaKey;
		pe.shiftKey = e.shiftKey;
		this.display.dispatchEvent(pe);
	}
	,on_mouse_down: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		this.display.dispatchEvent(new priori_event_PriTapEvent("mousedown"));
	}
	,on_mouse_up: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		this.display.dispatchEvent(new priori_event_PriTapEvent("mouseup"));
	}
	,on_mouse_click: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		this.display.dispatchEvent(new priori_event_PriTapEvent("click"));
	}
	,on_mouse_enter: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		this.display.dispatchEvent(new priori_event_PriMouseEvent("mouseenter"));
	}
	,on_mouse_leave: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		this.display.dispatchEvent(new priori_event_PriMouseEvent("mouseleave"));
	}
	,kill: function() {
		this.removeAllActions();
		this.registeredEvent = [];
		this.display.removeEventListener(priori_event_PriEvent.REMOVED_FROM_APP,$bind(this,this.onRemovedFromApp));
		this.display.removeEventListener(priori_event_PriEvent.ADDED_TO_APP,$bind(this,this.onAddedToApp));
	}
	,__class__: helper_browser_BrowserEventEngine
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class?o.__name__ != null:false) {
			return true;
		}
		if(cl == Enum?o.__ename__ != null:false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
js_html_compat_ArrayBuffer.__name__ = true;
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null?0:byteOffset;
	this.length = byteLength == null?buffer.byteLength - this.offset:byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.byteLength = this.length;
	this.byteOffset = this.offset;
	this.buffer = this.buf;
};
js_html_compat_DataView.__name__ = true;
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0?value + 128 & 255:value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0?value + 65536:value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Uint8Array = function() { };
js_html_compat_Uint8Array.__name__ = true;
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var priori_assets_Asset = function(id,url) {
	priori_event_PriEventDispatcher.call(this);
	this.id = id;
	this.url = url;
};
priori_assets_Asset.__name__ = true;
priori_assets_Asset.__super__ = priori_event_PriEventDispatcher;
priori_assets_Asset.prototype = $extend(priori_event_PriEventDispatcher.prototype,{
	load: function() {
	}
	,getElement: function() {
		return $();
	}
	,__class__: priori_assets_Asset
});
var priori_assets_AssetManager = function() {
	this._totalErrors = 0;
	this.maxError = 10;
	this.loadedList = [];
	this.queueList = [];
	priori_event_PriEventDispatcher.call(this);
	if(priori_assets_AssetManager._g != null) {
		throw new js__$Boot_HaxeError("Use static g()");
	}
	this._isLoading = false;
	this._isLoaded = false;
};
priori_assets_AssetManager.__name__ = true;
priori_assets_AssetManager.g = function() {
	if(priori_assets_AssetManager._g == null) {
		priori_assets_AssetManager._g = new priori_assets_AssetManager();
	}
	return priori_assets_AssetManager._g;
};
priori_assets_AssetManager.__super__ = priori_event_PriEventDispatcher;
priori_assets_AssetManager.prototype = $extend(priori_event_PriEventDispatcher.prototype,{
	getAsset: function(id) {
		var i = 0;
		var n = this.loadedList.length;
		var result = null;
		while(i < n) {
			if(this.loadedList[i].id == id) {
				result = this.loadedList[i];
			}
			++i;
		}
		return result;
	}
	,addToQueue: function(asset) {
		if(this.queueList.indexOf(asset) == -1 && this.loadedList.indexOf(asset) == -1) {
			asset.addEventListener(priori_event_PriEvent.COMPLETE,$bind(this,this.onAssetComplete));
			asset.addEventListener(priori_event_PriEvent.ERROR,$bind(this,this.onAssetError));
			this.queueList.push(asset);
		}
	}
	,load: function() {
		if(this._isLoaded == false && this._isLoading == false) {
			this._totalErrors = 0;
			this.tryLoadNextAsset();
		}
	}
	,tryLoadNextAsset: function() {
		if(this.queueList.length == 0) {
			this._isLoading = false;
			this._isLoaded = true;
			this.dispatchEvent(new priori_assets_AssetManagerEvent(priori_assets_AssetManagerEvent.ASSET_COMPLETE,this.getPercentCompleted()));
		}
	}
	,getPercentCompleted: function() {
		var total = this.queueList.length + this.loadedList.length;
		var percent;
		if(total == 0) {
			percent = 1;
		} else {
			percent = this.loadedList.length / total;
		}
		return percent;
	}
	,onAssetComplete: function(e) {
		var asset = js_Boot.__cast(e.currentTarget , priori_assets_Asset);
		HxOverrides.remove(this.queueList,asset);
		this.loadedList.push(asset);
		asset.removeEventListener(priori_event_PriEvent.COMPLETE,$bind(this,this.onAssetComplete));
		asset.removeEventListener(priori_event_PriEvent.ERROR,$bind(this,this.onAssetError));
		this.dispatchEvent(new priori_assets_AssetManagerEvent(priori_assets_AssetManagerEvent.ASSET_PROGRESS,this.getPercentCompleted()));
		this.tryLoadNextAsset();
	}
	,onAssetError: function(e) {
		var asset = js_Boot.__cast(e.currentTarget , priori_assets_Asset);
		this._totalErrors++;
		if(this._totalErrors < this.maxError) {
			HxOverrides.remove(this.queueList,asset);
			this.queueList.push(asset);
			this.tryLoadNextAsset();
		} else {
			this._isLoaded = false;
			this._isLoading = false;
			this.dispatchEvent(new priori_assets_AssetManagerEvent(priori_assets_AssetManagerEvent.ASSET_ERROR,this.getPercentCompleted()));
		}
	}
	,__class__: priori_assets_AssetManager
});
var priori_assets_AssetManagerEvent = function(type,percentLoaded) {
	priori_event_PriEvent.call(this,type);
	this.percentLoaded = percentLoaded;
};
priori_assets_AssetManagerEvent.__name__ = true;
priori_assets_AssetManagerEvent.__super__ = priori_event_PriEvent;
priori_assets_AssetManagerEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_assets_AssetManagerEvent(this.type,this.percentLoaded);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = null;
		return clone;
	}
	,__class__: priori_assets_AssetManagerEvent
});
var priori_view_form_PriFormInputText = function() {
	priori_view_form_PriFormElementBase.call(this);
	this.set_placeholder("");
	this.set_password(false);
	this.set_clipping(false);
};
priori_view_form_PriFormInputText.__name__ = true;
priori_view_form_PriFormInputText.__super__ = priori_view_form_PriFormElementBase;
priori_view_form_PriFormInputText.prototype = $extend(priori_view_form_PriFormElementBase.prototype,{
	set_marginLeft: function(value) {
		this.marginLeft = value;
		this._baseElement.css("padding-left",value == null?"":value + "px");
		return value;
	}
	,set_marginRight: function(value) {
		this.marginRight = value;
		this._baseElement.css("padding-right",value == null?"":value + "px");
		return value;
	}
	,getComponentCode: function() {
		return "<input type=\"text\" />";
	}
	,onAddedToApp: function() {
		priori_view_form_PriFormElementBase.prototype.onAddedToApp.call(this);
		priori_app_PriApp.g().getBody().on("input","[id=" + this.get_fieldId() + "]",$bind(this,this._onChange));
	}
	,onRemovedFromApp: function() {
		priori_view_form_PriFormElementBase.prototype.onRemovedFromApp.call(this);
		priori_app_PriApp.g().getBody().off("input","[id=" + this.get_fieldId() + "]",$bind(this,this._onChange));
	}
	,_onChange: function(event) {
		this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.CHANGE));
	}
	,set_value: function(value) {
		this.value = value;
		this._baseElement.val(value);
		return value;
	}
	,get_value: function() {
		var result = this.value;
		var isDisabled = this.get_disabled();
		if(isDisabled) {
			this.suspendDisabled();
		}
		result = this._baseElement.val();
		if(isDisabled) {
			this.reactivateDisable();
		}
		return result;
	}
	,set_placeholder: function(value) {
		this.placeholder = value;
		this._baseElement.attr("placeholder",value);
		return value;
	}
	,set_password: function(value) {
		this.password = value;
		if(value) {
			this._baseElement.attr("type","password");
		} else {
			this._baseElement.attr("type","font");
		}
		return value;
	}
	,__class__: priori_view_form_PriFormInputText
	,__properties__: $extend(priori_view_form_PriFormElementBase.prototype.__properties__,{set_marginRight:"set_marginRight",set_marginLeft:"set_marginLeft",set_password:"set_password",set_placeholder:"set_placeholder",set_value:"set_value",get_value:"get_value"})
});
var priori_bootstrap_PriBSFormInputText = function() {
	priori_view_form_PriFormInputText.call(this);
	this.set_clipping(false);
};
priori_bootstrap_PriBSFormInputText.__name__ = true;
priori_bootstrap_PriBSFormInputText.__super__ = priori_view_form_PriFormInputText;
priori_bootstrap_PriBSFormInputText.prototype = $extend(priori_view_form_PriFormInputText.prototype,{
	getComponentCode: function() {
		return "<input class=\"form-control\" type=\"text\">";
	}
	,__class__: priori_bootstrap_PriBSFormInputText
});
var priori_view_form_PriFormLabel = function() {
	priori_view_form_PriFormElementBase.call(this);
	this.set_text("");
	this.set_fontSize(12);
};
priori_view_form_PriFormLabel.__name__ = true;
priori_view_form_PriFormLabel.__super__ = priori_view_form_PriFormElementBase;
priori_view_form_PriFormLabel.prototype = $extend(priori_view_form_PriFormElementBase.prototype,{
	getComponentCode: function() {
		return "<label></label>";
	}
	,set_text: function(value) {
		this.text = value;
		this._baseElement.text(value);
		return value;
	}
	,set_fontStyle: function(value) {
		this.fontStyle = value;
		if(value == null) {
			this._baseElement.css(priori_style_font_PriFontStyle.getFontStyleObjectBase());
		} else {
			this._baseElement.css(value.getFontStyleObject());
		}
		return value;
	}
	,set_fontSize: function(value) {
		if(this.fontSize != value) {
			this.fontSize = value;
			this._baseElement.css("font-size",(value | 0) + "px");
		}
		return value;
	}
	,set_formElement: function(value) {
		this.formElement = value;
		if(value == null) {
			this._baseElement.removeAttr("for");
		} else {
			this._baseElement.attr("for",this.formElement.get_fieldId());
		}
		return value;
	}
	,__class__: priori_view_form_PriFormLabel
	,__properties__: $extend(priori_view_form_PriFormElementBase.prototype.__properties__,{set_fontSize:"set_fontSize",set_fontStyle:"set_fontStyle",set_text:"set_text",set_formElement:"set_formElement"})
});
var priori_bootstrap_PriBSFormLabel = function() {
	priori_view_form_PriFormLabel.call(this);
	this.set_fontStyle(new priori_style_font_PriFontStyle(3355443,""));
	this.set_fontSize(14);
	this._baseElement.css("margin-bottom","0px");
};
priori_bootstrap_PriBSFormLabel.__name__ = true;
priori_bootstrap_PriBSFormLabel.__super__ = priori_view_form_PriFormLabel;
priori_bootstrap_PriBSFormLabel.prototype = $extend(priori_view_form_PriFormLabel.prototype,{
	__class__: priori_bootstrap_PriBSFormLabel
});
var priori_view_form_PriFormSelect = function() {
	priori_view_form_PriFormElementBase.call(this);
	this.set_labelField("label");
};
priori_view_form_PriFormSelect.__name__ = true;
priori_view_form_PriFormSelect.__super__ = priori_view_form_PriFormElementBase;
priori_view_form_PriFormSelect.prototype = $extend(priori_view_form_PriFormElementBase.prototype,{
	getComponentCode: function() {
		return "<select></select>";
	}
	,onAddedToApp: function() {
		this._baseElement.on("change",null,$bind(this,this._onSelectChange));
	}
	,onRemovedFromApp: function() {
		this._baseElement.off("change",null,$bind(this,this._onSelectChange));
	}
	,set_data: function(value) {
		this.data = value;
		if(this._selectedData == null && value != null && value.length > 0 || value != null && value.length > 0 && this.data.indexOf(this._selectedData) == -1) {
			this._selectedData = this.data[0];
		}
		this.updateDropDownData();
		return value;
	}
	,set_labelField: function(value) {
		this.labelField = value;
		this.updateDropDownData();
		return value;
	}
	,get_selectedIndex: function() {
		var result = -1;
		if(this._baseElement != null) {
			var isDisabled = this.get_disabled();
			if(isDisabled) {
				this.suspendDisabled();
			}
			var selectedId = this._baseElement.val();
			if(isDisabled) {
				this.reactivateDisable();
			}
			var _g1 = 0;
			var _g = this._menuItens.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(this._menuItens[i].id == selectedId) {
					result = i;
					break;
				}
			}
		}
		return result;
	}
	,set_selectedIndex: function(value) {
		var newIndex = value;
		if(this.data != null && this.data.length > 0) {
			if(value < 0) {
				newIndex = 0;
			}
			if(newIndex > this.data.length - 1) {
				newIndex = this.data.length - 1;
			}
			this._selectedData = this.data[newIndex];
		}
		this.updateDropDownView();
		return value;
	}
	,get_selected: function() {
		var result = this._selectedData;
		if(this._baseElement != null) {
			var i = 0;
			var n = this._menuItens.length;
			var isDisabled = this.get_disabled();
			if(isDisabled) {
				this.suspendDisabled();
			}
			var selectedId = this._baseElement.val();
			if(isDisabled) {
				this.reactivateDisable();
			}
			while(i < n) {
				if(this._menuItens[i].id == selectedId) {
					result = this._menuItens[i].data;
					i = n;
				}
				++i;
			}
		}
		return result;
	}
	,set_selected: function(value) {
		this._selectedData = value;
		this.updateDropDownView();
		return value;
	}
	,updateDropDownView: function() {
		if(this._selectedData != null) {
			var i = 0;
			var n = this._menuItens.length;
			while(i < n) {
				if(this._selectedData == this._menuItens[i].data) {
					this._baseElement.val(this._menuItens[i].id);
					i = n;
				}
				++i;
			}
		}
	}
	,getLabelForData: function(data) {
		var result = "";
		if(this.labelField != null && this.labelField != "") {
			var field = this.labelField;
			var tmp;
			var val;
			if(data == null) {
				val = null;
			} else {
				var val1;
				if(data.__properties__) {
					tmp = data.__properties__["get_" + field];
					val1 = tmp;
				} else {
					val1 = false;
				}
				if(val1) {
					val = data[tmp]();
				} else {
					val = data[field];
				}
			}
			if(val == null) {
				result = Std.string(data);
			} else {
				result = Std.string(val);
			}
		} else {
			result = Std.string(data);
		}
		return result;
	}
	,updateDropDownData: function() {
		this.clearDropDown();
		if(this.data != null) {
			var i = 0;
			var n = this.data.length;
			var item_id = null;
			var item_label = null;
			var item_data = null;
			var item_view;
			while(i < n) {
				item_data = this.data[i];
				if(item_data != null) {
					item_label = this.getLabelForData(item_data);
					if(item_label == null) {
						item_label = "";
					}
					item_id = "opt_" + this.getRandomId(4);
					item_view = $("<option>",{ value : item_id, text : item_label});
					this._menuItens.push({ id : item_id, label : item_label, data : item_data});
					this._baseElement.append(item_view);
				}
				item_data = null;
				item_id = null;
				item_label = null;
				++i;
			}
		}
		this.updateDropDownView();
	}
	,clearDropDown: function() {
		if(this._baseElement != null) {
			this._baseElement.find("option").remove();
			this._menuItens = [];
		}
	}
	,_onSelectChange: function(e) {
		this._selectedData = this.get_selected();
		this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.CHANGE));
	}
	,kill: function() {
		this.getElement().off();
		this.clearDropDown();
		priori_view_form_PriFormElementBase.prototype.kill.call(this);
	}
	,__class__: priori_view_form_PriFormSelect
	,__properties__: $extend(priori_view_form_PriFormElementBase.prototype.__properties__,{set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_selected:"set_selected",get_selected:"get_selected",set_labelField:"set_labelField",set_data:"set_data"})
});
var priori_bootstrap_PriBSFormSelect = function() {
	priori_view_form_PriFormSelect.call(this);
	this.set_clipping(false);
	this.set_context(priori_bootstrap_type_PriBSContextualType.DEFAULT);
};
priori_bootstrap_PriBSFormSelect.__name__ = true;
priori_bootstrap_PriBSFormSelect.__super__ = priori_view_form_PriFormSelect;
priori_bootstrap_PriBSFormSelect.prototype = $extend(priori_view_form_PriFormSelect.prototype,{
	getComponentCode: function() {
		return "<select class=\"form-control\" ></select>";
	}
	,set_context: function(value) {
		this._baseElement.removeClass("btn-danger btn-default btn-info btn-link btn-primary btn-success btn-warning");
		if(value == priori_bootstrap_type_PriBSContextualType.DANGER) {
			this._baseElement.addClass("btn-danger");
		} else if(value == priori_bootstrap_type_PriBSContextualType.DEFAULT) {
			this._baseElement.addClass("btn-default");
		} else if(value == priori_bootstrap_type_PriBSContextualType.INFO) {
			this._baseElement.addClass("btn-info");
		} else if(value == priori_bootstrap_type_PriBSContextualType.LINK) {
			this._baseElement.addClass("btn-link");
		} else if(value == priori_bootstrap_type_PriBSContextualType.PRIMARY) {
			this._baseElement.addClass("btn-primary");
		} else if(value == priori_bootstrap_type_PriBSContextualType.SUCCESS) {
			this._baseElement.addClass("btn-success");
		} else if(value == priori_bootstrap_type_PriBSContextualType.WARNING) {
			this._baseElement.addClass("btn-warning");
		}
		return this.context = value;
	}
	,set_size: function(value) {
		this._baseElement.removeClass("input-lg input-sm input-xs");
		if(value == priori_bootstrap_type_PriBSSize.LARGE) {
			this._baseElement.addClass("input-lg");
		} else if(value == priori_bootstrap_type_PriBSSize.SMALL) {
			this._baseElement.addClass("input-sm");
		} else if(value == priori_bootstrap_type_PriBSSize.EXTRA_SMALL) {
			this._baseElement.addClass("input-sm");
		}
		return this.size = value;
	}
	,__class__: priori_bootstrap_PriBSFormSelect
	,__properties__: $extend(priori_view_form_PriFormSelect.prototype.__properties__,{set_context:"set_context",set_size:"set_size"})
});
var priori_bootstrap_PriBSLabel = function() {
	priori_view_component_PriExtendable.call(this);
	this.set_text("Label");
	this.set_context(priori_bootstrap_type_PriBSContextualType.DEFAULT);
};
priori_bootstrap_PriBSLabel.__name__ = true;
priori_bootstrap_PriBSLabel.__super__ = priori_view_component_PriExtendable;
priori_bootstrap_PriBSLabel.prototype = $extend(priori_view_component_PriExtendable.prototype,{
	getComponentCode: function() {
		return "<span class=\"label\" />";
	}
	,set_text: function(value) {
		this.text = value;
		this._baseElement.text(value);
		return value;
	}
	,set_context: function(value) {
		this._baseElement.removeClass("label-danger label-default label-info label-link label-primary label-success label-warning");
		if(value == priori_bootstrap_type_PriBSContextualType.DANGER) {
			this._baseElement.addClass("label-danger");
		} else if(value == priori_bootstrap_type_PriBSContextualType.DEFAULT) {
			this._baseElement.addClass("label-default");
		} else if(value == priori_bootstrap_type_PriBSContextualType.INFO) {
			this._baseElement.addClass("label-info");
		} else if(value == priori_bootstrap_type_PriBSContextualType.LINK) {
			this._baseElement.addClass("label-link");
		} else if(value == priori_bootstrap_type_PriBSContextualType.PRIMARY) {
			this._baseElement.addClass("label-primary");
		} else if(value == priori_bootstrap_type_PriBSContextualType.SUCCESS) {
			this._baseElement.addClass("label-success");
		} else if(value == priori_bootstrap_type_PriBSContextualType.WARNING) {
			this._baseElement.addClass("label-warning");
		}
		return this.context = value;
	}
	,__class__: priori_bootstrap_PriBSLabel
	,__properties__: $extend(priori_view_component_PriExtendable.prototype.__properties__,{set_context:"set_context",set_text:"set_text"})
});
var priori_bootstrap_PriBSNavTab = function() {
	priori_view_component_PriExtendable.call(this);
	this._menuItens = [];
	this.set_clipping(false);
	this.set_labelField("label");
	this.set_justified(false);
	this.updateNavTabData();
};
priori_bootstrap_PriBSNavTab.__name__ = true;
priori_bootstrap_PriBSNavTab.__super__ = priori_view_component_PriExtendable;
priori_bootstrap_PriBSNavTab.prototype = $extend(priori_view_component_PriExtendable.prototype,{
	getComponentCode: function() {
		return "<ul class=\"nav nav-tabs\" />";
	}
	,onAddedToApp: function() {
		this.registerClicks();
	}
	,onRemovedFromApp: function() {
		this.unregisterClicks();
	}
	,registerClicks: function() {
		this.unregisterClicks();
		var i = 0;
		var n = this._menuItens.length;
		while(i < n) {
			this._menuItens[i].view.on("click",null,i,$bind(this,this._onItemClick));
			++i;
		}
	}
	,unregisterClicks: function() {
		this._baseElement.find("li").off();
	}
	,set_data: function(value) {
		this.data = value;
		if(this._selectedData == null && value != null && value.length > 0 || value != null && value.length > 0 && this.data.indexOf(this._selectedData) == -1) {
			this._selectedData = this.data[0];
		}
		this.updateNavTabData();
		return value;
	}
	,set_justified: function(value) {
		this.justified = value;
		if(value) {
			this._baseElement.addClass("nav-justified");
		} else {
			this._baseElement.removeClass("nav-justified");
		}
		return value;
	}
	,set_labelField: function(value) {
		this.labelField = value;
		this.updateNavTabData();
		return value;
	}
	,get_selected: function() {
		return this._selectedData;
	}
	,set_selected: function(value) {
		this._selectedData = value;
		this.updateNavTabView();
		return this.selected = value;
	}
	,updateNavTabView: function() {
		if(this._selectedData != null) {
			var i = 0;
			var n = this._menuItens.length;
			while(i < n) {
				if(this._selectedData == this._menuItens[i].data) {
					this._menuItens[i].view.addClass("active");
				} else {
					this._menuItens[i].view.removeClass("active");
				}
				++i;
			}
		}
	}
	,getLabelForData: function(data) {
		var result = "";
		if(this.labelField != null && this.labelField != "") {
			var field = this.labelField;
			var tmp;
			var val;
			if(data == null) {
				val = null;
			} else {
				var val1;
				if(data.__properties__) {
					tmp = data.__properties__["get_" + field];
					val1 = tmp;
				} else {
					val1 = false;
				}
				if(val1) {
					val = data[tmp]();
				} else {
					val = data[field];
				}
			}
			if(val == null) {
				result = Std.string(data);
			} else {
				result = Std.string(val);
			}
		} else {
			result = Std.string(data);
		}
		return result;
	}
	,updateNavTabData: function() {
		this.clearNavTab();
		if(this.data != null) {
			var i = 0;
			var n = this.data.length;
			var item_label = null;
			var item_data = null;
			while(i < n) {
				item_data = this.data[i];
				if(item_data != null) {
					item_label = this.getLabelForData(item_data);
					this._menuItens.push({ label : item_label, data : item_data, view : $("<li role=\"presentation\"><a href=\"#\">" + item_label + "</a></li>")});
					this._baseElement.append(this._menuItens[i].view);
				}
				item_data = null;
				item_label = null;
				++i;
			}
		}
		this.registerClicks();
		this.updateNavTabView();
	}
	,_onItemClick: function(e) {
		var index = js_Boot.__cast(e.data , Int);
		if(index == null) {
			index = 0;
		}
		if(index < 0) {
			index = 0;
		}
		if(this._menuItens == null || this._menuItens.length == 0) {
			index = -1;
		}
		if(index > -1) {
			if(this._selectedData != this._menuItens[index].data) {
				this._selectedData = this._menuItens[index].data;
				this.updateNavTabView();
				this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.CHANGE));
			}
		}
	}
	,clearNavTab: function() {
		this.unregisterClicks();
		this._baseElement.find("li").remove();
		this._menuItens = [];
	}
	,__class__: priori_bootstrap_PriBSNavTab
	,__properties__: $extend(priori_view_component_PriExtendable.prototype.__properties__,{set_justified:"set_justified",set_selected:"set_selected",get_selected:"get_selected",set_labelField:"set_labelField",set_data:"set_data"})
});
var priori_bootstrap_container_PriBSTabPanel = function() {
	priori_view_container_PriGroup.call(this);
	this.tabItens = [];
	this.set_keepInstanceState(false);
	this.set_justified(true);
};
priori_bootstrap_container_PriBSTabPanel.__name__ = true;
priori_bootstrap_container_PriBSTabPanel.__super__ = priori_view_container_PriGroup;
priori_bootstrap_container_PriBSTabPanel.prototype = $extend(priori_view_container_PriGroup.prototype,{
	set_justified: function(value) {
		this.justified = value;
		if(this.tabs != null) {
			this.tabs.set_justified(value);
		}
		return value;
	}
	,set_keepInstanceState: function(value) {
		this.keepInstanceState = value;
		if(value == false) {
			var i = 0;
			var n = this.tabItens.length;
			while(i < n) {
				if(this.tabItens[i].instance != null && this.tabItens[i].instance != this.content) {
					this.tabItens[i].instance.kill();
					this.tabItens[i].instance = null;
				}
				++i;
			}
		}
		return value;
	}
	,addTab: function(title,content,args) {
		if(args == null) {
			args = [];
		}
		this.tabItens.push({ title : title, content : content, instance : null, args : args});
		if(this.tabs != null) {
			this.tabs.set_data(this.tabItens);
			this.invalidate();
			this.validate();
		}
	}
	,addChild: function(view) {
		console.log("Do Not use addChild. Use addTab() instead.");
	}
	,removeChild: function(view) {
	}
	,setup: function() {
		this.tabs = new priori_bootstrap_PriBSNavTab();
		this.tabs.set_data(this.tabItens);
		this.tabs.set_labelField("title");
		this.tabs.set_justified(this.justified);
		this.tabs.addEventListener(priori_event_PriEvent.CHANGE,$bind(this,this.onTabChange));
		priori_view_container_PriGroup.prototype.addChild.call(this,this.tabs);
		this.container = new priori_view_container_PriContainer();
		this.container.set_border(new priori_style_border_PriBorderStyle(1,13421772,priori_style_border_PriBorderType.SOLID));
		priori_view_container_PriGroup.prototype.addChild.call(this,this.container);
		if(this.tabs.get_selected() != null) {
			this.onTabChange(null);
		}
	}
	,paint: function() {
		this.tabs.set_x(0);
		this.tabs.set_y(0);
		this.tabs.set_width(this.get_width());
		this.container.set_x(0);
		this.container.set_y(this.tabs.get_maxY());
		this.container.set_width(this.get_width());
		this.container.set_height(this.get_height() - this.container.get_y());
		if(this.content != null) {
			this.content.set_x(0);
			this.content.set_y(0);
			this.content.set_width(this.container.get_width());
			this.content.set_height(this.container.get_height());
			this.content.validate();
		}
	}
	,onTabChange: function(e) {
		var selectedItem = this.tabs.get_selected();
		if(this.content != null) {
			this.container.removeChild(this.content);
			if(!this.keepInstanceState) {
				this.content.kill();
			}
			this.content = null;
		}
		if(selectedItem != null) {
			if(this.keepInstanceState && selectedItem.instance != null) {
				this.content = selectedItem.instance;
			} else {
				this.content = Type.createInstance(selectedItem.content,selectedItem.args);
				if(this.keepInstanceState) {
					selectedItem.instance = this.content;
				}
			}
			this.container.addChild(this.content);
			this.invalidate();
			this.validate();
		}
	}
	,kill: function() {
		var i = 0;
		var n = this.tabItens.length;
		while(i < n) {
			if(this.tabItens[i].instance != null) {
				this.tabItens[i].instance.kill();
			}
			++i;
		}
		priori_view_container_PriGroup.prototype.kill.call(this);
	}
	,__class__: priori_bootstrap_container_PriBSTabPanel
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_justified:"set_justified",set_keepInstanceState:"set_keepInstanceState"})
});
var priori_bootstrap_type_PriBSContextualType = { __ename__ : true, __constructs__ : ["DEFAULT","PRIMARY","SUCCESS","INFO","WARNING","DANGER","LINK"] };
priori_bootstrap_type_PriBSContextualType.DEFAULT = ["DEFAULT",0];
priori_bootstrap_type_PriBSContextualType.DEFAULT.toString = $estr;
priori_bootstrap_type_PriBSContextualType.DEFAULT.__enum__ = priori_bootstrap_type_PriBSContextualType;
priori_bootstrap_type_PriBSContextualType.PRIMARY = ["PRIMARY",1];
priori_bootstrap_type_PriBSContextualType.PRIMARY.toString = $estr;
priori_bootstrap_type_PriBSContextualType.PRIMARY.__enum__ = priori_bootstrap_type_PriBSContextualType;
priori_bootstrap_type_PriBSContextualType.SUCCESS = ["SUCCESS",2];
priori_bootstrap_type_PriBSContextualType.SUCCESS.toString = $estr;
priori_bootstrap_type_PriBSContextualType.SUCCESS.__enum__ = priori_bootstrap_type_PriBSContextualType;
priori_bootstrap_type_PriBSContextualType.INFO = ["INFO",3];
priori_bootstrap_type_PriBSContextualType.INFO.toString = $estr;
priori_bootstrap_type_PriBSContextualType.INFO.__enum__ = priori_bootstrap_type_PriBSContextualType;
priori_bootstrap_type_PriBSContextualType.WARNING = ["WARNING",4];
priori_bootstrap_type_PriBSContextualType.WARNING.toString = $estr;
priori_bootstrap_type_PriBSContextualType.WARNING.__enum__ = priori_bootstrap_type_PriBSContextualType;
priori_bootstrap_type_PriBSContextualType.DANGER = ["DANGER",5];
priori_bootstrap_type_PriBSContextualType.DANGER.toString = $estr;
priori_bootstrap_type_PriBSContextualType.DANGER.__enum__ = priori_bootstrap_type_PriBSContextualType;
priori_bootstrap_type_PriBSContextualType.LINK = ["LINK",6];
priori_bootstrap_type_PriBSContextualType.LINK.toString = $estr;
priori_bootstrap_type_PriBSContextualType.LINK.__enum__ = priori_bootstrap_type_PriBSContextualType;
var priori_bootstrap_type_PriBSSize = { __ename__ : true, __constructs__ : ["NORMAL","LARGE","SMALL","EXTRA_SMALL"] };
priori_bootstrap_type_PriBSSize.NORMAL = ["NORMAL",0];
priori_bootstrap_type_PriBSSize.NORMAL.toString = $estr;
priori_bootstrap_type_PriBSSize.NORMAL.__enum__ = priori_bootstrap_type_PriBSSize;
priori_bootstrap_type_PriBSSize.LARGE = ["LARGE",1];
priori_bootstrap_type_PriBSSize.LARGE.toString = $estr;
priori_bootstrap_type_PriBSSize.LARGE.__enum__ = priori_bootstrap_type_PriBSSize;
priori_bootstrap_type_PriBSSize.SMALL = ["SMALL",2];
priori_bootstrap_type_PriBSSize.SMALL.toString = $estr;
priori_bootstrap_type_PriBSSize.SMALL.__enum__ = priori_bootstrap_type_PriBSSize;
priori_bootstrap_type_PriBSSize.EXTRA_SMALL = ["EXTRA_SMALL",3];
priori_bootstrap_type_PriBSSize.EXTRA_SMALL.toString = $estr;
priori_bootstrap_type_PriBSSize.EXTRA_SMALL.__enum__ = priori_bootstrap_type_PriBSSize;
var priori_event_PriFocusEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	priori_event_PriEvent.call(this,type,propagate,bubble,data);
};
priori_event_PriFocusEvent.__name__ = true;
priori_event_PriFocusEvent.__super__ = priori_event_PriEvent;
priori_event_PriFocusEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_event_PriFocusEvent(this.type,this.propagate,this.bubble);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		return clone;
	}
	,__class__: priori_event_PriFocusEvent
});
var priori_event_PriKeyboardEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	priori_event_PriEvent.call(this,type,propagate,bubble,data);
};
priori_event_PriKeyboardEvent.__name__ = true;
priori_event_PriKeyboardEvent.__super__ = priori_event_PriEvent;
priori_event_PriKeyboardEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_event_PriKeyboardEvent(this.type,this.propagate,this.bubble);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		clone.keycode = this.keycode;
		clone.altKey = this.altKey;
		clone.ctrlKey = this.ctrlKey;
		clone.shiftKey = this.shiftKey;
		return clone;
	}
	,toString: function() {
		return JSON.stringify({ keyCode : this.keycode, altKey : this.altKey, ctrlKey : this.ctrlKey, shiftKey : this.shiftKey});
	}
	,__class__: priori_event_PriKeyboardEvent
});
var priori_event_PriMouseEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	priori_event_PriEvent.call(this,type,propagate,bubble,data);
};
priori_event_PriMouseEvent.__name__ = true;
priori_event_PriMouseEvent.__super__ = priori_event_PriEvent;
priori_event_PriMouseEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_event_PriMouseEvent(this.type,this.propagate,this.bubble);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		return clone;
	}
	,__class__: priori_event_PriMouseEvent
});
var priori_event_PriSwipeEvent = function(type,propagate) {
	if(propagate == null) {
		propagate = false;
	}
	priori_event_PriEvent.call(this,type,propagate);
};
priori_event_PriSwipeEvent.__name__ = true;
priori_event_PriSwipeEvent.__super__ = priori_event_PriEvent;
priori_event_PriSwipeEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	__class__: priori_event_PriSwipeEvent
});
var priori_event_PriTapEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	priori_event_PriEvent.call(this,type,propagate,bubble,data);
};
priori_event_PriTapEvent.__name__ = true;
priori_event_PriTapEvent.__super__ = priori_event_PriEvent;
priori_event_PriTapEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_event_PriTapEvent(this.type,this.propagate,this.bubble);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		return clone;
	}
	,__class__: priori_event_PriTapEvent
});
var priori_geom_PriColor = function(color) {
	if(color == null) {
		color = 0;
	}
	this.color = color;
};
priori_geom_PriColor.__name__ = true;
priori_geom_PriColor.prototype = {
	get_red: function() {
		return this.color >> 16 & 255;
	}
	,get_green: function() {
		return this.color >> 8 & 255;
	}
	,get_blue: function() {
		return this.color & 255;
	}
	,toString: function() {
		return "#" + StringTools.hex(this.color,6);
	}
	,__class__: priori_geom_PriColor
	,__properties__: {get_blue:"get_blue",get_green:"get_green",get_red:"get_red"}
};
var priori_geom_PriGeomBox = function(x,y,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.height = height;
	this.width = width;
};
priori_geom_PriGeomBox.__name__ = true;
priori_geom_PriGeomBox.prototype = {
	__class__: priori_geom_PriGeomBox
};
var priori_scene_manager_SceneManager = function() {
	if(priori_scene_manager_SceneManager._g == null) {
		priori_scene_manager_SceneManager._g = this;
	} else {
		throw new js__$Boot_HaxeError("Use static .g() method");
	}
	priori_app_PriApp.g().addEventListener(priori_event_PriEvent.RESIZE,$bind(this,this.onAppResize));
	this.isPreloading = false;
	this.sceneHistory = [];
	this.sceneContainer = new priori_view_container_PriContainer();
	this.sceneContainer.set_clipping(true);
};
priori_scene_manager_SceneManager.__name__ = true;
priori_scene_manager_SceneManager.g = function() {
	if(priori_scene_manager_SceneManager._g == null) {
		priori_scene_manager_SceneManager._g = new priori_scene_manager_SceneManager();
	}
	return priori_scene_manager_SceneManager._g;
};
priori_scene_manager_SceneManager.prototype = {
	getContainer: function() {
		return this.sceneContainer;
	}
	,preload: function(startScene,args,preloadScene,onError) {
		var _gthis = this;
		if(preloadScene == null) {
			preloadScene = priori_scene_view_preload_PriPreloadSceneDefault;
		}
		priori_assets_AssetManager.g().addEventListener(priori_assets_AssetManagerEvent.ASSET_COMPLETE,function(e) {
			_gthis.isPreloading = false;
			priori_assets_AssetManager.g().removeAllEventListenersFromType(priori_assets_AssetManagerEvent.ASSET_COMPLETE);
			priori_assets_AssetManager.g().removeAllEventListenersFromType(priori_assets_AssetManagerEvent.ASSET_ERROR);
			priori_assets_AssetManager.g().removeAllEventListenersFromType(priori_assets_AssetManagerEvent.ASSET_PROGRESS);
			_gthis.open(startScene,args,true);
		});
		priori_assets_AssetManager.g().addEventListener(priori_assets_AssetManagerEvent.ASSET_ERROR,function(e1) {
			_gthis.isPreloading = false;
			priori_assets_AssetManager.g().removeAllEventListenersFromType(priori_assets_AssetManagerEvent.ASSET_COMPLETE);
			priori_assets_AssetManager.g().removeAllEventListenersFromType(priori_assets_AssetManagerEvent.ASSET_ERROR);
			priori_assets_AssetManager.g().removeAllEventListenersFromType(priori_assets_AssetManagerEvent.ASSET_PROGRESS);
			if(onError != null) {
				onError();
			}
		});
		priori_assets_AssetManager.g().addEventListener(priori_assets_AssetManagerEvent.ASSET_PROGRESS,function(e2) {
			(js_Boot.__cast(_gthis.currentScene , priori_scene_view_preload_PriPreloadScene)).updateProgress(e2.percentLoaded);
		});
		this.open(preloadScene,[],true);
		(js_Boot.__cast(this.currentScene , priori_scene_view_preload_PriPreloadScene)).updateProgress(0);
		this.isPreloading = true;
		priori_assets_AssetManager.g().load();
	}
	,open: function(scene,args,keepInHistory) {
		if(keepInHistory == null) {
			keepInHistory = true;
		}
		if(this.currentScene != null) {
			this.currentScene.removeFromParent();
			this.currentScene.kill();
			this.currentScene = null;
		}
		if(scene != null) {
			if(args == null) {
				args = [];
			}
			this.currentScene = Type.createInstance(scene,args);
			this.sceneContainer.addChild(this.currentScene);
			if(this.sceneContainer.get_parent() != priori_app_PriApp.g()) {
				priori_app_PriApp.g().addChild(this.sceneContainer);
			}
			if(keepInHistory == true) {
				this.sceneHistory.push({ scene : scene, args : args});
			}
		}
		this.onAppResize(null);
	}
	,onAppResize: function(e) {
		var w = priori_app_PriApp.g().get_width();
		var h = priori_app_PriApp.g().get_height();
		this.sceneContainer.set_width(w);
		this.sceneContainer.set_height(h);
		if(this.currentScene != null) {
			this.currentScene.set_width(w);
			this.currentScene.set_height(h);
			this.currentScene.validate();
		}
	}
	,__class__: priori_scene_manager_SceneManager
};
var priori_scene_view_PriScene = function() {
	priori_view_container_PriGroup.call(this);
};
priori_scene_view_PriScene.__name__ = true;
priori_scene_view_PriScene.__super__ = priori_view_container_PriGroup;
priori_scene_view_PriScene.prototype = $extend(priori_view_container_PriGroup.prototype,{
	__class__: priori_scene_view_PriScene
});
var priori_scene_view_preload_PriPreloadScene = function() {
	priori_scene_view_PriScene.call(this);
};
priori_scene_view_preload_PriPreloadScene.__name__ = true;
priori_scene_view_preload_PriPreloadScene.__super__ = priori_scene_view_PriScene;
priori_scene_view_preload_PriPreloadScene.prototype = $extend(priori_scene_view_PriScene.prototype,{
	updateProgress: function(percent) {
	}
	,__class__: priori_scene_view_preload_PriPreloadScene
});
var priori_scene_view_preload_PriPreloadSceneDefault = function() {
	priori_scene_view_preload_PriPreloadScene.call(this);
};
priori_scene_view_preload_PriPreloadSceneDefault.__name__ = true;
priori_scene_view_preload_PriPreloadSceneDefault.__super__ = priori_scene_view_preload_PriPreloadScene;
priori_scene_view_preload_PriPreloadSceneDefault.prototype = $extend(priori_scene_view_preload_PriPreloadScene.prototype,{
	setup: function() {
		this.bar = new priori_view_PriDisplay();
		this.bar.set_bgColor(13421772);
		this.addChild(this.bar);
	}
	,paint: function() {
		this.bar.set_height(20);
		this.bar.set_x(0);
		this.bar.set_centerY(this.get_height() / 2);
	}
	,updateProgress: function(percent) {
		if(this.bar != null) {
			this.bar.set_width(this.get_width() * percent);
		}
	}
	,__class__: priori_scene_view_preload_PriPreloadSceneDefault
});
var priori_style_border_PriBorderStyle = function(width,color,type) {
	if(color == null) {
		color = 13421772;
	}
	if(width == null) {
		width = 1;
	}
	this.width = width;
	this.color = color;
	this.type = type == null?priori_style_border_PriBorderType.SOLID:type;
};
priori_style_border_PriBorderStyle.__name__ = true;
priori_style_border_PriBorderStyle.prototype = {
	toString: function() {
		var styleString = "";
		var result;
		if(this.type == priori_style_border_PriBorderType.SOLID) {
			styleString = "solid";
		} else if(this.type == priori_style_border_PriBorderType.DOTTED) {
			styleString = "dotted";
		} else if(this.type == priori_style_border_PriBorderType.DASHED) {
			styleString = "dashed";
		}
		result = "#" + StringTools.hex(this.color,6) + " " + styleString + " " + this.width + "px ";
		return result;
	}
	,__class__: priori_style_border_PriBorderStyle
};
var priori_style_border_PriBorderType = { __ename__ : true, __constructs__ : ["SOLID","DOTTED","DASHED"] };
priori_style_border_PriBorderType.SOLID = ["SOLID",0];
priori_style_border_PriBorderType.SOLID.toString = $estr;
priori_style_border_PriBorderType.SOLID.__enum__ = priori_style_border_PriBorderType;
priori_style_border_PriBorderType.DOTTED = ["DOTTED",1];
priori_style_border_PriBorderType.DOTTED.toString = $estr;
priori_style_border_PriBorderType.DOTTED.__enum__ = priori_style_border_PriBorderType;
priori_style_border_PriBorderType.DASHED = ["DASHED",2];
priori_style_border_PriBorderType.DASHED.toString = $estr;
priori_style_border_PriBorderType.DASHED.__enum__ = priori_style_border_PriBorderType;
var priori_style_filter_PriFilterStyle = function() {
	this.blur = 0;
	this.brightness = 1;
	this.contrast = 1;
	this.grayscale = 0;
	this.hue = 0;
};
priori_style_filter_PriFilterStyle.__name__ = true;
priori_style_filter_PriFilterStyle.prototype = {
	setBlur: function(value) {
		this.blur = value;
		return this;
	}
	,setBrightness: function(value) {
		this.brightness = value;
		return this;
	}
	,setContrast: function(value) {
		this.contrast = value;
		return this;
	}
	,setGrayscale: function(value) {
		this.grayscale = value;
		return this;
	}
	,setHue: function(value) {
		this.hue = value;
		return this;
	}
	,setShadow: function(value) {
		this.shadow = value;
		return this;
	}
	,toString: function() {
		var result = "";
		if(this.blur > 0) {
			result = "" + ("blur(" + this.blur + "px) ");
		}
		if(this.brightness != 1) {
			result += "brightness(" + this.brightness * 100 + "%) ";
		}
		if(this.contrast != 1) {
			result += "contrast(" + this.contrast * 100 + "%) ";
		}
		if(this.grayscale > 0) {
			result += "grayscale" + this.grayscale * 100 + "%) ";
		}
		if(this.hue != 0) {
			result += "hue-rotate(" + 360 * this.hue + "deg) ";
		}
		if(this.saturate > 0) {
			result += "saturate(" + this.saturate * 100 + "%) ";
		}
		if(this.shadow != null && this.shadow.length > 0) {
			result += "drop-shadow(";
			var _g1 = 0;
			var _g = this.shadow.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(i > 0) {
					result += ",";
				}
				result += this.shadow[i].toString(2);
			}
			result += ") ";
		}
		return result;
	}
	,__class__: priori_style_filter_PriFilterStyle
};
var priori_style_font_PriFontStyle = function(color,family,weight,italic,variant,align) {
	if(color != null) {
		this.color = color;
	} else {
		this.color = priori_style_font_PriFontStyle.DEFAULT_COLOR;
	}
	if(family != null) {
		this.family = family;
	} else {
		this.family = priori_style_font_PriFontStyle.DEFAULT_FAMILY;
	}
	if(weight != null) {
		this.weight = weight;
	} else {
		this.weight = priori_style_font_PriFontStyle.DEFAULT_WEIGHT;
	}
	if(italic != null) {
		this.italic = italic;
	} else {
		this.italic = priori_style_font_PriFontStyle.DEFAULT_ITALIC;
	}
	if(variant != null) {
		this.variant = variant;
	} else {
		this.variant = priori_style_font_PriFontStyle.DEFAULT_VARIANT;
	}
	if(align != null) {
		this.align = align;
	} else {
		this.align = priori_style_font_PriFontStyle.DEFAULT_ALIGN;
	}
};
priori_style_font_PriFontStyle.__name__ = true;
priori_style_font_PriFontStyle.getFontStyleObjectBase = function() {
	return { fontFamily : "", fontWeight : "", fontVariant : "", fontStyle : "", textAlign : "", color : ""};
};
priori_style_font_PriFontStyle.prototype = {
	getFontStyleObject: function() {
		var weight = "";
		var italic = "";
		var variant = "";
		var align = "";
		var family = this.family == null?"":this.family;
		var color = this.color == null?"":"#" + StringTools.hex(this.color,6);
		if(this.weight != null) {
			switch(this.weight[1]) {
			case 0:
				weight = "normal";
				break;
			case 1:
				weight = "bold";
				break;
			case 2:
				weight = "bolder";
				break;
			case 3:
				weight = "lighter";
				break;
			case 4:
				weight = "100";
				break;
			case 5:
				weight = "200";
				break;
			case 6:
				weight = "300";
				break;
			case 7:
				weight = "400";
				break;
			case 8:
				weight = "500";
				break;
			case 9:
				weight = "600";
				break;
			case 10:
				weight = "700";
				break;
			case 11:
				weight = "800";
				break;
			case 12:
				weight = "900";
				break;
			}
		}
		if(this.italic != null) {
			switch(this.italic[1]) {
			case 0:
				italic = "normal";
				break;
			case 1:
				italic = "italic";
				break;
			case 2:
				italic = "oblique";
				break;
			}
		}
		if(this.variant != null) {
			switch(this.variant[1]) {
			case 0:
				variant = "normal";
				break;
			case 1:
				variant = "small-caps";
				break;
			}
		}
		if(this.align != null) {
			switch(this.align[1]) {
			case 0:
				align = "left";
				break;
			case 1:
				align = "center";
				break;
			case 2:
				align = "right";
				break;
			}
		}
		var styleData = priori_style_font_PriFontStyle.getFontStyleObjectBase();
		styleData.fontFamily = family;
		styleData.fontWeight = weight;
		styleData.fontStyle = italic;
		styleData.fontVariant = variant;
		styleData.textAlign = align;
		styleData.color = color;
		return styleData;
	}
	,toString: function() {
		return JSON.stringify(this.getFontStyleObject());
	}
	,__class__: priori_style_font_PriFontStyle
};
var priori_style_font_PriFontStyleAlign = { __ename__ : true, __constructs__ : ["LEFT","CENTER","RIGHT"] };
priori_style_font_PriFontStyleAlign.LEFT = ["LEFT",0];
priori_style_font_PriFontStyleAlign.LEFT.toString = $estr;
priori_style_font_PriFontStyleAlign.LEFT.__enum__ = priori_style_font_PriFontStyleAlign;
priori_style_font_PriFontStyleAlign.CENTER = ["CENTER",1];
priori_style_font_PriFontStyleAlign.CENTER.toString = $estr;
priori_style_font_PriFontStyleAlign.CENTER.__enum__ = priori_style_font_PriFontStyleAlign;
priori_style_font_PriFontStyleAlign.RIGHT = ["RIGHT",2];
priori_style_font_PriFontStyleAlign.RIGHT.toString = $estr;
priori_style_font_PriFontStyleAlign.RIGHT.__enum__ = priori_style_font_PriFontStyleAlign;
var priori_style_font_PriFontStyleItalic = { __ename__ : true, __constructs__ : ["NORMAL","ITALIC","OBLIQUE"] };
priori_style_font_PriFontStyleItalic.NORMAL = ["NORMAL",0];
priori_style_font_PriFontStyleItalic.NORMAL.toString = $estr;
priori_style_font_PriFontStyleItalic.NORMAL.__enum__ = priori_style_font_PriFontStyleItalic;
priori_style_font_PriFontStyleItalic.ITALIC = ["ITALIC",1];
priori_style_font_PriFontStyleItalic.ITALIC.toString = $estr;
priori_style_font_PriFontStyleItalic.ITALIC.__enum__ = priori_style_font_PriFontStyleItalic;
priori_style_font_PriFontStyleItalic.OBLIQUE = ["OBLIQUE",2];
priori_style_font_PriFontStyleItalic.OBLIQUE.toString = $estr;
priori_style_font_PriFontStyleItalic.OBLIQUE.__enum__ = priori_style_font_PriFontStyleItalic;
var priori_style_font_PriFontStyleVariant = { __ename__ : true, __constructs__ : ["NORMAL","SMALL_CAPS"] };
priori_style_font_PriFontStyleVariant.NORMAL = ["NORMAL",0];
priori_style_font_PriFontStyleVariant.NORMAL.toString = $estr;
priori_style_font_PriFontStyleVariant.NORMAL.__enum__ = priori_style_font_PriFontStyleVariant;
priori_style_font_PriFontStyleVariant.SMALL_CAPS = ["SMALL_CAPS",1];
priori_style_font_PriFontStyleVariant.SMALL_CAPS.toString = $estr;
priori_style_font_PriFontStyleVariant.SMALL_CAPS.__enum__ = priori_style_font_PriFontStyleVariant;
var priori_style_font_PriFontStyleWeight = { __ename__ : true, __constructs__ : ["NORMAL","BOLD","BOLDER","LIGHTER","THICK100","THICK200","THICK300","THICK400","THICK500","THICK600","THICK700","THICK800","THICK900"] };
priori_style_font_PriFontStyleWeight.NORMAL = ["NORMAL",0];
priori_style_font_PriFontStyleWeight.NORMAL.toString = $estr;
priori_style_font_PriFontStyleWeight.NORMAL.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.BOLD = ["BOLD",1];
priori_style_font_PriFontStyleWeight.BOLD.toString = $estr;
priori_style_font_PriFontStyleWeight.BOLD.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.BOLDER = ["BOLDER",2];
priori_style_font_PriFontStyleWeight.BOLDER.toString = $estr;
priori_style_font_PriFontStyleWeight.BOLDER.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.LIGHTER = ["LIGHTER",3];
priori_style_font_PriFontStyleWeight.LIGHTER.toString = $estr;
priori_style_font_PriFontStyleWeight.LIGHTER.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.THICK100 = ["THICK100",4];
priori_style_font_PriFontStyleWeight.THICK100.toString = $estr;
priori_style_font_PriFontStyleWeight.THICK100.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.THICK200 = ["THICK200",5];
priori_style_font_PriFontStyleWeight.THICK200.toString = $estr;
priori_style_font_PriFontStyleWeight.THICK200.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.THICK300 = ["THICK300",6];
priori_style_font_PriFontStyleWeight.THICK300.toString = $estr;
priori_style_font_PriFontStyleWeight.THICK300.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.THICK400 = ["THICK400",7];
priori_style_font_PriFontStyleWeight.THICK400.toString = $estr;
priori_style_font_PriFontStyleWeight.THICK400.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.THICK500 = ["THICK500",8];
priori_style_font_PriFontStyleWeight.THICK500.toString = $estr;
priori_style_font_PriFontStyleWeight.THICK500.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.THICK600 = ["THICK600",9];
priori_style_font_PriFontStyleWeight.THICK600.toString = $estr;
priori_style_font_PriFontStyleWeight.THICK600.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.THICK700 = ["THICK700",10];
priori_style_font_PriFontStyleWeight.THICK700.toString = $estr;
priori_style_font_PriFontStyleWeight.THICK700.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.THICK800 = ["THICK800",11];
priori_style_font_PriFontStyleWeight.THICK800.toString = $estr;
priori_style_font_PriFontStyleWeight.THICK800.__enum__ = priori_style_font_PriFontStyleWeight;
priori_style_font_PriFontStyleWeight.THICK900 = ["THICK900",12];
priori_style_font_PriFontStyleWeight.THICK900.toString = $estr;
priori_style_font_PriFontStyleWeight.THICK900.__enum__ = priori_style_font_PriFontStyleWeight;
var priori_style_shadow_PriShadowStyle = function() {
	this.type = priori_style_shadow_PriShadowType.OUTLINE;
	this.opacity = 0.7;
	this.color = 0;
	this.spread = -5;
	this.blur = 30;
	this.verticalOffset = 8;
	this.horizontalOffset = 0;
};
priori_style_shadow_PriShadowStyle.__name__ = true;
priori_style_shadow_PriShadowStyle.prototype = {
	setHorizontalOffset: function(value) {
		this.horizontalOffset = value;
		return this;
	}
	,setVerticalOffset: function(value) {
		this.verticalOffset = value;
		return this;
	}
	,setBlur: function(value) {
		this.blur = value;
		return this;
	}
	,setSpread: function(value) {
		this.spread = value;
		return this;
	}
	,setColor: function(value) {
		this.color = value;
		return this;
	}
	,setOpacity: function(value) {
		this.opacity = value;
		return this;
	}
	,setType: function(value) {
		this.type = value;
		return this;
	}
	,toString: function(mode) {
		if(mode == null) {
			mode = 0;
		}
		var c = new priori_geom_PriColor(this.color);
		return this.horizontalOffset + "px " + (this.verticalOffset + "px ") + (this.blur + "px ") + (mode > 0?"":this.spread + "px ") + ("rgba(" + c.get_red() + "," + c.get_green() + "," + c.get_red() + "," + this.opacity + ")") + (mode > 0?"":this.type == priori_style_shadow_PriShadowType.INSET?"inset":"");
	}
	,__class__: priori_style_shadow_PriShadowStyle
};
var priori_style_shadow_PriShadowType = { __ename__ : true, __constructs__ : ["INSET","OUTLINE"] };
priori_style_shadow_PriShadowType.INSET = ["INSET",0];
priori_style_shadow_PriShadowType.INSET.toString = $estr;
priori_style_shadow_PriShadowType.INSET.__enum__ = priori_style_shadow_PriShadowType;
priori_style_shadow_PriShadowType.OUTLINE = ["OUTLINE",1];
priori_style_shadow_PriShadowType.OUTLINE.toString = $estr;
priori_style_shadow_PriShadowType.OUTLINE.__enum__ = priori_style_shadow_PriShadowType;
var priori_system_PriDevice = function() {
	this._detectedBrowser = null;
	priori_system_PriDevice._g = this;
};
priori_system_PriDevice.__name__ = true;
priori_system_PriDevice.g = function() {
	if(priori_system_PriDevice._g == null) {
		new priori_system_PriDevice();
	}
	return priori_system_PriDevice._g;
};
priori_system_PriDevice.prototype = {
	browser: function() {
		if(this._detectedBrowser == null) {
			var userAgent = window.navigator.userAgent;
			if(userAgent.indexOf("Chrome") > -1) {
				this._detectedBrowser = priori_system_PriDeviceBrowser.CHROME;
			} else if(userAgent.indexOf("Safari") > -1) {
				this._detectedBrowser = priori_system_PriDeviceBrowser.SAFARI;
			} else if(userAgent.indexOf("Opera") > -1) {
				this._detectedBrowser = priori_system_PriDeviceBrowser.OPERA;
			} else if(userAgent.indexOf("Firefox") > -1) {
				this._detectedBrowser = priori_system_PriDeviceBrowser.MOZILLA;
			} else if(userAgent.indexOf("MSIE") > -1) {
				this._detectedBrowser = priori_system_PriDeviceBrowser.MSIE;
			} else {
				this._detectedBrowser = priori_system_PriDeviceBrowser.UNKNOW;
			}
		}
		return this._detectedBrowser;
	}
	,deviceSystem: function() {
		var userAgent = window.navigator.userAgent;
		if(userAgent.indexOf("Macintosh") > -1) {
			return priori_system_PriDeviceSystem.MAC;
		} else if(new EReg("Android","i").match(userAgent)) {
			return priori_system_PriDeviceSystem.ANDROID;
		} else if(new EReg("BlackBerry","i").match(userAgent)) {
			return priori_system_PriDeviceSystem.BLACKBERRY;
		} else if(new EReg("iPhone|iPad|iPod","i").match(userAgent)) {
			return priori_system_PriDeviceSystem.IOS;
		} else if(new EReg("Opera Mini","i").match(userAgent)) {
			return priori_system_PriDeviceSystem.OPERAMINI;
		} else if(new EReg("IEMobile|WPDesktop","i").match(userAgent)) {
			return priori_system_PriDeviceSystem.WINDOWSMOBILE;
		} else if(userAgent.indexOf("Linux") > -1) {
			return priori_system_PriDeviceSystem.LINUX;
		} else if(userAgent.indexOf("Windows") > -1) {
			return priori_system_PriDeviceSystem.WINDOWS;
		}
		return priori_system_PriDeviceSystem.UNKNOW;
	}
	,isMobileDevice: function() {
		var system = this.deviceSystem();
		if(system == priori_system_PriDeviceSystem.ANDROID || system == priori_system_PriDeviceSystem.IOS || system == priori_system_PriDeviceSystem.BLACKBERRY || system == priori_system_PriDeviceSystem.OPERAMINI || system == priori_system_PriDeviceSystem.WINDOWSMOBILE) {
			return true;
		}
		return false;
	}
	,__class__: priori_system_PriDevice
};
var priori_system_PriDeviceBrowser = { __ename__ : true, __constructs__ : ["SAFARI","WEBKIT","OPERA","MSIE","MOZILLA","CHROME","UNKNOW"] };
priori_system_PriDeviceBrowser.SAFARI = ["SAFARI",0];
priori_system_PriDeviceBrowser.SAFARI.toString = $estr;
priori_system_PriDeviceBrowser.SAFARI.__enum__ = priori_system_PriDeviceBrowser;
priori_system_PriDeviceBrowser.WEBKIT = ["WEBKIT",1];
priori_system_PriDeviceBrowser.WEBKIT.toString = $estr;
priori_system_PriDeviceBrowser.WEBKIT.__enum__ = priori_system_PriDeviceBrowser;
priori_system_PriDeviceBrowser.OPERA = ["OPERA",2];
priori_system_PriDeviceBrowser.OPERA.toString = $estr;
priori_system_PriDeviceBrowser.OPERA.__enum__ = priori_system_PriDeviceBrowser;
priori_system_PriDeviceBrowser.MSIE = ["MSIE",3];
priori_system_PriDeviceBrowser.MSIE.toString = $estr;
priori_system_PriDeviceBrowser.MSIE.__enum__ = priori_system_PriDeviceBrowser;
priori_system_PriDeviceBrowser.MOZILLA = ["MOZILLA",4];
priori_system_PriDeviceBrowser.MOZILLA.toString = $estr;
priori_system_PriDeviceBrowser.MOZILLA.__enum__ = priori_system_PriDeviceBrowser;
priori_system_PriDeviceBrowser.CHROME = ["CHROME",5];
priori_system_PriDeviceBrowser.CHROME.toString = $estr;
priori_system_PriDeviceBrowser.CHROME.__enum__ = priori_system_PriDeviceBrowser;
priori_system_PriDeviceBrowser.UNKNOW = ["UNKNOW",6];
priori_system_PriDeviceBrowser.UNKNOW.toString = $estr;
priori_system_PriDeviceBrowser.UNKNOW.__enum__ = priori_system_PriDeviceBrowser;
var priori_system_PriDeviceSystem = { __ename__ : true, __constructs__ : ["WINDOWS","WINDOWSMOBILE","MAC","LINUX","IOS","ANDROID","BLACKBERRY","OPERAMINI","UNKNOW"] };
priori_system_PriDeviceSystem.WINDOWS = ["WINDOWS",0];
priori_system_PriDeviceSystem.WINDOWS.toString = $estr;
priori_system_PriDeviceSystem.WINDOWS.__enum__ = priori_system_PriDeviceSystem;
priori_system_PriDeviceSystem.WINDOWSMOBILE = ["WINDOWSMOBILE",1];
priori_system_PriDeviceSystem.WINDOWSMOBILE.toString = $estr;
priori_system_PriDeviceSystem.WINDOWSMOBILE.__enum__ = priori_system_PriDeviceSystem;
priori_system_PriDeviceSystem.MAC = ["MAC",2];
priori_system_PriDeviceSystem.MAC.toString = $estr;
priori_system_PriDeviceSystem.MAC.__enum__ = priori_system_PriDeviceSystem;
priori_system_PriDeviceSystem.LINUX = ["LINUX",3];
priori_system_PriDeviceSystem.LINUX.toString = $estr;
priori_system_PriDeviceSystem.LINUX.__enum__ = priori_system_PriDeviceSystem;
priori_system_PriDeviceSystem.IOS = ["IOS",4];
priori_system_PriDeviceSystem.IOS.toString = $estr;
priori_system_PriDeviceSystem.IOS.__enum__ = priori_system_PriDeviceSystem;
priori_system_PriDeviceSystem.ANDROID = ["ANDROID",5];
priori_system_PriDeviceSystem.ANDROID.toString = $estr;
priori_system_PriDeviceSystem.ANDROID.__enum__ = priori_system_PriDeviceSystem;
priori_system_PriDeviceSystem.BLACKBERRY = ["BLACKBERRY",6];
priori_system_PriDeviceSystem.BLACKBERRY.toString = $estr;
priori_system_PriDeviceSystem.BLACKBERRY.__enum__ = priori_system_PriDeviceSystem;
priori_system_PriDeviceSystem.OPERAMINI = ["OPERAMINI",7];
priori_system_PriDeviceSystem.OPERAMINI.toString = $estr;
priori_system_PriDeviceSystem.OPERAMINI.__enum__ = priori_system_PriDeviceSystem;
priori_system_PriDeviceSystem.UNKNOW = ["UNKNOW",8];
priori_system_PriDeviceSystem.UNKNOW.toString = $estr;
priori_system_PriDeviceSystem.UNKNOW.__enum__ = priori_system_PriDeviceSystem;
var priori_view_container_PriScrollableContainer = function() {
	this.__mouseIsOver = false;
	priori_view_container_PriGroup.call(this);
	if(priori_system_PriDevice.g().isMobileDevice()) {
		this.__mouseIsOver = true;
		this.set_scrollerY(true);
	} else {
		this.__mouseIsOver = false;
		this.set_scrollerY(true);
		this.addEventListener("mouseenter",$bind(this,this.onOver));
		this.addEventListener("mouseleave",$bind(this,this.onOut));
	}
};
priori_view_container_PriScrollableContainer.__name__ = true;
priori_view_container_PriScrollableContainer.__super__ = priori_view_container_PriGroup;
priori_view_container_PriScrollableContainer.prototype = $extend(priori_view_container_PriGroup.prototype,{
	_onAddedToApp: function(e) {
		this.getElement().on("scroll",null,$bind(this,this._onJScroll));
		priori_view_container_PriGroup.prototype._onAddedToApp.call(this,e);
	}
	,_onRemovedFromApp: function(e) {
		this.getElement().off("scroll",null,$bind(this,this._onJScroll));
		priori_view_container_PriGroup.prototype._onRemovedFromApp.call(this,e);
	}
	,onOver: function(e) {
		this.__mouseIsOver = true;
		this.updateScrollerView();
	}
	,onOut: function(e) {
		this.__mouseIsOver = false;
		this.updateScrollerView();
	}
	,updateScrollerView: function() {
		var canUpdate = true;
		if(priori_system_PriDevice.g().browser() == priori_system_PriDeviceBrowser.MOZILLA) {
			if(this.getElement().find("select:focus").length > 0) {
				canUpdate = false;
			}
		}
		if(canUpdate) {
			if(this.__mouseIsOver) {
				if(this.scrollerX && this.scrollerY) {
					this.getElement().css("overflow","auto");
				} else if(this.scrollerX) {
					this.getElement().css("overflow-x","auto");
				} else if(this.scrollerY) {
					this.getElement().css("overflow-y","auto");
				} else {
					this.getElement().css("overflow","hidden");
				}
			} else {
				this.getElement().css("overflow","hidden");
			}
		}
	}
	,_onJScroll: function(e) {
		e.stopPropagation();
		this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.SCROLL));
	}
	,get_clipping: function() {
		return true;
	}
	,set_clipping: function(value) {
		return value;
	}
	,set_scrollerX: function(value) {
		this.scrollerX = value;
		if(this.__mouseIsOver) {
			this.updateScrollerView();
		}
		return value;
	}
	,set_scrollerY: function(value) {
		this.scrollerY = value;
		if(this.__mouseIsOver) {
			this.updateScrollerView();
		}
		return value;
	}
	,set_scroller: function(value) {
		this.set_scrollerX(value);
		this.set_scrollerY(value);
		if(this.__mouseIsOver) {
			this.updateScrollerView();
		}
		return value;
	}
	,set_scrollY: function(value) {
		this.getElement().scrollTop(value);
		return value;
	}
	,get_scrollY: function() {
		return this.getElement().scrollTop();
	}
	,set_scrollX: function(value) {
		this.getElement().scrollLeft(value);
		return value;
	}
	,get_scrollX: function() {
		return this.getElement().scrollLeft();
	}
	,get_maxScrollY: function() {
		var result = parseFloat(this.getElement().prop("scrollHeight"));
		if(result == null || isNaN(result)) {
			result = 0;
		}
		return result;
	}
	,get_maxScrollX: function() {
		var result = parseFloat(this.getElement().prop("scrollWidth"));
		if(result == null || isNaN(result)) {
			result = 0;
		}
		return result;
	}
	,kill: function() {
		this.getElement().off("scroll",null,$bind(this,this._onJScroll));
		priori_view_container_PriGroup.prototype.kill.call(this);
	}
	,__class__: priori_view_container_PriScrollableContainer
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{get_maxScrollX:"get_maxScrollX",get_maxScrollY:"get_maxScrollY",set_scrollX:"set_scrollX",get_scrollX:"get_scrollX",set_scrollY:"set_scrollY",get_scrollY:"get_scrollY",set_scrollerY:"set_scrollerY",set_scrollerX:"set_scrollerX",set_scroller:"set_scroller"})
});
var priori_view_form_PriFormCheckBox = function() {
	priori_view_form_PriFormElementBase.call(this);
	this.set_value(false);
};
priori_view_form_PriFormCheckBox.__name__ = true;
priori_view_form_PriFormCheckBox.__super__ = priori_view_form_PriFormElementBase;
priori_view_form_PriFormCheckBox.prototype = $extend(priori_view_form_PriFormElementBase.prototype,{
	getComponentCode: function() {
		return "<input type=\"checkbox\" style=\"padding:0px;margin:0px;vertical-align: middle;\" />";
	}
	,onAddedToApp: function() {
		this._baseElement.on("change",null,$bind(this,this._onCheckChange));
	}
	,onRemovedFromApp: function() {
		this._baseElement.off("change",null,$bind(this,this._onCheckChange));
	}
	,_onCheckChange: function(event) {
		this.dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.CHANGE));
	}
	,set_value: function(value) {
		this.value = value;
		this._baseElement.prop("checked",value);
		return value;
	}
	,get_value: function() {
		var result = this.value;
		var isDisabled = this._baseElement["is"]("[disabled]");
		if(isDisabled) {
			this._baseElement.removeAttr("disabled");
		}
		result = this._baseElement.prop("checked");
		if(isDisabled) {
			this._baseElement.attr("disabled","disabled");
		}
		return result;
	}
	,__class__: priori_view_form_PriFormCheckBox
	,__properties__: $extend(priori_view_form_PriFormElementBase.prototype.__properties__,{set_value:"set_value",get_value:"get_value"})
});
var priori_view_grid_PriDataGrid = function() {
	this.lastRenderTime = 0;
	this.asyncRow = true;
	priori_view_container_PriGroup.call(this);
	this.set_rowHeight(40);
	this.set_headerHeight(40);
	this.verticalLinesList = [];
	this.set_selection(null);
	this.sort = new priori_view_grid_column_PriGridColumnSort();
	this.header = new priori_view_grid_header_PriGridHeader();
	this.scrollerContainer = new priori_view_container_PriScrollableContainer();
	this.scrollerContainer.addEventListener(priori_event_PriEvent.SCROLL,$bind(this,this.onScroll));
	this.__renderRowIndexStart = -1;
	this.__renderRowIndexEnd = -1;
	this.__data_originalList = [];
	this.__data_waitingInsertion = [];
	this.__usedRows = [];
	this.__pooledRows = [];
	this.__rowContainer = new priori_view_container_PriContainer();
	this.__rowContainer.set_clipping(false);
	this.set_horizontalGridLines(true);
	this.set_verticalGridLines(true);
	this.set_horizontalGridLineColor(14540253);
	this.set_verticalGridLineColor(14540253);
	this.set_border(new priori_style_border_PriBorderStyle());
	this.set_rowPointer(true);
	this.set_rowColorSequence([16777215]);
	this.set_bgColor(16777215);
	this.addEventListener(priori_view_grid_PriDataGridEvent.SORT,$bind(this,this.onDataGridSort));
};
priori_view_grid_PriDataGrid.__name__ = true;
priori_view_grid_PriDataGrid.__super__ = priori_view_container_PriGroup;
priori_view_grid_PriDataGrid.prototype = $extend(priori_view_container_PriGroup.prototype,{
	set_scrollY: function(value) {
		if(this.scrollerContainer != null) {
			this.scrollerContainer.set_scrollY(value);
		}
		return value;
	}
	,get_scrollY: function() {
		if(this.scrollerContainer != null) {
			return this.scrollerContainer.get_scrollY();
		}
		return 0;
	}
	,get_maxScrollY: function() {
		if(this.scrollerContainer != null) {
			return this.scrollerContainer.get_maxScrollY();
		}
		return 0;
	}
	,onDataGridSort: function(e) {
		e.stopBubble();
		e.stopPropagation();
		this.sort.order = e.data.order;
		this.sort.dataField = e.data.field;
		this.set_data(this.__data_originalList);
	}
	,resetSort: function() {
		this.header.applySort("",priori_view_grid_column_PriGridColumnSortOrder.NONE);
	}
	,applySort: function(field,order) {
		this.header.applySort(field,order);
	}
	,setup: function() {
		this.addChild(this.header);
		this.addChild(this.scrollerContainer);
		this.scrollerContainer.addChild(this.__rowContainer);
	}
	,paint: function() {
		this.header.set_width(this.get_width());
		this.header.set_height(this.headerHeight);
		this.scrollerContainer.set_x(0);
		this.scrollerContainer.set_y(this.headerHeight);
		this.scrollerContainer.set_width(this.get_width());
		this.scrollerContainer.set_height(this.get_height() - this.headerHeight);
		this.generateRows();
		this.organizeRowPosition();
		var i = 0;
		var n = this.__usedRows.length;
		var rowSizes = priori_view_grid_column_PriGridColumnSize.calculate(this.get_width(),this.columns);
		while(i < n) {
			this.__usedRows[i].set_x(0);
			this.__usedRows[i].applyPreCalcColumns(rowSizes);
			this.__usedRows[i].set_width(this.get_width());
			this.__usedRows[i].validate();
			++i;
		}
		this.__rowContainer.set_x(0);
		this.__rowContainer.set_y(0);
		this.__rowContainer.set_width(this.scrollerContainer.get_width());
		this.updateVerticalLines();
	}
	,updateRowContainerHeight: function() {
		var rowHeightCalculated = this.calculateRowHeight();
		var n = this.data == null?0:this.data.length;
		if(this.horizontalGridLines) {
			this.__rowContainer.set_height(n * (rowHeightCalculated.all + 1) - 1);
		} else {
			this.__rowContainer.set_height(n * rowHeightCalculated.all);
		}
	}
	,organizeRowPosition: function() {
		var i = 0;
		var n = this.__usedRows.length;
		var rowHeightCalculated = this.calculateRowHeight();
		while(i < n) {
			var index = this.__usedRows[i].rowIndex;
			if(this.horizontalGridLines) {
				this.__usedRows[i].set_y((rowHeightCalculated.all + 1) * index);
			} else {
				this.__usedRows[i].set_y(rowHeightCalculated.all * index);
			}
			this.__usedRows[i].set_height(index == n - 1?rowHeightCalculated.last:rowHeightCalculated.all);
			this.__usedRows[i].set_rowColor(this.rowColorSequence[index % this.rowColorSequence.length]);
			++i;
		}
		this.updateRowContainerHeight();
	}
	,updateVerticalLines: function() {
		var columnSize = priori_view_grid_column_PriGridColumnSize.calculate(this.get_width(),this.columns);
		var i = 0;
		var n = this.verticalLinesList.length;
		while(i < n) {
			this.removeChild(this.verticalLinesList[i]);
			this.verticalLinesList[i].kill();
			++i;
		}
		this.verticalLinesList = [];
		if(this.verticalGridLines) {
			i = 0;
			n = columnSize.widthList.length - 1;
			var lastX = 0;
			while(i < n) {
				this.verticalLinesList.push(new priori_view_PriDisplay());
				this.verticalLinesList[i].set_width(1);
				this.verticalLinesList[i].set_height(this.get_height());
				this.verticalLinesList[i].set_y(0);
				lastX += columnSize.widthList[i];
				this.verticalLinesList[i].set_x(lastX);
				this.verticalLinesList[i].set_bgColor(this.verticalGridLineColor);
				this.addChild(this.verticalLinesList[i]);
				++i;
			}
		}
	}
	,getTotalRows: function() {
		return this.data.length;
	}
	,getTotalCols: function() {
		return this.columns.length;
	}
	,selectRow: function(rowIndex,color) {
		if(color == null) {
			color = 65280;
		}
		this.set_selection([new priori_view_grid_PriDataGridInterval(0,rowIndex,999999999,1,color)]);
	}
	,selectCol: function(colIndex,color) {
		if(color == null) {
			color = 65280;
		}
		this.set_selection([new priori_view_grid_PriDataGridInterval(colIndex,0,1,999999999,color)]);
	}
	,set_selection: function(value) {
		this.selection = value;
		var i = 0;
		var n = this.__usedRows == null?0:this.__usedRows.length;
		while(i < n) {
			this.__usedRows[i].set_selection(value);
			++i;
		}
		return value;
	}
	,set_rowColorSequence: function(value) {
		if(value.length > 0) {
			this.rowColorSequence = value;
		} else {
			this.rowColorSequence = [16777215];
		}
		this.organizeRowPosition();
		return value;
	}
	,set_rowPointer: function(value) {
		this.rowPointer = value;
		var i = 0;
		var n = this.__usedRows.length;
		while(i < n) {
			this.__usedRows[i].set_pointer(value);
			++i;
		}
		return value;
	}
	,set_verticalGridLines: function(value) {
		this.verticalGridLines = value;
		this.invalidate();
		return value;
	}
	,set_verticalGridLineColor: function(value) {
		this.verticalGridLineColor = value;
		this.invalidate();
		return value;
	}
	,set_horizontalGridLines: function(value) {
		this.horizontalGridLines = value;
		this.invalidate();
		return value;
	}
	,set_horizontalGridLineColor: function(value) {
		this.horizontalGridLineColor = value;
		this.__rowContainer.set_bgColor(value);
		return value;
	}
	,set_rowHeight: function(value) {
		this.rowHeight = value;
		if(value == null || value < 0) {
			this.__rowAutoSize = true;
		} else {
			this.__rowAutoSize = false;
		}
		this.invalidate();
		return value;
	}
	,set_headerHeight: function(value) {
		if(value == null || value < 0) {
			this.headerHeight = 40;
		} else {
			this.headerHeight = value;
		}
		this.invalidate();
		return value;
	}
	,set_data: function(value) {
		this.__renderRowIndexStart = -1;
		this.__renderRowIndexEnd = -1;
		this.__data_originalList = value;
		this.data = this.sort.sort(value.slice()).slice();
		if(this.canPaint()) {
			this.generateRows();
		}
		return value;
	}
	,set_columns: function(value) {
		this.columns = value;
		this.sort.dataField = "";
		this.sort.order = priori_view_grid_column_PriGridColumnSortOrder.NONE;
		this.applyColumnToRows();
		this.applyColumnToHeader();
		this.updateVerticalLines();
		this.set_data(this.__data_originalList);
		return value;
	}
	,applyColumnToHeader: function() {
		this.header.set_columns(this.columns);
	}
	,applyColumnToRows: function() {
		var i = 0;
		var n = this.__usedRows.length;
		while(i < n) {
			this.__usedRows[i].set_columns(this.columns);
			++i;
		}
	}
	,calculateRowHeight: function() {
		if(this.__rowAutoSize) {
			if(this.data == null) {
				return { all : 0, last : 0};
			}
			var freeSpace = this.scrollerContainer.get_height() - (this.horizontalGridLines?this.data.length - 1:0);
			var all = Math.floor(freeSpace / this.data.length);
			return { all : all, last : Math.floor(freeSpace - all * (this.data.length - 1))};
		}
		return { all : this.rowHeight, last : this.rowHeight};
	}
	,onScroll: function(e) {
		this.generateRows();
	}
	,generateRows: function() {
		if(this.__timer_timeToGenerate != null) {
			this.__timer_timeToGenerate.stop();
			this.__timer_timeToGenerate = null;
		}
		if(priori_system_PriDevice.g().browser() == priori_system_PriDeviceBrowser.MOZILLA) {
			this.updateRowContainerHeight();
			if(new Date().getTime() - this.lastRenderTime > 300) {
				this.generateRowsRun();
			} else {
				this.__timer_timeToGenerate = haxe_Timer.delay($bind(this,this.generateRowsRun),30);
			}
		} else {
			this.generateRowsRun();
		}
	}
	,generateRowsRun: function() {
		this.lastRenderTime = new Date().getTime();
		var scrollPos = this.scrollerContainer.get_scrollY();
		var viewHeight = this.scrollerContainer.get_height();
		var itemHeight = this.horizontalGridLines?1:0;
		var itemHeight1 = this.calculateRowHeight().all + itemHeight;
		var totalItens = this.data == null?0:this.data.length;
		var offsetItens = 4;
		var i = 0;
		var n = 0;
		i = Math.floor(scrollPos / itemHeight1 - offsetItens / 2);
		n = i + (Math.floor(viewHeight / itemHeight1) + offsetItens);
		if(i < 0) {
			i = 0;
		}
		if(n > totalItens) {
			n = totalItens;
		}
		if(i != this.__renderRowIndexStart || n != this.__renderRowIndexEnd) {
			this.__renderRowIndexStart = i;
			this.__renderRowIndexEnd = n;
			this.__data_waitingInsertion = [];
			while(i < n) {
				this.__data_waitingInsertion.push(this.data[i]);
				++i;
			}
			var _g1 = 0;
			var _g = this.__usedRows.length;
			while(_g1 < _g) this.__pooledRows.unshift(this.__usedRows[_g1++]);
			this.__usedRows = [];
			this.generateRowsBatch(this.__renderRowIndexStart);
		}
	}
	,generateRowsBatch: function(indexStart) {
		var _gthis = this;
		this.killInsertionTimer();
		var maxTime = 150;
		var startTime = new Date().getTime();
		var i = 0;
		var n = this.__data_waitingInsertion.length;
		var gridRow = null;
		var rowSizes = priori_view_grid_column_PriGridColumnSize.calculate(this.get_width(),this.columns);
		var rowHeightCalculated = this.calculateRowHeight();
		while(i < n) {
			var item = this.__data_waitingInsertion.shift();
			if(this.__pooledRows.length > 0) {
				gridRow = this.__pooledRows.shift();
			} else {
				gridRow = new priori_view_grid_row_PriGridRow();
			}
			this.__usedRows.push(gridRow);
			gridRow.applyPreCalcColumns(rowSizes);
			gridRow.set_rowIndex(indexStart);
			gridRow.set_columns(this.columns);
			gridRow.set_data(item);
			gridRow.set_width(this.get_width());
			gridRow.set_height(indexStart == this.data.length - 1?rowHeightCalculated.last:rowHeightCalculated.all);
			gridRow.set_selection(this.selection);
			gridRow.set_pointer(this.rowPointer);
			if(gridRow.get_parent() == null) {
				this.__rowContainer.addChild(gridRow);
			}
			gridRow.validate();
			++i;
			indexStart += 1;
			if(this.asyncRow == true && new Date().getTime() - startTime > maxTime) {
				i = n;
			}
		}
		this.organizeRowPosition();
		if(this.__data_waitingInsertion.length > 0) {
			this.__timer_insetionFlow = haxe_Timer.delay(function() {
				_gthis.generateRowsBatch(indexStart);
			},priori_app_PriApp.g().getMSUptate());
		} else {
			this.removeRows(this.__pooledRows);
		}
	}
	,killInsertionTimer: function() {
		if(this.__timer_insetionFlow != null) {
			this.__timer_insetionFlow.stop();
			this.__timer_insetionFlow = null;
		}
	}
	,removeRows: function(rowListToRemove) {
		this.killInsertionTimer();
		var rowList = rowListToRemove == null?this.__usedRows:rowListToRemove;
		var i = 0;
		var n = rowList.length;
		while(i < n) {
			var item = rowList.shift();
			this.__pooledRows.push(item);
			this.__rowContainer.removeChild(item);
			++i;
		}
	}
	,kill: function() {
		this.removeRows();
		if(this.__timer_timeToGenerate != null) {
			this.__timer_timeToGenerate.stop();
			this.__timer_timeToGenerate = null;
		}
		var i = 0;
		var n = this.__pooledRows.length;
		while(i < n) {
			this.__pooledRows[i].kill();
			++i;
		}
		this.__pooledRows = [];
		priori_view_container_PriGroup.prototype.kill.call(this);
	}
	,__class__: priori_view_grid_PriDataGrid
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{get_maxScrollY:"get_maxScrollY",set_scrollY:"set_scrollY",get_scrollY:"get_scrollY",set_rowColorSequence:"set_rowColorSequence",set_rowPointer:"set_rowPointer",set_horizontalGridLineColor:"set_horizontalGridLineColor",set_horizontalGridLines:"set_horizontalGridLines",set_verticalGridLineColor:"set_verticalGridLineColor",set_verticalGridLines:"set_verticalGridLines",set_headerHeight:"set_headerHeight",set_rowHeight:"set_rowHeight",set_columns:"set_columns",set_data:"set_data",set_selection:"set_selection"})
});
var priori_view_grid_PriDataGridEvent = function(type,propagate,bubble,data) {
	this.colIndex = 0;
	this.rowIndex = 0;
	priori_event_PriEvent.call(this,type,propagate,bubble,data);
};
priori_view_grid_PriDataGridEvent.__name__ = true;
priori_view_grid_PriDataGridEvent.__super__ = priori_event_PriEvent;
priori_view_grid_PriDataGridEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_view_grid_PriDataGridEvent(this.type,this.propagate,this.bubble,this.data);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		clone.rowIndex = this.rowIndex;
		clone.colIndex = this.colIndex;
		return clone;
	}
	,__class__: priori_view_grid_PriDataGridEvent
});
var priori_view_grid_PriDataGridInterval = function(col,row,colLen,rowLen,color) {
	if(color == null) {
		color = 65280;
	}
	if(rowLen == null) {
		rowLen = 1;
	}
	if(colLen == null) {
		colLen = 1;
	}
	if(row == null) {
		row = 0;
	}
	if(col == null) {
		col = 0;
	}
	this.col = col;
	this.row = row;
	this.colLen = colLen;
	this.rowLen = rowLen;
	this.color = color;
};
priori_view_grid_PriDataGridInterval.__name__ = true;
priori_view_grid_PriDataGridInterval.prototype = {
	toString: function() {
		return "Col : " + this.col + ", Row : " + this.row + ", Color : " + this.color;
	}
	,contains: function(col,row) {
		if(row >= this.row && row < this.row + this.rowLen && (col >= this.col && col < this.col + this.colLen)) {
			return true;
		}
		return false;
	}
	,__class__: priori_view_grid_PriDataGridInterval
};
var priori_view_grid_cell_PriGridCellRenderer = function() {
	priori_view_container_PriGroup.call(this);
	this.addEventListener(priori_event_PriEvent.CHANGE,$bind(this,this.__onCellDataChange));
	this.addEventListener("click",$bind(this,this.__onTap));
	this.addEventListener("mouseenter",$bind(this,this.__onMouse));
	this.set_pointer(false);
	this.set_clipping(false);
};
priori_view_grid_cell_PriGridCellRenderer.__name__ = true;
priori_view_grid_cell_PriGridCellRenderer.__super__ = priori_view_container_PriGroup;
priori_view_grid_cell_PriGridCellRenderer.prototype = $extend(priori_view_container_PriGroup.prototype,{
	__onTap: function(e) {
		var event = new priori_view_grid_PriDataGridEvent(priori_view_grid_PriDataGridEvent.GRID_CLICK,false,true,this.get_data());
		event.colIndex = this.get_colIndex();
		event.rowIndex = this.get_rowIndex();
		this.dispatchEvent(event);
	}
	,__onMouse: function(e) {
		var event = new priori_view_grid_PriDataGridEvent(priori_view_grid_PriDataGridEvent.CELL_OVER,false,true,this.get_data());
		event.colIndex = this.get_colIndex();
		event.rowIndex = this.get_rowIndex();
		this.dispatchEvent(event);
	}
	,update: function() {
	}
	,__onCellDataChange: function(e) {
		this.__data = e.data.data;
		this.__column = e.data.column;
		this.__rowIndex = e.data.rowIndex;
		this.__colIndex = e.data.colIndex;
		this.invalidate();
		this.update();
	}
	,get_data: function() {
		return this.__data;
	}
	,get_rowIndex: function() {
		return this.__rowIndex;
	}
	,get_colIndex: function() {
		return this.__colIndex;
	}
	,get_dataField: function() {
		var result = "";
		if(this.__column != null && this.__column.dataField != null) {
			result = this.__column.dataField;
		}
		return result;
	}
	,get_value: function() {
		var result = null;
		if(this.__column == null) {
			return null;
		}
		if(this.__column.dataField == priori_view_grid_cell_PriGridCellRenderer.SPECIAL_COLUMN_INDEX) {
			result = this.get_rowIndex();
		} else if(this.__column.dataField == priori_view_grid_cell_PriGridCellRenderer.SPECIAL_ROW_LINE) {
			result = this.get_rowIndex() + 1;
		} else if(this.__data != null) {
			var o = this.__data;
			var field = this.__column.dataField;
			var tmp;
			if(o == null) {
				result = null;
			} else {
				var result1;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + field];
					result1 = tmp;
				} else {
					result1 = false;
				}
				if(result1) {
					result = o[tmp]();
				} else {
					result = o[field];
				}
			}
		}
		return result;
	}
	,kill: function() {
		this.removeEventListener(priori_event_PriEvent.CHANGE,$bind(this,this.__onCellDataChange));
		this.removeEventListener("mouseenter",$bind(this,this.__onMouse));
		priori_view_container_PriGroup.prototype.kill.call(this);
	}
	,__class__: priori_view_grid_cell_PriGridCellRenderer
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{get_colIndex:"get_colIndex",get_rowIndex:"get_rowIndex",get_dataField:"get_dataField",get_value:"get_value",get_data:"get_data"})
});
var priori_view_grid_cell_PriGridCellRendererDefault = function() {
	priori_view_grid_cell_PriGridCellRenderer.call(this);
};
priori_view_grid_cell_PriGridCellRendererDefault.__name__ = true;
priori_view_grid_cell_PriGridCellRendererDefault.__super__ = priori_view_grid_cell_PriGridCellRenderer;
priori_view_grid_cell_PriGridCellRendererDefault.prototype = $extend(priori_view_grid_cell_PriGridCellRenderer.prototype,{
	update: function() {
		if(this.canPaint()) {
			this.label.set_text(this.get_value());
		}
	}
	,setup: function() {
		this.label = new priori_view_text_PriText();
		this.label.set_autoSize(false);
		this.label.set_multiLine(false);
		this.label.set_text(this.get_value());
		this.label.set_height(null);
		this.addChild(this.label);
	}
	,paint: function() {
		var space = 10;
		this.label.set_width(this.get_width() - space * 2);
		this.label.set_height(null);
		this.label.set_x(space);
		this.label.set_centerY(this.get_height() / 2);
	}
	,__class__: priori_view_grid_cell_PriGridCellRendererDefault
});
var priori_view_grid_column_PriGridColumn = function(title,dataField,cellRenderer,headerRenderer,sizeType,width,cellRendererParams,headerRendererParams,sortable) {
	if(width == null) {
		width = 100;
	}
	this.title = title;
	this.dataField = dataField;
	this.cellRendererParams = cellRendererParams;
	if(this.cellRendererParams == null) {
		this.cellRendererParams = [];
	}
	this.headerRendererParams = headerRendererParams;
	if(this.headerRendererParams == null) {
		this.headerRendererParams = [];
	}
	if(cellRenderer == null) {
		this.cellRenderer = priori_view_grid_cell_PriGridCellRendererDefault;
	} else {
		this.cellRenderer = cellRenderer;
	}
	this.headerSortCaret = priori_view_grid_header_PriGridHeaderSortCaretDefault;
	if(headerRenderer == null) {
		this.headerRenderer = priori_view_grid_header_PriGridHeaderRendererDefault;
	} else {
		this.headerRenderer = headerRenderer;
	}
	if(sizeType == null) {
		this.sizeType = priori_view_grid_column_PriGridColumnSizeType.FIT;
	} else {
		this.sizeType = sizeType;
	}
	if(sortable == null) {
		this.sortable = true;
	} else {
		this.sortable = sortable;
	}
	this.width = width;
};
priori_view_grid_column_PriGridColumn.__name__ = true;
priori_view_grid_column_PriGridColumn.prototype = {
	__class__: priori_view_grid_column_PriGridColumn
};
var priori_view_grid_column_PriGridColumnSizeType = { __ename__ : true, __constructs__ : ["FIXED","FIT"] };
priori_view_grid_column_PriGridColumnSizeType.FIXED = ["FIXED",0];
priori_view_grid_column_PriGridColumnSizeType.FIXED.toString = $estr;
priori_view_grid_column_PriGridColumnSizeType.FIXED.__enum__ = priori_view_grid_column_PriGridColumnSizeType;
priori_view_grid_column_PriGridColumnSizeType.FIT = ["FIT",1];
priori_view_grid_column_PriGridColumnSizeType.FIT.toString = $estr;
priori_view_grid_column_PriGridColumnSizeType.FIT.__enum__ = priori_view_grid_column_PriGridColumnSizeType;
var priori_view_grid_column_PriGridColumnSize = function() {
	this.fitWidth = 0;
	this.widthList = [];
};
priori_view_grid_column_PriGridColumnSize.__name__ = true;
priori_view_grid_column_PriGridColumnSize.calculate = function(width,columnData) {
	var result = new priori_view_grid_column_PriGridColumnSize();
	if(columnData != null) {
		var fixedColumnsWidth = 0;
		var totalFitColumns = 0;
		var i = 0;
		var n = columnData.length;
		while(i < n) {
			if(columnData[i].sizeType == priori_view_grid_column_PriGridColumnSizeType.FIT) {
				++totalFitColumns;
				result.widthList.push(null);
			} else if(columnData[i].sizeType == priori_view_grid_column_PriGridColumnSizeType.FIXED) {
				fixedColumnsWidth += Math.floor(columnData[i].width);
				result.widthList.push(Math.floor(columnData[i].width));
			}
			++i;
		}
		if(totalFitColumns > 0) {
			result.fitWidth = Math.floor((width - fixedColumnsWidth) / totalFitColumns);
			if(result.fitWidth < 0) {
				result.fitWidth = 0;
			}
		}
		i = 0;
		while(i < n) {
			if(result.widthList[i] == null) {
				result.widthList[i] = result.fitWidth;
			}
			++i;
		}
		i = 0;
		var validateFinalSize = 0;
		while(i < n) {
			validateFinalSize += result.widthList[i];
			++i;
		}
		if(validateFinalSize < width) {
			result.widthList[n - 1] += width - validateFinalSize;
		}
	}
	return result;
};
priori_view_grid_column_PriGridColumnSize.prototype = {
	__class__: priori_view_grid_column_PriGridColumnSize
};
var priori_view_grid_column_PriGridColumnSortOrder = { __ename__ : true, __constructs__ : ["ASC","DESC","NONE"] };
priori_view_grid_column_PriGridColumnSortOrder.ASC = ["ASC",0];
priori_view_grid_column_PriGridColumnSortOrder.ASC.toString = $estr;
priori_view_grid_column_PriGridColumnSortOrder.ASC.__enum__ = priori_view_grid_column_PriGridColumnSortOrder;
priori_view_grid_column_PriGridColumnSortOrder.DESC = ["DESC",1];
priori_view_grid_column_PriGridColumnSortOrder.DESC.toString = $estr;
priori_view_grid_column_PriGridColumnSortOrder.DESC.__enum__ = priori_view_grid_column_PriGridColumnSortOrder;
priori_view_grid_column_PriGridColumnSortOrder.NONE = ["NONE",2];
priori_view_grid_column_PriGridColumnSortOrder.NONE.toString = $estr;
priori_view_grid_column_PriGridColumnSortOrder.NONE.__enum__ = priori_view_grid_column_PriGridColumnSortOrder;
var priori_view_grid_column_PriGridColumnSort = function() {
	this.dataField = "";
	this.order = priori_view_grid_column_PriGridColumnSortOrder.ASC;
};
priori_view_grid_column_PriGridColumnSort.__name__ = true;
priori_view_grid_column_PriGridColumnSort.prototype = {
	sort: function(data) {
		var _gthis = this;
		if(this.dataField == "" || this.order == priori_view_grid_column_PriGridColumnSortOrder.NONE) {
			return data;
		}
		var direction = this.order == priori_view_grid_column_PriGridColumnSortOrder.ASC?1:-1;
		data.sort(function(x,y) {
			var vx;
			var vy;
			var field = _gthis.dataField;
			var tmp;
			if(x == null) {
				vx = null;
			} else {
				var vx1;
				if(x.__properties__) {
					tmp = x.__properties__["get_" + field];
					vx1 = tmp;
				} else {
					vx1 = false;
				}
				if(vx1) {
					vx = x[tmp]();
				} else {
					vx = x[field];
				}
			}
			var field1 = _gthis.dataField;
			var tmp1;
			if(y == null) {
				vy = null;
			} else {
				var vy1;
				if(y.__properties__) {
					tmp1 = y.__properties__["get_" + field1];
					vy1 = tmp1;
				} else {
					vy1 = false;
				}
				if(vy1) {
					vy = y[tmp1]();
				} else {
					vy = y[field1];
				}
			}
			if(js_Boot.__instanceof(vx,Date)) {
				vx = (js_Boot.__cast(vx , Date)).getTime();
			}
			if(js_Boot.__instanceof(vy,Date)) {
				vy = (js_Boot.__cast(vy , Date)).getTime();
			}
			if(typeof(vx) != "number" && !(typeof(vx) == "number" && ((vx | 0) === vx))) {
				vx = Std.string(vx).toLowerCase();
				vy = Std.string(vy).toLowerCase();
			}
			if(vx > vy) {
				return direction;
			}
			if(vy > vx) {
				return -1 * direction;
			}
			return 0;
		});
		return data;
	}
	,__class__: priori_view_grid_column_PriGridColumnSort
};
var priori_view_grid_header_PriGridHeader = function() {
	priori_view_container_PriGroup.call(this);
	this.headerList = [];
	this.headerCaret = [];
};
priori_view_grid_header_PriGridHeader.__name__ = true;
priori_view_grid_header_PriGridHeader.__super__ = priori_view_container_PriGroup;
priori_view_grid_header_PriGridHeader.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setup: function() {
		this.set_bgColor(16777215);
	}
	,paint: function() {
		var w = this.get_width();
		var h = this.get_height();
		var columnSizes = priori_view_grid_column_PriGridColumnSize.calculate(w,this.get_columns());
		var i = 0;
		var n = this.headerList.length;
		while(i < n) {
			this.headerList[i].set_width(columnSizes.widthList[i]);
			this.headerList[i].set_height(h);
			if(i == 0) {
				this.headerList[i].set_x(0);
			} else {
				this.headerList[i].set_x(this.headerList[i - 1].get_maxX());
			}
			this.headerList[i].set_y(0);
			if(this.headerCaret[i] != null) {
				this.headerCaret[i].set_maxX(this.headerList[i].get_maxX() - 3);
				this.headerCaret[i].set_y(0);
				this.headerCaret[i].set_height(this.headerList[i].get_height());
			}
			++i;
		}
	}
	,set_columns: function(value) {
		this.columns = value;
		this.generateHeaders();
		return value;
	}
	,get_columns: function() {
		return this.columns;
	}
	,generateHeaders: function() {
		this.removeHeaders();
		if(this.get_columns() != null) {
			var i = 0;
			var n = this.get_columns().length;
			var header;
			while(i < n) {
				header = Type.createInstance(this.get_columns()[i].headerRenderer,this.get_columns()[i].headerRendererParams);
				header.set_title(this.get_columns()[i].title);
				this.headerList.push(header);
				this.addChild(header);
				if(this.get_columns()[i].sortable) {
					this.headerCaret.push(Type.createInstance(this.get_columns()[i].headerSortCaret,[]));
					this.headerCaret[i].addEventListener("click",$bind(this,this.onCaretClick));
					this.addChild(this.headerCaret[i]);
				} else {
					this.headerCaret.push(null);
				}
				++i;
			}
		}
		this.invalidate();
		this.validate();
	}
	,applySort: function(field,order) {
		var i = 0;
		var n = this.get_columns() == null?0:this.get_columns().length;
		var caret = null;
		while(i < n) {
			if(this.get_columns()[i].dataField == field && this.get_columns()[i].sortable) {
				caret = this.headerCaret[i];
				caret.set_order(order);
			} else if(this.headerCaret[i] != null) {
				this.headerCaret[i].set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
			}
			++i;
		}
		this.dispatchEvent(new priori_view_grid_PriDataGridEvent(priori_view_grid_PriDataGridEvent.SORT,false,true,{ field : field, order : order}));
		this.invalidate();
		this.validate();
	}
	,onCaretClick: function(e) {
		var caret = js_Boot.__cast(e.currentTarget , priori_view_grid_header_PriGridHeaderSortCaret);
		var index = -1;
		var i = 0;
		var n = this.headerCaret.length;
		while(i < n) {
			if(this.headerCaret[i] != null) {
				if(this.headerCaret[i] == caret) {
					index = i;
					this.headerCaret[i].toogle();
				} else {
					this.headerCaret[i].set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
				}
			}
			++i;
		}
		if(index > -1) {
			this.dispatchEvent(new priori_view_grid_PriDataGridEvent(priori_view_grid_PriDataGridEvent.SORT,false,true,{ field : this.get_columns()[index].dataField, order : this.headerCaret[index].order}));
		}
		this.invalidate();
		this.validate();
	}
	,removeHeaders: function() {
		var i = 0;
		var n = this.headerList.length;
		while(i < n) {
			this.removeChild(this.headerList[i]);
			this.headerList[i].kill();
			if(this.headerCaret[i] != null) {
				this.removeChild(this.headerCaret[i]);
				this.headerCaret[i].kill();
			}
			++i;
		}
		this.headerList = [];
		this.headerCaret = [];
	}
	,__class__: priori_view_grid_header_PriGridHeader
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var priori_view_grid_header_PriGridHeaderRenderer = function() {
	priori_view_container_PriGroup.call(this);
};
priori_view_grid_header_PriGridHeaderRenderer.__name__ = true;
priori_view_grid_header_PriGridHeaderRenderer.__super__ = priori_view_container_PriGroup;
priori_view_grid_header_PriGridHeaderRenderer.prototype = $extend(priori_view_container_PriGroup.prototype,{
	update: function() {
	}
	,set_title: function(value) {
		this.title = value;
		this.update();
		return value;
	}
	,__class__: priori_view_grid_header_PriGridHeaderRenderer
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_title:"set_title"})
});
var priori_view_grid_header_PriGridHeaderRendererDefault = function() {
	priori_view_grid_header_PriGridHeaderRenderer.call(this);
};
priori_view_grid_header_PriGridHeaderRendererDefault.__name__ = true;
priori_view_grid_header_PriGridHeaderRendererDefault.__super__ = priori_view_grid_header_PriGridHeaderRenderer;
priori_view_grid_header_PriGridHeaderRendererDefault.prototype = $extend(priori_view_grid_header_PriGridHeaderRenderer.prototype,{
	update: function() {
		if(this.canPaint()) {
			this.label.set_text(this.title);
		}
	}
	,setup: function() {
		this.set_bgColor(13421772);
		this.label = new priori_view_text_PriText();
		this.label.set_autoSize(false);
		this.label.set_multiLine(false);
		this.label.set_text(this.title);
		this.label.set_height(null);
		this.addChild(this.label);
	}
	,paint: function() {
		var space = 10;
		this.label.set_x(space);
		this.label.set_centerY(this.get_height() / 2);
		this.label.set_width(this.get_width() - space * 2);
	}
	,__class__: priori_view_grid_header_PriGridHeaderRendererDefault
});
var priori_view_grid_header_PriGridHeaderSortCaret = function() {
	priori_view_container_PriGroup.call(this);
	this.set_width(null);
	this.set_height(null);
	this.set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
};
priori_view_grid_header_PriGridHeaderSortCaret.__name__ = true;
priori_view_grid_header_PriGridHeaderSortCaret.__super__ = priori_view_container_PriGroup;
priori_view_grid_header_PriGridHeaderSortCaret.prototype = $extend(priori_view_container_PriGroup.prototype,{
	toogle: function() {
		if(this.order == priori_view_grid_column_PriGridColumnSortOrder.NONE) {
			this.set_order(priori_view_grid_column_PriGridColumnSortOrder.ASC);
		} else if(this.order == priori_view_grid_column_PriGridColumnSortOrder.ASC) {
			this.set_order(priori_view_grid_column_PriGridColumnSortOrder.DESC);
		} else if(this.order == priori_view_grid_column_PriGridColumnSortOrder.DESC) {
			this.set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
		}
	}
	,set_order: function(value) {
		this.order = value;
		this.invalidate();
		this.validate();
		return value;
	}
	,__class__: priori_view_grid_header_PriGridHeaderSortCaret
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_order:"set_order"})
});
var priori_view_grid_header_PriGridHeaderSortCaretDefault = function() {
	priori_view_grid_header_PriGridHeaderSortCaret.call(this);
	this.set_width(null);
	this.set_height(null);
	this.set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
};
priori_view_grid_header_PriGridHeaderSortCaretDefault.__name__ = true;
priori_view_grid_header_PriGridHeaderSortCaretDefault.__super__ = priori_view_grid_header_PriGridHeaderSortCaret;
priori_view_grid_header_PriGridHeaderSortCaretDefault.prototype = $extend(priori_view_grid_header_PriGridHeaderSortCaret.prototype,{
	setup: function() {
		this.down = new priori_view_text_PriText();
		this.down.set_fontSize(10);
		this.down.set_text("▼");
		this.addChild(this.down);
		this.up = new priori_view_text_PriText();
		this.up.set_fontSize(10);
		this.up.set_text("▲");
		this.addChild(this.up);
	}
	,paint: function() {
		var curOrder = this.order;
		if(curOrder == priori_view_grid_column_PriGridColumnSortOrder.NONE) {
			this.up.set_alpha(1);
			this.down.set_alpha(1);
		} else if(curOrder == priori_view_grid_column_PriGridColumnSortOrder.ASC) {
			this.up.set_alpha(0.3);
			this.down.set_alpha(1);
		} else if(curOrder == priori_view_grid_column_PriGridColumnSortOrder.DESC) {
			this.up.set_alpha(1);
			this.down.set_alpha(0.3);
		}
		this.down.set_x(0);
		this.down.set_centerY(this.get_centerY());
		this.up.set_x(this.down.get_maxX() - 3);
		this.up.set_centerY(this.get_centerY());
		this.set_width(this.up.get_maxX());
	}
	,__class__: priori_view_grid_header_PriGridHeaderSortCaretDefault
});
var priori_view_grid_row_PriGridRow = function() {
	priori_view_container_PriGroup.call(this);
	this.set_selection(null);
	this.cellList = [];
	this.set_clipping(false);
	this.set_rowColor(16777215);
};
priori_view_grid_row_PriGridRow.__name__ = true;
priori_view_grid_row_PriGridRow.__super__ = priori_view_container_PriGroup;
priori_view_grid_row_PriGridRow.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setup: function() {
	}
	,paint: function() {
		var h = this.get_height();
		var i = 0;
		var n = this.cellList.length;
		var lastX = 0;
		while(i < n) {
			this.cellList[i].set_width(this.preCalc.widthList[i]);
			this.cellList[i].set_height(h);
			this.cellList[i].set_x(lastX);
			this.cellList[i].set_y(0);
			lastX += this.preCalc.widthList[i];
			++i;
		}
	}
	,applyPreCalcColumns: function(size) {
		this.preCalc = size;
	}
	,set_selection: function(value) {
		this.selection = value;
		this.updateSelection();
		return value;
	}
	,set_data: function(value) {
		this.data = value;
		this.updateData();
		return value;
	}
	,set_rowIndex: function(value) {
		this.rowIndex = value;
		this.updateSelection();
		return value;
	}
	,set_rowColor: function(value) {
		if(this.rowColor != value) {
			this.rowColor = value;
			this.set_bgColor(value);
		}
		return value;
	}
	,set_columns: function(value) {
		if(this.columns != value) {
			this.columns = value;
			this.generateCells();
		}
		return value;
	}
	,updateSelection: function() {
		if(this.cellList != null) {
			var i = 0;
			var n = this.cellList.length;
			while(i < n) ++i;
			if(this.selection != null && this.selection.length > 0) {
				i = 0;
				while(i < n) {
					var cell = this.cellList[i];
					var j = 0;
					var m = this.selection.length;
					while(j < m) {
						if(this.selection[j].contains(cell.get_colIndex(),cell.get_rowIndex())) {
							cell.set_bgColor(this.selection[j].color);
						}
						++j;
					}
					++i;
				}
			}
		}
	}
	,updateData: function() {
		var i = 0;
		var n = this.cellList.length;
		while(i < n) {
			this.cellList[i].dispatchEvent(new priori_event_PriEvent(priori_event_PriEvent.CHANGE,false,false,{ data : this.data, column : this.columns[i], colIndex : i, rowIndex : this.rowIndex}));
			++i;
		}
		this.updateSelection();
	}
	,generateCells: function() {
		this.removeCells();
		if(this.columns != null) {
			var i = 0;
			var n = this.columns.length;
			var cell;
			while(i < n) {
				cell = Type.createInstance(this.columns[i].cellRenderer,this.columns[i].cellRendererParams);
				this.cellList.push(cell);
				this.addChild(cell);
				++i;
			}
			this.updateData();
		}
		this.invalidate();
	}
	,removeCells: function() {
		var i = 0;
		var n = this.cellList.length;
		while(i < n) {
			this.removeChild(this.cellList[i]);
			this.cellList[i].kill();
			++i;
		}
		this.cellList = [];
	}
	,__class__: priori_view_grid_row_PriGridRow
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_rowColor:"set_rowColor",set_rowIndex:"set_rowIndex",set_data:"set_data",set_selection:"set_selection",set_columns:"set_columns"})
});
var priori_view_layout_PriLayoutAlignType = { __ename__ : true, __constructs__ : ["MIN","CENTER","MAX"] };
priori_view_layout_PriLayoutAlignType.MIN = ["MIN",0];
priori_view_layout_PriLayoutAlignType.MIN.toString = $estr;
priori_view_layout_PriLayoutAlignType.MIN.__enum__ = priori_view_layout_PriLayoutAlignType;
priori_view_layout_PriLayoutAlignType.CENTER = ["CENTER",1];
priori_view_layout_PriLayoutAlignType.CENTER.toString = $estr;
priori_view_layout_PriLayoutAlignType.CENTER.__enum__ = priori_view_layout_PriLayoutAlignType;
priori_view_layout_PriLayoutAlignType.MAX = ["MAX",2];
priori_view_layout_PriLayoutAlignType.MAX.toString = $estr;
priori_view_layout_PriLayoutAlignType.MAX.__enum__ = priori_view_layout_PriLayoutAlignType;
var priori_view_layout_PriLayoutDistributionType = { __ename__ : true, __constructs__ : ["NONE","FIT"] };
priori_view_layout_PriLayoutDistributionType.NONE = ["NONE",0];
priori_view_layout_PriLayoutDistributionType.NONE.toString = $estr;
priori_view_layout_PriLayoutDistributionType.NONE.__enum__ = priori_view_layout_PriLayoutDistributionType;
priori_view_layout_PriLayoutDistributionType.FIT = ["FIT",1];
priori_view_layout_PriLayoutDistributionType.FIT.toString = $estr;
priori_view_layout_PriLayoutDistributionType.FIT.__enum__ = priori_view_layout_PriLayoutDistributionType;
var priori_view_text_PriText = function() {
	priori_view_PriDisplay.call(this);
	this.set_text("");
	this.set_fontSize(null);
	this.set_autoSize(true);
	this.set_multiLine(false);
};
priori_view_text_PriText.__name__ = true;
priori_view_text_PriText.__super__ = priori_view_PriDisplay;
priori_view_text_PriText.prototype = $extend(priori_view_PriDisplay.prototype,{
	set_text: function(value) {
		this.text = value;
		this._element.text(value);
		return value;
	}
	,set_html: function(value) {
		this.html = value;
		this._element.html(value);
		return value;
	}
	,set_fontStyle: function(value) {
		this.fontStyle = value;
		if(value == null) {
			this._element.css(priori_style_font_PriFontStyle.getFontStyleObjectBase());
		} else {
			this._element.css(value.getFontStyleObject());
		}
		return value;
	}
	,set_fontSize: function(value) {
		if(this.fontSize != value) {
			if(value == null) {
				this.getElement().css("font-size","");
			} else {
				this.fontSize = value;
				this.getElement().css("font-size",(value | 0) + "px");
			}
		}
		return value;
	}
	,get_fontSize: function() {
		if(this.fontSize == null) {
			return 12;
		}
		return this.fontSize;
	}
	,set_autoSize: function(value) {
		if(this.autoSize != value) {
			this.autoSize = value;
			if(!this.multiLine) {
				priori_view_PriDisplay.prototype.set_width.call(this,null);
			}
			priori_view_PriDisplay.prototype.set_height.call(this,null);
		}
		return value;
	}
	,set_multiLine: function(value) {
		if(this.multiLine != value) {
			this.multiLine = value;
			if(value) {
				this.getElement().css("white-space","");
			} else {
				this.getElement().css("white-space","nowrap");
			}
		}
		return value;
	}
	,set_width: function(value) {
		if(this.autoSize == false || this.multiLine == true) {
			priori_view_PriDisplay.prototype.set_width.call(this,value);
		}
		return value;
	}
	,set_height: function(value) {
		if(this.autoSize == false) {
			priori_view_PriDisplay.prototype.set_height.call(this,value);
		}
		return value;
	}
	,set_shadow: function(value) {
		this.shadow = value;
		var shadowString = "";
		if(value != null && value.length > 0) {
			var _g1 = 0;
			var _g = value.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(i > 0) {
					shadowString += ",";
				}
				shadowString += value[i].toString(1);
			}
		}
		this.setCSS("text-shadow",shadowString);
		return value;
	}
	,__class__: priori_view_text_PriText
	,__properties__: $extend(priori_view_PriDisplay.prototype.__properties__,{set_multiLine:"set_multiLine",set_autoSize:"set_autoSize",set_fontSize:"set_fontSize",set_fontStyle:"set_fontStyle",set_html:"set_html",set_text:"set_text"})
});
var view_ColorRecords = function() { };
view_ColorRecords.__name__ = true;
var view_ContentScene = function() {
	priori_scene_view_PriScene.call(this);
};
view_ContentScene.__name__ = true;
view_ContentScene.__super__ = priori_scene_view_PriScene;
view_ContentScene.prototype = $extend(priori_scene_view_PriScene.prototype,{
	setup: function() {
		this.model = new LoggerAppModel();
		this.model.colorProvider = new view_datagrid_LogRowColorProvider();
		this.model.menu = new view_Menu(this.model);
		this.addChild(this.model.menu);
		this.model.content = new view_LogGridView(this.model);
		this.addChild(this.model.content);
		this.model.controls = new view_LogControlsView(this.model);
		this.addChild(this.model.controls);
		this.model.message = new view_LogMessageView();
		this.addChild(this.model.message);
	}
	,paint: function() {
		this.model.menu.set_x(0);
		this.model.menu.set_y(0);
		this.model.menu.set_width(250);
		var contentWidth = this.get_width() - this.model.menu.get_width();
		var columnWidth = contentWidth / 2;
		var columnHeight = this.get_height() - 130;
		this.model.menu.set_height(this.get_height());
		this.model.controls.set_x(250);
		this.model.controls.set_y(0);
		this.model.controls.set_width(contentWidth);
		this.model.controls.set_height(130);
		this.model.content.set_x(250);
		this.model.content.set_y(130);
		this.model.content.set_width(columnWidth);
		this.model.content.set_height(columnHeight);
		this.model.message.set_x(250 + columnWidth);
		this.model.message.set_y(130);
		this.model.message.set_width(columnWidth);
		this.model.message.set_height(columnHeight);
	}
	,__class__: view_ContentScene
});
var view_LogControlsView = function(model) {
	this.tagButtons = [];
	var _gthis = this;
	priori_view_container_PriGroup.call(this);
	this.model = model;
	this.tagsContainer = new components_FlowContainer();
	this.addChild(this.tagsContainer);
	this.noneButton = new priori_bootstrap_PriBSFormButton();
	this.noneButton.set_text("All");
	this.noneButton.getElement().find(".btn").css("border","0");
	this.noneButton.addEventListener("mousedown",function(e) {
		var _g = 0;
		var _g1 = _gthis.tagButtons;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.set_active(true);
		}
		model.updateFilters();
	});
	this.tagsContainer.addChild(this.noneButton);
	this.allButton = new priori_bootstrap_PriBSFormButton();
	this.allButton.set_text("None");
	this.allButton.getElement().find(".btn").css("border","0");
	this.allButton.addEventListener("mousedown",function(e1) {
		var _g2 = 0;
		var _g11 = _gthis.tagButtons;
		while(_g2 < _g11.length) {
			var b1 = _g11[_g2];
			++_g2;
			b1.set_active(false);
		}
		model.updateFilters();
	});
	this.tagsContainer.addChild(this.allButton);
	this.controlsContainer = new components_ControlsPanel(model);
	this.controlsContainer.set_autoSizeContainer(false);
	this.addChild(this.controlsContainer);
	this.statusLine = new priori_view_text_PriText();
	this.statusLine.getElement().css("white-space","pre-wrap");
	this.statusLine.getElement().css("line-height","1em");
	this.addChild(this.statusLine);
	this.set_bgColor(5263440);
};
view_LogControlsView.__name__ = true;
view_LogControlsView.__super__ = priori_view_container_PriGroup;
view_LogControlsView.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setSessions: function(names) {
		this.controlsContainer.sessionChooser.set_data(names);
	}
	,setTags: function(tags) {
		this.cleanButtons();
		var _g = 0;
		while(_g < tags.length) {
			var tag = tags[_g];
			++_g;
			var btn = new components_TagButton(tag,this.model.colorProvider.getColor(tag));
			btn.addEventListener("mousedown",$bind(this,this.onChanged));
			this.tagsContainer.addChild(btn);
			this.tagButtons.push(btn);
		}
	}
	,onChanged: function(e) {
		this.model.updateFilters();
	}
	,getActiveTags: function() {
		var tags = [];
		var _g = 0;
		var _g1 = this.tagButtons;
		while(_g < _g1.length) {
			var btn = _g1[_g];
			++_g;
			if(btn.active) {
				tags.push(btn.tag);
			}
		}
		return tags;
	}
	,cleanButtons: function() {
		while(this.tagButtons.length > 0) {
			var btn = this.tagButtons.shift();
			this.tagsContainer.removeChild(btn);
			btn.kill();
		}
	}
	,paint: function() {
		this.tagsContainer.set_x(3);
		this.tagsContainer.set_y(3);
		this.tagsContainer.set_width(this.get_width() - 6 - 400);
		this.tagsContainer.set_height(this.get_height() / 2 - 6);
		this.controlsContainer.set_x(3);
		this.controlsContainer.set_y(3 + this.tagsContainer.get_height());
		this.controlsContainer.set_width(this.get_width() - 6 - 400);
		this.controlsContainer.set_height(this.get_height() / 2 - 6);
		this.statusLine.set_height(this.get_height());
		this.statusLine.set_width(400);
		this.statusLine.set_x(this.tagsContainer.get_width() + this.tagsContainer.get_x());
	}
	,getTagFilter: function() {
		var tags = this.getActiveTags();
		return function(rec) {
			return tags.indexOf(rec.tag) > -1;
		};
	}
	,setWarnLevel: function(level) {
		this.controlsContainer.setWarnLEvel(level);
	}
	,getSubstringFilter: function() {
		var _gthis = this;
		return function(rec) {
			if(_gthis.controlsContainer.substringFilter.get_value() == "") {
				return true;
			}
			return rec.message.toLowerCase().indexOf(_gthis.controlsContainer.substringFilter.get_value().toLowerCase()) > -1;
		};
	}
	,getLogLevelFilter: function() {
		var level = this.controlsContainer.getLevel();
		return function(rec) {
			return rec.level >= level;
		};
	}
	,setStatus: function(s) {
		this.statusLine.set_text(s);
	}
	,__class__: view_LogControlsView
});
var view_LogGridView = function(model) {
	priori_view_container_PriGroup.call(this);
	this.model = model;
};
view_LogGridView.__name__ = true;
view_LogGridView.__super__ = priori_view_container_PriGroup;
view_LogGridView.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setup: function() {
		var _gthis = this;
		this.set_bgColor(5263440);
		this.grid = new priori_view_grid_PriDataGrid();
		this.grid.set_border(new priori_style_border_PriBorderStyle(0));
		this.grid.set_bgColor(null);
		this.grid.set_rowColorSequence([5263440]);
		this.grid.set_verticalGridLineColor(5263440);
		this.grid.set_horizontalGridLineColor(5263440);
		view_datagrid_LogCellRenderer.colorProvider = this.model.colorProvider;
		view_datagrid_LogCellRenderer.selectionChecker = function(rec) {
			return rec == _gthis.model.selectedRec;
		};
		this.grid.set_columns([new priori_view_grid_column_PriGridColumn("[Tag]","tag",view_datagrid_LogCellRenderer,view_datagrid_LogHeaderRenderer,priori_view_grid_column_PriGridColumnSizeType.FIXED,136,null,null,false),new priori_view_grid_column_PriGridColumn("[Message]","message",view_datagrid_LogCellRenderer,view_datagrid_LogHeaderRenderer),new priori_view_grid_column_PriGridColumn("[Time]","time",view_datagrid_LogCellRenderer,view_datagrid_LogHeaderRenderer,priori_view_grid_column_PriGridColumnSizeType.FIXED,100,null,null,false)]);
		this.addChild(this.grid);
		this.grid.addEventListener(priori_view_grid_PriDataGridEvent.GRID_CLICK,$bind(this,this.onClick));
	}
	,loadData: function(data) {
		this.loadedData = data;
		this.grid.set_data(this.loadedData);
	}
	,paint: function() {
		this.grid.set_x(20);
		this.grid.set_width(this.get_width() - 40);
		this.grid.set_height(this.get_height() - this.grid.get_y() - 20);
	}
	,scrollToRec: function(id) {
		this.grid.set_scrollY((this.grid.rowHeight + 1) * Math.max(id - 2,0));
	}
	,onClick: function(e) {
		this.model.select(e.rowIndex);
		this.grid.get_scrollY();
		this.loadData(this.model.getFilteredData(false));
	}
	,__class__: view_LogGridView
});
var view_LogMessageView = function() {
	priori_view_container_PriScrollableContainer.call(this);
	this.text = new priori_view_text_PriText();
	this.text.getElement().css("white-space","pre-wrap");
	this.set_scrollerX(true);
	this.set_scrollerY(true);
	this.text.set_mouseEnabled(true);
	this.text.set_fontStyle(new priori_style_font_PriFontStyle(8583557,"Courier"));
	this.addChild(this.text);
	this.set_bgColor(2500134);
};
view_LogMessageView.__name__ = true;
view_LogMessageView.__super__ = priori_view_container_PriScrollableContainer;
view_LogMessageView.prototype = $extend(priori_view_container_PriScrollableContainer.prototype,{
	paint: function() {
		this.text.set_x(50);
		this.text.set_y(20);
	}
	,setMessage: function(msg) {
		var fIndex = msg.indexOf("{");
		var lIndex = msg.lastIndexOf("}");
		if(fIndex > -1 && lIndex > -1) {
			var jsnOut = "";
			var jsonSubstr = HxOverrides.substr(msg,fIndex,lIndex - fIndex + 1);
			window.console.log(jsonSubstr);
			try {
				jsnOut = haxe_format_JsonPrinter.print(JSON.parse(jsonSubstr),null," ");
				this.text.set_text(HxOverrides.substr(msg,0,fIndex) + jsnOut + "\r" + HxOverrides.substr(msg,lIndex + 1,msg.length - lIndex - 1) + "\r");
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				window.console.log("Cant parse json " + Std.string(e));
				this.text.set_text(msg + "\r");
			}
			window.console.log(jsnOut);
		} else {
			this.text.set_text(msg + "\r");
		}
	}
	,countBraces: function(s) {
		var bc = { open : 0, close : 0};
		var _g1 = 0;
		var _g = s.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(s.charAt(i) == "{") {
				bc.open++;
			} else if(s.charAt(i) == "}") {
				bc.close++;
			}
		}
		return bc;
	}
	,__class__: view_LogMessageView
});
var view_Menu = function(model) {
	priori_view_container_PriGroup.call(this);
	this.model = model;
};
view_Menu.__name__ = true;
view_Menu.__super__ = priori_view_container_PriGroup;
view_Menu.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setup: function() {
		var _gthis = this;
		this.model.parser = new NarcosLogParser();
		this.set_bgColor(3158064);
		this.scroller = new priori_view_container_PriScrollableContainer();
		this.addChild(this.scroller);
		this.model.btList = new haxe_ds_StringMap();
		this.copy2ClipboardButton = new priori_bootstrap_PriBSFormButton();
		this.copy2ClipboardButton.set_text("Full Session Log");
		this.copy2ClipboardButton.addEventListener("mouseup",function(data) {
			window.open("","_blank").document.body.innerText = _gthis.model.getFullSessionLog();
		});
		this.addChild(this.copy2ClipboardButton);
		this.initDropzone();
		this.initUrlInput();
	}
	,onFilesDropped: function(e) {
		var _gthis = this;
		var promises = [];
		var _g = 0;
		var _g1 = e.files;
		while(_g < _g1.length) {
			var file = _g1[_g];
			++_g;
			var key = file.name;
			var _this = this.model.btList;
			if(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key)) {
				continue;
			}
			promises.push(this.processFile(file));
		}
		Promise.all(promises).then(function(_) {
			_gthis.updateRecords();
			_gthis.invalidate();
			_gthis.paint();
		});
	}
	,onFileLoaded: function(e) {
		this.prcessNameContent("noname.txt",e.data);
		this.updateRecords();
	}
	,paint: function() {
		priori_view_container_PriGroup.prototype.paint.call(this);
		var y = 0;
		this.dropzone.set_width(this.get_width());
		this.dropzone.set_height(this.get_width());
		y += this.dropzone.get_height();
		this.urlInput.set_width(this.get_width());
		this.urlInput.set_height(60);
		this.urlInput.set_y(y);
		y += this.urlInput.get_height();
		this.copy2ClipboardButton.set_y(y);
		this.copy2ClipboardButton.set_x(this.get_width() / 2 - this.copy2ClipboardButton.get_width() / 2);
		y += this.copy2ClipboardButton.get_height();
		this.scroller.set_y(y);
		var i = 0;
		this.scroller.set_width(this.get_width());
		this.scroller.set_height(this.get_height());
		var _this = this.model.btList;
		var rec = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(rec.hasNext()) {
			var btn = rec.next().button;
			btn.set_width(this.get_width());
			btn.set_height(40);
			btn.set_x(0);
			btn.set_y(i * 40);
			++i;
		}
	}
	,updateRecords: function() {
		this.model.parser.reset();
		var _this = this.model.btList;
		var rec = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(rec.hasNext()) {
			var rec1 = rec.next();
			try {
				this.model.parser.addFile(rec1.name,rec1.content);
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				this.model.setStatus(e);
			}
		}
		this.model.updateData();
		this.invalidate();
		this.paint();
	}
	,processFile: function(file) {
		var _gthis = this;
		var promise = new Promise(function(resolve,reject) {
			var fr = new FileReader();
			fr.onloadend = function(e) {
				resolve(fr.result);
			};
			fr.onerror = function(e1) {
				js_Browser.alert(e1);
				resolve("");
			};
			fr.readAsArrayBuffer(file);
		});
		return promise.then(function(result) {
			if(file.name.toLowerCase().indexOf(".zip") > 0) {
				var bytes = haxe_io_Bytes.ofData(result);
				var entries = haxe_zip_Reader.readZip(new haxe_io_BytesInput(bytes));
				window.console.log("Start " + entries.length);
				var _g_head = entries.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var entry = val;
					var entryData = entry.data.b.bufferValue;
					entryData = window.pako.inflateRaw(entryData);
					entry.data = haxe_io_Bytes.ofData(entryData);
					var entry1 = entry.fileName;
					var tmp = entry.data.getString(0,entry.data.length);
					_gthis.prcessNameContent(entry1,tmp);
				}
			} else {
				var data = haxe_io_Bytes.ofData(result);
				var file1 = file.name;
				var tmp1 = data.getString(0,data.length);
				_gthis.prcessNameContent(file1,tmp1);
			}
		});
	}
	,prcessNameContent: function(name,content) {
		if(this.model.parser.isFilenameValid(name)) {
			this.addFile(name,content);
		} else if(format_OldPlameeLogNameExtractor.extraxtFileName(content) != null) {
			this.addFile(format_OldPlameeLogNameExtractor.extraxtFileName(content),content);
		} else {
			js_Browser.alert("Something wrong with file " + name);
		}
	}
	,addFile: function(name,content) {
		var _this = this.model.btList;
		if(__map_reserved[name] != null?_this.existsReserved(name):_this.h.hasOwnProperty(name)) {
			this.removeFile(name);
		}
		var f = $bind(this,this.removeFile);
		var a1 = name;
		var btn = new components_MenuButton(name,function() {
			f(a1);
		});
		var _this1 = this.model.btList;
		var value = { name : name, content : content, button : btn};
		if(__map_reserved[name] != null) {
			_this1.setReserved(name,value);
		} else {
			_this1.h[name] = value;
		}
		this.scroller.addChild(btn);
	}
	,removeFile: function(name) {
		var _this = this.model.btList;
		var rec = __map_reserved[name] != null?_this.getReserved(name):_this.h[name];
		this.scroller.removeChild(rec.button);
		rec.button.kill();
		this.model.btList.remove(name);
		this.updateRecords();
	}
	,initDropzone: function() {
		this.dropzone = new components_Dropzone();
		this.dropzone.set_width(this.get_width());
		this.dropzone.set_height(this.get_width());
		this.dropzone.addEventListener("FILE_DROPPED",$bind(this,this.onFilesDropped));
		this.addChild(this.dropzone);
	}
	,initUrlInput: function() {
		this.urlInput = new components_UrlLoaderComponent();
		this.urlInput.set_width(this.get_width());
		this.urlInput.set_height(60);
		this.urlInput.addEventListener(priori_event_PriEvent.COMPLETE,$bind(this,this.onFileLoaded));
		this.addChild(this.urlInput);
	}
	,__class__: view_Menu
});
var view_datagrid_LogCellRenderer = function(colorProvider) {
	this.selectedColors = { main : 14737632, bg : 9474192};
	priori_view_grid_cell_PriGridCellRenderer.call(this);
};
view_datagrid_LogCellRenderer.__name__ = true;
view_datagrid_LogCellRenderer.__super__ = priori_view_grid_cell_PriGridCellRenderer;
view_datagrid_LogCellRenderer.prototype = $extend(priori_view_grid_cell_PriGridCellRenderer.prototype,{
	update: function() {
		if(this.canPaint()) {
			this.label.set_text(this.get_value());
		}
	}
	,setup: function() {
		this.label = new priori_view_text_PriText();
		this.label.set_autoSize(false);
		this.label.set_multiLine(false);
		this.label.set_text(this.get_value());
		this.label.set_height(null);
		this.label.set_fontStyle(new priori_style_font_PriFontStyle());
		this.addChild(this.label);
	}
	,paint: function() {
		priori_view_grid_cell_PriGridCellRenderer.prototype.paint.call(this);
		var space = 10;
		this.label.set_width(this.get_width() - space * 2);
		this.label.set_height(null);
		this.label.set_x(space);
		this.label.set_centerY(this.get_height() / 2);
		var fs = this.label.fontStyle;
		var color = this.getColor();
		fs.color = color.main;
		this.set_bgColor(color.bg);
		this.label.set_fontStyle(fs);
	}
	,getColor: function() {
		if(this.isSelected()) {
			return this.selectedColors;
		}
		if(this.get_data().level > 0) {
			var tmp;
			switch(this.get_data().level) {
			case 2:
				tmp = "[Warning]";
				break;
			case 4:
				tmp = "[Error]";
				break;
			case 8:
				tmp = "[Exception]";
				break;
			default:
				tmp = "";
			}
			return view_datagrid_LogCellRenderer.colorProvider.getColor(tmp);
		}
		return view_datagrid_LogCellRenderer.colorProvider.getColor(this.get_data().tag);
	}
	,isSelected: function() {
		if(view_datagrid_LogCellRenderer.selectionChecker == null) {
			return false;
		}
		return view_datagrid_LogCellRenderer.selectionChecker(this.get_data());
	}
	,__class__: view_datagrid_LogCellRenderer
});
var view_datagrid_LogHeaderRenderer = function() {
	priori_view_grid_header_PriGridHeaderRenderer.call(this);
};
view_datagrid_LogHeaderRenderer.__name__ = true;
view_datagrid_LogHeaderRenderer.__super__ = priori_view_grid_header_PriGridHeaderRenderer;
view_datagrid_LogHeaderRenderer.prototype = $extend(priori_view_grid_header_PriGridHeaderRenderer.prototype,{
	update: function() {
		if(this.canPaint()) {
			this.label.set_text(this.title);
		}
	}
	,setup: function() {
		this.set_bgColor(0);
		this.label = new priori_view_text_PriText();
		this.label.set_autoSize(false);
		this.label.set_multiLine(false);
		this.label.set_text(this.title);
		this.label.set_height(null);
		this.label.set_fontStyle(new priori_style_font_PriFontStyle(9474192,null,priori_style_font_PriFontStyleWeight.BOLD));
		this.addChild(this.label);
	}
	,paint: function() {
		var space = 10;
		this.label.set_x(space);
		this.label.set_centerY(this.get_height() / 2);
		this.label.set_width(this.get_width() - space * 2);
	}
	,__class__: view_datagrid_LogHeaderRenderer
});
var view_datagrid_LogRowColorProvider = function() {
	this.mapping = new haxe_ds_StringMap();
	var _this = this.mapping;
	var value = { main : 0, bg : 16777215};
	if(__map_reserved["[default]"] != null) {
		_this.setReserved("[default]",value);
	} else {
		_this.h["[default]"] = value;
	}
	var _this1 = this.mapping;
	var value1 = { bg : 1512745, main : 14423844};
	if(__map_reserved["[Warning]"] != null) {
		_this1.setReserved("[Warning]",value1);
	} else {
		_this1.h["[Warning]"] = value1;
	}
	var _this2 = this.mapping;
	var value2 = { bg : 2692373, main : 14236940};
	if(__map_reserved["[Error]"] != null) {
		_this2.setReserved("[Error]",value2);
	} else {
		_this2.h["[Error]"] = value2;
	}
	var _this3 = this.mapping;
	var value3 = { bg : 2824986, main : 13135892};
	if(__map_reserved["[Exception]"] != null) {
		_this3.setReserved("[Exception]",value3);
	} else {
		_this3.h["[Exception]"] = value3;
	}
	var _this4 = this.mapping;
	var value4 = { bg : 2500134, main : 13098007};
	if(__map_reserved["[Log]"] != null) {
		_this4.setReserved("[Log]",value4);
	} else {
		_this4.h["[Log]"] = value4;
	}
	var _this5 = this.mapping;
	var value5 = { bg : 2564638, main : 12351844};
	if(__map_reserved["[INIT]"] != null) {
		_this5.setReserved("[INIT]",value5);
	} else {
		_this5.h["[INIT]"] = value5;
	}
	var _this6 = this.mapping;
	var value6 = { bg : 1709088, main : 4092595};
	if(__map_reserved["[INFO]"] != null) {
		_this6.setReserved("[INFO]",value6);
	} else {
		_this6.h["[INFO]"] = value6;
	}
	var _this7 = this.mapping;
	var value7 = { bg : 2040853, main : 14264332};
	if(__map_reserved["[LOCALE]"] != null) {
		_this7.setReserved("[LOCALE]",value7);
	} else {
		_this7.h["[LOCALE]"] = value7;
	}
	var _this8 = this.mapping;
	var value8 = { bg : 1385502, main : 10079645};
	if(__map_reserved["[AUTH]"] != null) {
		_this8.setReserved("[AUTH]",value8);
	} else {
		_this8.h["[AUTH]"] = value8;
	}
	var _this9 = this.mapping;
	var value9 = { bg : 1384228, main : 9938100};
	if(__map_reserved["[NETWORK]"] != null) {
		_this9.setReserved("[NETWORK]",value9);
	} else {
		_this9.h["[NETWORK]"] = value9;
	}
	var _this10 = this.mapping;
	var value10 = { bg : 1314569, main : 14264332};
	if(__map_reserved["[RESOURCES]"] != null) {
		_this10.setReserved("[RESOURCES]",value10);
	} else {
		_this10.h["[RESOURCES]"] = value10;
	}
	var _this11 = this.mapping;
	var value11 = { bg : 594958, main : 1563820};
	if(__map_reserved["[SERVER]"] != null) {
		_this11.setReserved("[SERVER]",value11);
	} else {
		_this11.h["[SERVER]"] = value11;
	}
	var _this12 = this.mapping;
	var value12 = { bg : 593684, main : 9400660};
	if(__map_reserved["[SL]"] != null) {
		_this12.setReserved("[SL]",value12);
	} else {
		_this12.h["[SL]"] = value12;
	}
	var _this13 = this.mapping;
	var value13 = { bg : 1050900, main : 14251020};
	if(__map_reserved["[CHEATS]"] != null) {
		_this13.setReserved("[CHEATS]",value13);
	} else {
		_this13.h["[CHEATS]"] = value13;
	}
	var _this14 = this.mapping;
	var value14 = { bg : 1050900, main : 4092595};
	if(__map_reserved["[TUTORIAL]"] != null) {
		_this14.setReserved("[TUTORIAL]",value14);
	} else {
		_this14.h["[TUTORIAL]"] = value14;
	}
};
view_datagrid_LogRowColorProvider.__name__ = true;
view_datagrid_LogRowColorProvider.prototype = {
	setColorMapping: function(tag,color) {
		var _this = this.mapping;
		if(__map_reserved[tag] != null) {
			_this.setReserved(tag,color);
		} else {
			_this.h[tag] = color;
		}
	}
	,hasMapping: function(tag) {
		var _this = this.mapping;
		if(__map_reserved[tag] != null) {
			return _this.existsReserved(tag);
		} else {
			return _this.h.hasOwnProperty(tag);
		}
	}
	,getColor: function(tag) {
		var _this = this.mapping;
		if(__map_reserved[tag] != null?_this.existsReserved(tag):_this.h.hasOwnProperty(tag)) {
			var _this1 = this.mapping;
			if(__map_reserved[tag] != null) {
				return _this1.getReserved(tag);
			} else {
				return _this1.h[tag];
			}
		} else {
			var _this2 = this.mapping;
			return new haxe_ds__$StringMap_StringMapIterator(_this2,_this2.arrayKeys()).next();
		}
	}
	,__class__: view_datagrid_LogRowColorProvider
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
priori_app_PriApp.__meta__ = { fields : { set_width : { noCompletion : null}, get_width : { noCompletion : null}, set_height : { noCompletion : null}, get_height : { noCompletion : null}, set_x : { noCompletion : null}, get_x : { noCompletion : null}, set_y : { noCompletion : null}, get_y : { noCompletion : null}}};
components_Dropzone.COLOR_IDLE = 5263440;
components_Dropzone.COLOR_HOVER = 7368816;
priori_event_PriEvent.COMPLETE = "prievent_base_complete";
priori_event_PriEvent.START = "prievent_base_start";
priori_event_PriEvent.STOP = "prievent_base_stop";
priori_event_PriEvent.CANCEL = "prievent_base_cancel";
priori_event_PriEvent.OK = "prievent_base_ok";
priori_event_PriEvent.SAVE = "prievent_base_save";
priori_event_PriEvent.DELETE = "prievent_base_delete";
priori_event_PriEvent.ERROR = "prievent_base_error";
priori_event_PriEvent.CHANGE = "prievent_base_change";
priori_event_PriEvent.RESIZE = "prievent_base_resize";
priori_event_PriEvent.TICK = "prievent_base_tick";
priori_event_PriEvent.SCROLL = "prievent_base_scroll";
priori_event_PriEvent.ADD_ITEM = "prievent_base_add_item";
priori_event_PriEvent.REMOVE_ITEM = "prievent_base_remove_item";
priori_event_PriEvent.OPEN = "prievent_base_open";
priori_event_PriEvent.CLOSE = "prievent_base_close";
priori_event_PriEvent.PRESS_ENTER = "prievent_base_pressenter";
priori_event_PriEvent.ADDED_TO_APP = "prievent_base_addedToApp";
priori_event_PriEvent.REMOVED_FROM_APP = "prievent_base_removedFromApp";
priori_event_PriEvent.ADDED = "prievent_base_addedToContainer";
priori_event_PriEvent.REMOVED = "prievent_base_removedFromContainer";
components_FilesDroppedPriEvent.FILE_DROPPED = "FILE_DROPPED";
priori_view_form_PriFormElementBase.__meta__ = { fields : { get_fieldId : { noCompletion : null}}};
data__$LogLevel_LogLevel_$Impl_$.log = 0;
data__$LogLevel_LogLevel_$Impl_$.warning = 2;
data__$LogLevel_LogLevel_$Impl_$.error = 4;
data__$LogLevel_LogLevel_$Impl_$.exception = 8;
format_OldPlameeLogNameExtractor.first = new EReg(".*started at\\s(\\d+).(\\d+).(\\d\\d\\d\\d)\\s(\\d+).(\\d+).(\\d+).*","");
format_OldPlameeLogNameExtractor.secondary = new EReg(".*index: (\\d+) at\\s(\\d+).(\\d+).(\\d\\d\\d\\d)\\s(\\d+).(\\d+).(\\d+).*","");
format_PlameeLogFormat.messagePattern = new EReg("((Warning|Log|Exception|Error)\\s---([\\d:APM\\s]+)---)\\s*(\\[\\w+\\])?(.+)","m");
format_PlameeLogFormat.newLinePattern = new EReg("\r","gim");
format_PlameeLogFormat.commaWithoutSpace = new EReg(",([^\\s])","gim");
haxe_io_FPHelper.i64tmp = new haxe__$Int64__$_$_$Int64(0,0);
haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];
haxe_zip_InflateImpl.LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];
haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];
haxe_zip_InflateImpl.DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];
haxe_zip_InflateImpl.CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
helper_browser_BrowserEventEngine.SPECIAL_EVENT_LIST = ["mouseleave","mouseenter","mousedown","mouseup","click","keyup","keydown","focusin","focusout"];
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
priori_assets_AssetManagerEvent.ASSET_COMPLETE = "AssetManagerComplete";
priori_assets_AssetManagerEvent.ASSET_ERROR = "AssetManagerError";
priori_assets_AssetManagerEvent.ASSET_PROGRESS = "AssetManagerProgress";
priori_event_PriFocusEvent.FOCUS_IN = "focusin";
priori_event_PriFocusEvent.FOCUS_OUT = "focusout";
priori_event_PriKeyboardEvent.KEY_DOWN = "keydown";
priori_event_PriKeyboardEvent.KEY_UP = "keyup";
priori_event_PriMouseEvent.MOUSE_OVER = "mouseenter";
priori_event_PriMouseEvent.MOUSE_OUT = "mouseleave";
priori_event_PriSwipeEvent.SWIPE = "swipe";
priori_event_PriSwipeEvent.SWIPE_UP = "swipeup";
priori_event_PriSwipeEvent.SWIPE_RIGHT = "swiperight";
priori_event_PriSwipeEvent.SWIPE_DOWN = "swipedown";
priori_event_PriSwipeEvent.SWIPE_LEFT = "swipeleft";
priori_event_PriSwipeEvent.SWIPE_END = "swipeend";
priori_event_PriTapEvent.TAP = "click";
priori_event_PriTapEvent.TAP_DOWN = "mousedown";
priori_event_PriTapEvent.TAP_UP = "mouseup";
priori_event_PriTapEvent.TAP_START = "tapstart";
priori_event_PriTapEvent.TAP_END = "tapend";
priori_event_PriTapEvent.TAP_MOVE = "mousemove";
priori_event_PriTapEvent.SINGLETAP = "singletap";
priori_style_font_PriFontStyle.DEFAULT_COLOR = 0;
priori_style_font_PriFontStyle.DEFAULT_FAMILY = "Arial, Helvetica, sans-serif";
priori_view_form_PriFormCheckBox.__meta__ = { fields : { get_value : { noCompletion : null}}};
priori_view_grid_PriDataGridEvent.GRID_CLICK = "PRI_DATA_GRID_CLICK";
priori_view_grid_PriDataGridEvent.CELL_OVER = "PRI_DATA_GRID_CELL_OVER";
priori_view_grid_PriDataGridEvent.SORT = "PRI_DATA_GRID_SORT";
priori_view_grid_cell_PriGridCellRenderer.SPECIAL_COLUMN_INDEX = "#COL_INDEX";
priori_view_grid_cell_PriGridCellRenderer.SPECIAL_ROW_LINE = "#ROW_LINE";
priori_view_grid_header_PriGridHeader.__meta__ = { fields : { set_columns : { noCompletion : null}, get_columns : { noCompletion : null}}};
priori_view_grid_header_PriGridHeaderRenderer.__meta__ = { fields : { set_title : { noCompletion : null}}};
view_ColorRecords.theme = [{ bg : 2630700, main : 13910417},{ bg : 1581593, main : 16755280},{ bg : 3751735, main : 14251277},{ bg : 2630700, main : 13910417},{ bg : 1581593, main : 16755280},{ bg : 3751735, main : 14251277},{ bg : 2630700, main : 13910417},{ bg : 1581593, main : 16755280},{ bg : 3751735, main : 14251277},{ bg : 2630700, main : 13910417},{ bg : 1581593, main : 16755280},{ bg : 3751735, main : 14251277},{ bg : 2630700, main : 13910417},{ bg : 1581593, main : 16755280},{ bg : 3751735, main : 14251277},{ bg : 2630700, main : 13910417},{ bg : 1581593, main : 16755280},{ bg : 3751735, main : 14251277}];
view_ContentScene.CONTROLS_HEIGHT = 130;
MainBuild7.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
